{
  "version": "2.0",
  "nlu": [
    {
      "intent": "welcome",
      "examples": "- Hey\n- What's up?\n- Hi\n- Hello\n"
    },
    {
      "intent": "thanks",
      "examples": "- I'm so happy\n- that's great\n- amazing\n- awesome\n- great\n- Thanks a lot!\n- thank you!\n"
    },
    {
      "intent": "goodbye",
      "examples": "- Great! Bye!\n- Bye bye!\n- See you later then!\n- Ok, see you!\n"
    },
    {
      "intent": "cancel",
      "examples": "- Start over\n- Please cancel\n- Cancel\n"
    },
    {
      "intent": "confirm",
      "examples": "- sure\n- okay\n- sounds correct\n- that works\n- yep that's ok\n- yes that's alright\n- I think so\n- sg\n- yes I agree\n- I don't mind\n- I agree\n- yes I do\n- for sure\n- ok\n- yes that't ok\n- that one works\n- yes you can do it\n- perfect\n- yes\n- why not\n- of course\n- yep that's right\n- okay I will\n- exactly\n- sure why not\n- absolutely\n- it's okay\n- it's fine\n- go ahead\n- confirm\n- sounds good\n- alright\n- yeah\n- yup\n- yes please\n- do it\n- yes I can\n- it looks perfect\n- that's correct\n- right\n- alright why not\n- yep\n"
    },
    {
      "intent": "reject",
      "examples": "- don't\n- nope not really\n- no that's be all\n- not right now\n- thanks but no\n- not\n- no we are good\n- nothing else\n- not interested\n- nah I'm good\n- definitely not\n- no never\n- never\n- nah\n- nothing\n- no maybe next time\n- I don't want that\n- no not really\n- no that's ok\n- no no don't\n- na\n- no way no\n- I can't\n- no thanks\n- not at all\n- not really\n- I don't\n- no I cannot\n- no that's okay\n- nope\n- I don't think so\n- no it isn't\n- thanks but not this time\n- no that's fine thank you\n- no don't\n- don't do it\n- I don't want\n- not today\n- I'm not\n- no way\n- no\n- I disagree\n- not this time\n- nothing else thanks\n"
    },
    {
      "intent": "build",
      "examples": "- Lumi, for the [guest network](location), [limit](qos_constraint) the traffic of [torrent](traffic) protocol to [100](qos_value) [mbps](qos_unit)\n- [unblock](operation) [facebook](service)\n- [unblock](operation) [traffic](traffic)\n- [block](operation) [facebook](service)\n- [Block](operation) [F2movies traffic](service) from [Internet](location) to [Labs](location)\n- [Block](operation) [F2movies traffic](service) from [Internet](location) to [student Labs](location)\n- [Add](operation) [DPI](middlebox) middlebox into [all traffic](traffic) from [Internet](location) to the [Labs](location)\n- [All traffic](traffic) from the [Internet](location) to the [Labs](location) has to go to [DPI](middlebox) server and then goes to the Labs\n- [add](operation) [dpi](middlebox) to [labs](location) [network](location)\n- Hey Lumi, [add](operation) [DPI](middlebox) to the [labs](location) network\n- hey Lumi, [add](operation) [dpi](middlebox) to [labs](location)\n- [limit](qos_constraint) [servers](location) [bandwidth](qos_metric) to [5](qos_value) [gbps](qos_unit) between [4pm](hour) and [7pm](hour)\n- [unblock](operation) [facebook traffic](service)\n- [allow](operation) [all traffic](traffic)\n- [block](operation) all [student](group) [traffic](traffic) in the [network](location)\n- [block](operation) all [student](group) [traffic](traffic)\n- [block](operation) [all traffic](traffic)\n- [Limit](qos_constraint) [students](group) in the [dorm](location) to [10](qos_value) [GB per week](qos_unit)\n- Make sure [all traffic](traffic) from the [Internet](location) to the [labs](location) is [inspected](middlebox) by the [DPI](middlebox) middlebox\n- Between [internet](location) and [servers](location) [limit](qos_constraint) [traffic](traffic) to [5](qos_value) [Gbps](qos_unit) start [16:00](hour) finish [19:00](hour)\n- Between [internet](location) and [servers](location) [limit](qos_constraint) [traffic](traffic) to [5](qos_value) [Gbps](qos_unit) interval [4pm](hour) to [7pm](hour)\n- [limit](qos_constraint) the [bandwidth](qos_metric) to [5](qos_value) [Gb](qos_unit) for rack [servers](location) from [4 pm](hour) until [7 pm](hour)\n- [limit](qos_constraint) [traffic](traffic) to [5](qos_value) [Gbps](qos_unit) between [internet](location) and [servers](location) [or [16:00](hour) to [19:00](hour)\n- [set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit) at [labs](location)\n- [set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit) at [servers](location)\n- [Set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit) [dorms](location)\n- [Set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit) at [guest](location)\n- [Set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit) at [dorms](location)\n- [set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit) at [LAN](location)\n- [block](operation) [all traffic](traffic) at [Dorms](location) location\n- [Limit](qos_constraint) [traffic](traffic) to [10](qos_value) [GB per week](qos_unit) at [Dorms](location)\n- for endpoint [dorms](location) [set](operation) [quota](qos_metric) [download](qos_constraint) [10](qos_value) [gb/wk](qos_unit)\n- At endpoint [Dorms](location) [set](operation) [quota](qos_metric) to [10](qos_value) [GB per week](qos_unit)\n- [Students](group) shall [download](qos_constraint) [no more than](qos_metric) [1000000](qos_value) [MB per week](qos_unit)\n- hey lumi, please [add](operation) a [DPI](middlebox) to ensure [students](group) from the [labs](location) are not accessing suspicious applications\n- [Limit](qos_constraint) rack [servers](location) to [5](qos_value) [gbps](qos_unit) during [5pm](hour) to [7pm](hour)\n- [Limit](qos_constraint) [servers](location) to [5](qos_value) [gbps](qos_unit) during [5pm](hour) to [7pm](hour)\n- [Set](operation) [5](qos_value) [gbps](qos_unit) [limit](qos_constraint) for [servers](location) during [4pm](hour) to [7pm](hour)\n- please lumi, [block](operation) [f2movies traffic](service) from [internet](location) to [students](group) [labs](location)\n- hey lumi, please [allow](operation) [traffic](traffic) only from [professors](group)\n- please lumi, [define](operation) [dorms](location) [quota](qos_metric) to [10](qos_value) [gb per week](qos_unit)\n- [Students](group) shall [download](qos_constraint) [no more than](qos_metric) [1000000](qos_value) [megabytes per week](qos_unit)\n- please [limit](qos_constraint) [bandwidth](qos_metric) to [5](qos_value) [Gigabits per second](qos_unit) for the [server racks](location) everyday from [4 PM](hour) to [7PM](hour)\n- [limit](qos_constraint) the [bandwidth](qos_metric) in [server racks](location) to [5](qos_value) [gbps](qos_unit) between [4pm](hour) and [7pm](hour)\n- I want the [torrent traffic](traffic) from [guest users](group) to be [no more than](qos_metric) [100](qos_value) [mbps](qos_unit)\n- [limit](qos_constraint) [network usage](qos_metric) of all [students](group) in the [dorms](location) to no more than [10](qos_value) [gb per seven days](qos_unit)\n- [prevent](operation) all [f2movies traffic](service) from reaching the [students](group) in the [labs](location)\n- [Add](operation) [monitor](middlebox) for the [university](location) from [4am](hour) to [10pm](hour)\n- [set](operation) a [maximum](qos_constraint) of [5](qos_value) [gbps](qos_unit) to the [servers](location) from [4pm](hour) to [7pm](hour)\n- [students](group) should [download](qos_constraint) [no more than](qos_metric) [10](qos_value) [GB of data in a week](qos_unit)\n- [set](operation) [torrent traffic](traffic) from [guests](group) to [100](qos_value) [mbps](qos_unit)\n- From [internet](location) to [Labs](location) [add](operation) [DPI](middlebox)\n- From [internet](location) to [Labs](location) [block](operation) [F2movies](service)\n- [limit](qos_constraint) the [bandwidth rate](qos_metric) of the [server racks](location) to [5](qos_value) [gbps](qos_unit) from [4pm](hour) to [7pm](hour)\n- [block](operation) [traffic](traffic) of the [server racks](location)\n- [block](operation) [all traffic](traffic) for the [server racks](location)\n- [limit](qos_constraint) to [100](qos_value) [Mbps](qos_unit) the [bandwidth](qos_metric) [torrent traffic](traffic) can consume\n- [forward](operation) [traffic](traffic) for [labs](location) through the [dpi](middlebox)\n- put a [download](qos_constraint) [quota](qos_metric) for [students](group) of [10](qos_value) [gb per week](qos_unit)\n- [limit](qos_constraint) [torrent traffic](traffic) to [100](qos_value) [mbps](qos_unit)\n- [block](operation) [F2movies traffic](service) for [students](group) in the [labs](location)\n- [set](operation) a [10](qos_value) [GB per week](qos_unit) [download](qos_constraint) [quota](qos_metric) for [students](group) in [dorms](location)\n- ensure that [all traffic](traffic) from the [Internet](location) to the [labs](location) is carefully inspected by the [Deep Packet Inspection](middlebox) middlebox\n- [limit](qos_constraint) [torrent traffic](traffic) for [guests](group) to [100](qos_value) [Mbps](qos_unit)\n- [inspect](middlebox) [all](traffic) [internet](location) traffic\n- [Students](group) can [download](qos_constraint) up to [10](qos_value) [GB per week](qos_unit) of [data](qos_metric).\n- [Limit](qos_constraint) [bandwidth](qos_metric) usage to [50](qos_value) [mbps](qos_unit) for [professors](group).\n- Please make traffic coming from the [Internet](location) [pass through](operation) a [firewall](middlebox).\n- Hey Lumi please [block](operation) [traffic](traffic) for all [students](group)\n- [add](operation) a [firewall](middlebox)\n- From [gateway](location) to [network](location) [add](operation) middlebox [firewall](middlebox)\n- From [my house](location) to [PUCRS](location) [add](operation) middlebox [dpi](middlebox)\n- From [dorms](location) to [internet](location) [add](operation) [nat](middlebox)\n- From [university](location) to [internet](location) [add](operation) [firewall](middlebox)\n- Please add [traffic shaper](middlebox) between the [internet](location) and the [dorms](location)\n- Please, [block](operation) [netflix](service) traffic on [PUC](location)\n- [Block](operation) [streaming traffic](traffic) on [UFRGS](location)\n- [Add](operation) [inspection](middlebox) for the [university](location) [from 10pm](hour) [to 12pm](hour)\n- [Block](operation) traffic from [netflix](location)\n- Add [monitor](middlebox) for the [university](location) from [04:00](hour) to [22:00](hour)\n- [Add](operation) [traffic monitor](middlebox) from [PUC](location) to [UFRGS](location)\n- add [shaping](middlebox) for [gateway](location) everyday from [18:00](hour) to [midnight](hour)\n- Add a [firewall](middlebox) and [address translation](middlebox) for [att](group) and [verizon](group)\n- [Define](operation) a [quota](qos_metric) of [10](qos_value) [GB per week](qos_unit) for all [students](group)\n- [Dorms](location) traffic to [internet](location) [must pass through](operation) a [firewall](middlebox)\n- We provide a [quota](qos_metric) to all [students](group) of [1](qos_value) [GB/wk](qos_unit) of usage.\n- [Add](operation) [inspection](middlebox) for the [university](location) from [22:00](hour) to [12:00](hour)\n- [Remove](operation) [firewall](middlebox) from the [university](location) to [my house](location)\n- [add](operation) [security](middlebox) from [entry](location) to [backend](location)\n- From [gateway](location) to [my network](location) [remove](operation) [nat](middlebox)\n- [Remove](operation) [load balancing](middlebox) from [gateway](location) to [database](location)\n- [Add](operation) [firewall](middlebox) from [gateway](location) to [my house](location) from [06:00](hour) to [21:00](hour)\n- [Remove](operation) [nat](middlebox) for [gateway](location) everyday from [18:00](hour) to [midnight](hour)\n- We [provide](operation) a data plan [quota](qos_metric) for all [staff](group) of [10](qos_value) [GB per day](qos_unit)\n- We [provide](operation) a [quota](qos_metric) to all [students](group) of [1](qos_value) [GB per week](qos_unit) of usage\n- Please Lumi, [block](operation) [streaming traffic](traffic) for [students](group) and [set](operation) a [10](qos_value) [Mbps](qos_unit) [bandwidth](qos_metric) limit\n- Please [allow](operation) [social media](traffic) for the [HR department](location)\n- [Let](operation) [students](group) access [Facebook](service)\n- [Do no let](operation) [students](group) access [Netflix](service) from the [laboratories](location) to the [internet](location)\n- [Block](operation) [all traffic](traffic) from [HR](location) to the [backend servers](location)\n- [Students](group) [may use](qos_metric) up to [10](qos_value) [GB of data weekly](qos_unit)\n- [Block](operation) [streaming](traffic) and [gaming](traffic) traffic in [classrooms](location)\n- [Add](operation) [intrusion detection](middlebox) and [address translation](middlebox) for [servers](location) network\n- [Dismiss](operation) [rate limiting](qos_metric) for [faculty](group) members\n- [Dismiss](operation) [all middleboxes](middlebox) from [UFRGS](location) to [PUCRS](location)\n- [Include](operation) [parental control](middlebox) for [PlayStation](service)\n- [Do not let](operation) [Staff members](group) access any [social media](traffic)\n- [Set](operation) [users](group) [bandwidth](qos_metric) to [500](qos_value) [kbps](qos_unit) when the [100](qos_value) [Gb per month](qos_unit) [quota](qos_metric) is reached\n- [Prioritize](middlebox) [Netflix](service) traffic from [18:00](hour) to [midnight](hour)\n- [Balance](middlebox) traffic coming from [gateway](location) to [application servers](location)\n- [Block](operation) [torrent traffic](traffic) for all [students](group)\n- [Block](operation) [bittorrent](service) for [professors](group)\n- [Staff](group) [is allowed to](operation) access [ftp](protocol)\n- [Students](group) [cannot run](operation) [file servers](service)\n- [Add](operation) [parental control](middlebox) from [my house](location) to [internet](location)\n- [Students](group) [should not use more than](qos_metric) [five](qos_value) [gigabytes of bandwidth per week](qos_unit)\n- [Block](operation) all incoming [HTTP](protocol) traffic, [allow](operation) only [HTTPS](protocol) for all [hosts](location)\n- [Permit](operation) [gaming](traffic) for [PS4](location) from [13:00](hour) to [18:00](hour)\n- [Email](service) traffic [is allowed](operation) for [Staff members](group)\n- [Grant](operation) [SFTP](protocol) access to all [students](group) from [08:00](hour) to [17:00](hour)\n- [Dismiss](operation) all [rate limits](qos_metric) and [quotas](qos_metric) for all [hosts](location)\n- [Prioritize](middlebox) [VoIP](traffic) traffic on the [meeting room 23](location) from [13:00](hour) to [14:00](hour)\n- [Forward](operation) all the [external](location) traffic to [DMZ](location)\n- [Limit](qos_constraint) in [10](qos_value) [Mbps](qos_unit) the [download rate](qos_metric) of [dorms](location) from [internet](location)\n- Lumi, [block](operation) [SIP traffic](protocol) from [19:00](hour) to [08:00](hour) for [dorms](location)\n- [Grant](operation) [SSH](protocol) access [to professors](group)\n- [Setup](operation) a [packet filter](middlebox) for [guests](group) traffic\n- Lumi, please [set](operation) to [1](qos_value) [GB per day](qos_unit) the [download limit](qos_metric) for [guests](group)\n- Lumi, [prohibit](operation) access to [internal campus computers](location) from the [internet](location)\n- [Increase](operation) the [bandwidth consumption limit](qos_metric) for [professors](group) to [100](qos_value) [Mbps](qos_unit)\n- [Allow](operation) [RTSP](protocol) traffic in the [LAN](location)\n- Lumi, please [install](operation) an [email scanner](middlebox) for the [gateway](location)\n- Lumi, [block](operation) [VoIP](traffic) traffic from [00:00](hour) to [06:00](hour)\n- [Set](operation) to [1](qos_value) [Gbps](qos_unit) [bandwidth](qos_metric) [limit](qos_constraint) for the traffic to [DMZ](location)\n- Lumi, [set to](operation) [10](qos_value) [kbps](qos_unit) the [upload rate](qos_metric) for [faculty](group)\n- Please, [allow](operation) [Skype](service) for all [users](group)\n- [Deny](operation) [SSH](protocol) access to [students](group)\n- Lumi, [setup](operation) a [TCP accelerator](middlebox) between [LAN](location) and [video server](location)\n- Lumi, [allow](operation) access to [internal campus computers](location) from the [internet](location) through [SSH](protocol)\n- [Reduce](operation) the [download rate](qos_metric) for [faculty members](group) to [20](qos_value) [Mbps](qos_unit)\n- [Allow](operation) access from [computers](location) to [DMZ](location)\n- Lumi [monitors](middlebox) the [network](location) traffic\n"
    },
    {
      "intent": "build-feedback",
      "examples": "- [blocked](value) is an [operation](entity)\n- you missed [blocked](value)\n- an [operation](entity)\n- a [location](entity)\n- you've missed the [ResNet](value)\n- the [entity](value)\n- you've missed the [location](entity)\n- the [location](entity)\n- [firewall](value)\n- the [middlebox](entity)\n- the [middlebox](entity) I want is a [shaper](value)\n- the [location](entity) is '[backend](value)'\n- [housing](value) is a [location](entity)\n- [Dorms](value) is a [location](entity)\n- [University](value) is a [location](entity)\n- [copyright](value) is a [middlebox](entity)\n- [firewall](value) is a [middlebox](entity)\n- [nat](value) is a [middlebox](entity)\n"
    }
  ]
}