[
    {
        "text": "torrent traffic must be allowed for guest but limited to 100 mbps",
        "extracted_entities": {
            "traffic": "torrent traffic",
            "group": "guests",
            "qos_constraint": "limit",
            "qos_value": "100",
            "qos_unit": "mbps",
            "operation": "allow"
        },
        "nile_statement": "define intent qosIntent: for group('guests') allow traffic('torrent') set bandwidth('max', '100', 'mbps')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.168711423873901,
        "intent_length": 65,
        "nile_length": 105
    },
    {
        "text": "make sure all traffic to server racks is throttled to 1 gbps from 4pm to 9pm",
        "extracted_entities": {
            "traffic": "all",
            "destination": "server racks",
            "qos_constraint": "limit",
            "qos_value": "1",
            "qos_unit": "gbps",
            "start": "16:00",
            "end": "21:00"
        },
        "nile_statement": "define intent qosIntent: for endpoint('serverRacks') set bandwidth('max', '1', 'gbps') start hour('16:00') end hour('21:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 13.688396215438843,
        "intent_length": 76,
        "nile_length": 124
    },
    {
        "text": "please remove DPI from DMZ starting at 6am until 9pm",
        "extracted_entities": {
            "middlebox": "DPI",
            "origin": "DMZ",
            "start": "06:00",
            "end": "21:00",
            "operation": "remove"
        },
        "nile_statement": "define intent removeDPI: from endpoint('DMZ') to endpoint('DMZ') remove middlebox('DPI') start hour('06:00') end hour('21:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.46542763710022,
        "intent_length": 52,
        "nile_length": 126
    },
    {
        "text": "please do not let any music streaming in the network",
        "extracted_entities": {
            "traffic": "streaming",
            "operation": "block"
        },
        "nile_statement": "define intent blockStreaming: for traffic('streaming') block traffic('streaming')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.085835695266724,
        "intent_length": 52,
        "nile_length": 81
    },
    {
        "text": "make tcp traffic pass through traffic shaper from 5pm to 8pm",
        "extracted_entities": {
            "traffic": "tcp",
            "middlebox": "traffic shaper",
            "start": "5pm",
            "end": "8pm"
        },
        "nile_statement": "define intent qosIntent: for traffic('tcp') add middlebox('trafficShaper') start hour('17:00') end hour('20:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.711992979049683,
        "intent_length": 60,
        "nile_length": 112
    },
    {
        "text": "social media traffic must not be blocked",
        "extracted_entities": {
            "traffic": "social media",
            "operation": "must not be blocked"
        },
        "nile_statement": "define intent allowSocialMedia: for traffic('socialMedia') allow traffic('socialMedia')",
        "grammar_check": true,
        "iterations": 1,
        "time": 6.30928373336792,
        "intent_length": 40,
        "nile_length": 87
    },
    {
        "text": "Please, Lumi, block Youtube and all other streaming traffic",
        "extracted_entities": {
            "traffic": [
                "youtube",
                "streaming"
            ],
            "operation": "block"
        },
        "nile_statement": "define intent blockStreaming: for service('youtube'), traffic('streaming') block service('youtube'), traffic('streaming')",
        "grammar_check": true,
        "iterations": 4,
        "time": 19.806453704833984,
        "intent_length": 59,
        "nile_length": 121
    },
    {
        "text": "Lumi, please unblock all torrent traffic",
        "extracted_entities": {
            "traffic": "torrent",
            "operation": "unblock"
        },
        "nile_statement": "define intent unblockTorrent: for traffic('torrent') allow traffic('torrent')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.881147146224976,
        "intent_length": 40,
        "nile_length": 77
    },
    {
        "text": "Lumi, for the guest network, limit the traffic of torrent protocol to 100 mbps",
        "extracted_entities": {
            "group": "guests",
            "traffic": "torrent",
            "qos_constraint": "limit",
            "qos_value": "100",
            "qos_unit": "mbps"
        },
        "nile_statement": "define intent qosIntent: for group('guests') set bandwidth('max', '100', 'mbps') allow traffic('torrent')",
        "grammar_check": true,
        "iterations": 2,
        "time": 17.21888303756714,
        "intent_length": 78,
        "nile_length": 105
    },
    {
        "text": "unblock facebook",
        "extracted_entities": {
            "operation": "unblock",
            "service": "facebook"
        },
        "nile_statement": "define intent unblockFacebook: for service('facebook') allow service('facebook')",
        "grammar_check": true,
        "iterations": 1,
        "time": 6.820175647735596,
        "intent_length": 16,
        "nile_length": 80
    },
    {
        "text": "unblock traffic",
        "extracted_entities": {
            "operation": "unblock",
            "traffic": "traffic"
        },
        "nile_statement": "define intent unblockTrafficIntent: for traffic('someTraffic') allow traffic('someTraffic')",
        "grammar_check": true,
        "iterations": 2,
        "time": 11.62434196472168,
        "intent_length": 15,
        "nile_length": 91
    },
    {
        "text": "block facebook",
        "extracted_entities": {
            "operation": "block",
            "service": "facebook"
        },
        "nile_statement": "define intent blockFacebook: for service('facebook') block service('facebook')",
        "grammar_check": true,
        "iterations": 1,
        "time": 7.0814049243927,
        "intent_length": 14,
        "nile_length": 78
    },
    {
        "text": "Block F2movies traffic from Internet to Labs",
        "extracted_entities": {
            "operation": "block",
            "service": "F2movies",
            "origin": "Internet",
            "destination": "Labs"
        },
        "nile_statement": "define intent blockIntent: from endpoint('Internet') to endpoint('Labs') block service('F2movies')",
        "grammar_check": true,
        "iterations": 0,
        "time": 5.135987997055054,
        "intent_length": 44,
        "nile_length": 98
    },
    {
        "text": "Block F2movies traffic from Internet to student Labs",
        "extracted_entities": {
            "service": "F2movies",
            "origin": "Internet",
            "destination": "student Labs",
            "operation": "block"
        },
        "nile_statement": "define intent blockF2movies: from endpoint('Internet') to endpoint('studentLabs') block service('F2movies')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.10129427909851,
        "intent_length": 52,
        "nile_length": 107
    },
    {
        "text": "Add DPI middlebox into all traffic from Internet to the Labs",
        "extracted_entities": {
            "middlebox": "DPI",
            "traffic": "all",
            "origin": "Internet",
            "destination": "Labs",
            "operation": "add"
        },
        "nile_statement": "define intent dpiIntent: from endpoint('Internet') to endpoint('Labs') add middlebox('DPI')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.250492095947266,
        "intent_length": 60,
        "nile_length": 91
    },
    {
        "text": "All traffic from the Internet to the Labs has to go to DPI server and then goes to the Labs",
        "extracted_entities": {
            "traffic": "all traffic",
            "origin": "Internet",
            "destination": "Labs",
            "middlebox": "DPI",
            "operation": "add"
        },
        "nile_statement": "define intent trafficIntent: from endpoint('Internet') to endpoint('Labs') add middlebox('DPI')",
        "grammar_check": true,
        "iterations": 0,
        "time": 5.085551023483276,
        "intent_length": 91,
        "nile_length": 95
    },
    {
        "text": "add dpi to labs network",
        "extracted_entities": {
            "middlebox": "dpi",
            "operation": "add",
            "group": "labs"
        },
        "nile_statement": "define intent addDpiIntent: for group('labs') add middlebox('dpi')",
        "grammar_check": true,
        "iterations": 0,
        "time": 5.1447203159332275,
        "intent_length": 23,
        "nile_length": 66
    },
    {
        "text": "Hey Lumi, add DPI to the labs network",
        "extracted_entities": {
            "operation": "add",
            "middlebox": "dpi",
            "target": "labs"
        },
        "nile_statement": "define intent dpiIntent: for group('labs') add middlebox('dpi')",
        "grammar_check": true,
        "iterations": 1,
        "time": 7.4736809730529785,
        "intent_length": 37,
        "nile_length": 63
    },
    {
        "text": "hey Lumi, add dpi to labs",
        "extracted_entities": {
            "middlebox": "dpi",
            "operation": "add",
            "target": "labs"
        },
        "nile_statement": "define intent dpiIntent: for group('labs') add middlebox('dpi')",
        "grammar_check": true,
        "iterations": 1,
        "time": 6.9501729011535645,
        "intent_length": 25,
        "nile_length": 63
    },
    {
        "text": "limit servers bandwidth to 5gbps between 4pm and 7pm",
        "extracted_entities": {
            "qos_constraint": "limit",
            "qos_metric": "bandwidth",
            "qos_value": "5",
            "qos_unit": "gbps",
            "start": "16:00",
            "end": "19:00",
            "target": "servers"
        },
        "nile_statement": "define intent qosIntent: for group('servers') set bandwidth('max', '5', 'gbps') start hour('16:00') end hour('19:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.55742621421814,
        "intent_length": 52,
        "nile_length": 117
    },
    {
        "text": "unblock facebook traffic",
        "extracted_entities": {
            "operation": "unblock",
            "service": "facebook"
        },
        "nile_statement": "define intent unblockFacebook: for service('facebook') allow service('facebook')",
        "grammar_check": true,
        "iterations": 2,
        "time": 11.832131624221802,
        "intent_length": 24,
        "nile_length": 80
    },
    {
        "text": "allow all traffic",
        "extracted_entities": {
            "traffic": "all",
            "operation": "allow"
        },
        "nile_statement": "define intent allowAllTraffic: for traffic('all') allow traffic('all')",
        "grammar_check": true,
        "iterations": 1,
        "time": 7.009128570556641,
        "intent_length": 17,
        "nile_length": 70
    },
    {
        "text": "block all student traffic in the network",
        "extracted_entities": {
            "operation": "block",
            "group": "students",
            "traffic": "all"
        },
        "nile_statement": "define intent blockStudentTraffic: for group('students') block traffic('all')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.51486086845398,
        "intent_length": 40,
        "nile_length": 77
    },
    {
        "text": "block all student traffic",
        "extracted_entities": {
            "operation": "block",
            "group": "students",
            "traffic": "all"
        },
        "nile_statement": "define intent blockStudentTraffic: for group('students') block traffic('all')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.066633462905884,
        "intent_length": 25,
        "nile_length": 77
    },
    {
        "text": "block all traffic",
        "extracted_entities": {
            "traffic": "all traffic",
            "operation": "block"
        },
        "nile_statement": "define intent blockAllTraffic: for traffic('allTraffic') block traffic('allTraffic')",
        "grammar_check": true,
        "iterations": 1,
        "time": 7.799677848815918,
        "intent_length": 17,
        "nile_length": 84
    },
    {
        "text": "Limit students in the dorm to 10 GB per week",
        "extracted_entities": {
            "group": "students",
            "qos_constraint": "limit",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "GB per week",
            "target": "dorms"
        },
        "nile_statement": "define intent qosIntent: for group('students'), group('dorms') set quota('any', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 13.26451587677002,
        "intent_length": 44,
        "nile_length": 94
    },
    {
        "text": "Make sure all traffic from the Internet to the labs is inspected by the DPI middlebox",
        "extracted_entities": {
            "origin": "Internet",
            "destination": "labs",
            "middlebox": "DPI",
            "operation": "inspect",
            "traffic": "all"
        },
        "nile_statement": "define intent trafficInspection: from endpoint('Internet') to endpoint('labs') add middlebox('DPI')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.063782930374146,
        "intent_length": 85,
        "nile_length": 99
    },
    {
        "text": "Between internet and servers limit traffic to 5Gbps start 16:00 finish 19:00",
        "extracted_entities": {
            "origin": "internet",
            "destination": "servers",
            "qos_constraint": "limit",
            "traffic": "traffic",
            "qos_value": "5",
            "qos_unit": "Gbps",
            "start": "16:00",
            "end": "19:00"
        },
        "nile_statement": "define intent qosIntent: from endpoint('internet') to endpoint('servers') set bandwidth('max', '5', 'gbps') start hour('16:00') end hour('19:00')",
        "grammar_check": true,
        "iterations": 2,
        "time": 11.956691265106201,
        "intent_length": 76,
        "nile_length": 145
    },
    {
        "text": "Between internet and servers limit traffic to 5Gbps interval 4pm to 7pm",
        "extracted_entities": {
            "origin": "internet",
            "destination": "servers",
            "traffic": "traffic",
            "qos_constraint": "limit",
            "qos_value": "5",
            "qos_unit": "Gbps",
            "start": "16:00",
            "end": "19:00"
        },
        "nile_statement": "define intent qosIntent: from endpoint('internet') to endpoint('servers') set bandwidth('max', '5', 'gbps') start hour('16:00') end hour('19:00')",
        "grammar_check": true,
        "iterations": 2,
        "time": 15.275763988494873,
        "intent_length": 71,
        "nile_length": 145
    },
    {
        "text": "limit the bandwidth to 5Gb for rack servers from 4 pm until 7 pm",
        "extracted_entities": {
            "qos_constraint": "limit",
            "qos_metric": "bandwidth",
            "qos_value": "5",
            "qos_unit": "Gbps",
            "origin": "rack servers",
            "start": "16:00",
            "end": "19:00"
        },
        "nile_statement": "define intent qosIntent: for endpoint('rackservers') set bandwidth('max', '5', 'gbps') start hour('16:00') end hour('19:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.684885501861572,
        "intent_length": 64,
        "nile_length": 124
    },
    {
        "text": "limit traffic to 5Gbps  Between internet and servers for 16:00 to 19:00",
        "extracted_entities": {
            "traffic": "traffic",
            "qos_constraint": "limit",
            "qos_value": "5",
            "qos_unit": "gbps",
            "origin": "internet",
            "destination": "servers",
            "start": "16:00",
            "end": "19:00"
        },
        "nile_statement": "define intent qosIntent: from endpoint('internet') to endpoint('servers') set bandwidth('max', '5', 'gbps') start hour('16:00') end hour('19:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.944412231445312,
        "intent_length": 71,
        "nile_length": 145
    },
    {
        "text": "set quota to 10 GB per week at labs",
        "extracted_entities": {
            "operation": "set",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/wk",
            "location": "labs"
        },
        "nile_statement": "define intent qosIntent: for endpoint('labs') set quota('any', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 3,
        "time": 23.648446321487427,
        "intent_length": 35,
        "nile_length": 77
    },
    {
        "text": "set quota to 10 GB per week at servers",
        "extracted_entities": {
            "operation": "set",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "GB per week",
            "target": "servers"
        },
        "nile_statement": "define intent qosIntent: for endpoint('servers') set quota('any', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.418678760528564,
        "intent_length": 38,
        "nile_length": 80
    },
    {
        "text": "Set quota to 10 GB per week dorms",
        "extracted_entities": {
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/wk",
            "group": "students",
            "target": "dorms",
            "operation": "set"
        },
        "nile_statement": "define intent qosIntent: for group('students') set quota('any', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.494940280914307,
        "intent_length": 33,
        "nile_length": 78
    },
    {
        "text": "Set quota to 10 GB per week at guest",
        "extracted_entities": {
            "operation": "set",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/wk",
            "group": "guest"
        },
        "nile_statement": "define intent qosIntent: for group('guest') set quota('any', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.549001216888428,
        "intent_length": 36,
        "nile_length": 75
    },
    {
        "text": "Set quota to 10 GB per week at dorms",
        "extracted_entities": {
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/wk",
            "group": "students",
            "location": "dorms",
            "operation": "set"
        },
        "nile_statement": "define intent qosIntent: for group('students') set quota('any', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 12.043844938278198,
        "intent_length": 36,
        "nile_length": 78
    },
    {
        "text": "set quota to 10 GB per week at LAN",
        "extracted_entities": {
            "operation": "set",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/wk",
            "target": "LAN"
        },
        "nile_statement": "define intent qosIntent: for endpoint('LAN') set quota('any', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.968316555023193,
        "intent_length": 34,
        "nile_length": 76
    },
    {
        "text": "block all traffic at Dorms location",
        "extracted_entities": {
            "location": "Dorms",
            "traffic": "all",
            "operation": "block"
        },
        "nile_statement": "define intent blockAllTraffic: for location('Dorms') block traffic('allTraffic')",
        "grammar_check": true,
        "iterations": 3,
        "time": 13.700134754180908,
        "intent_length": 35,
        "nile_length": 80
    },
    {
        "text": "Limit traffic to 10 GB per week at Dorms",
        "extracted_entities": {
            "location": "Dorms",
            "qos_constraint": "limit",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/wk"
        },
        "nile_statement": "define intent qosIntent: for group('Dorms') set quota('any', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 2,
        "time": 17.822273015975952,
        "intent_length": 40,
        "nile_length": 75
    },
    {
        "text": "for endpoint dorms set quota download 10 gb/wk",
        "extracted_entities": {
            "endpoint": "dorms",
            "qos_constraint": "download",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/wk",
            "operation": "set"
        },
        "nile_statement": "define intent qosIntent: for endpoint('dorms') set quota('download', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 0,
        "time": 6.440372467041016,
        "intent_length": 46,
        "nile_length": 83
    },
    {
        "text": "At endpoint Dorms set quota to 10 GB per week",
        "extracted_entities": {
            "endpoint": "Dorms",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/wk",
            "operation": "set"
        },
        "nile_statement": "define intent qosIntent: for endpoint('Dorms') set quota('any', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.739494800567627,
        "intent_length": 45,
        "nile_length": 78
    },
    {
        "text": "Students shall download no more than 1000000 MB per week",
        "extracted_entities": {
            "group": "students",
            "qos_constraint": "download",
            "qos_value": "1000000",
            "qos_unit": "mb/wk"
        },
        "nile_statement": "define intent qosIntent: for group('students') set quota('download', '1000000', 'mb/wk')",
        "grammar_check": true,
        "iterations": 0,
        "time": 7.411405563354492,
        "intent_length": 56,
        "nile_length": 88
    },
    {
        "text": "hey lumi, please add a DPI to ensure students from the labs are not accessing suspicious applications",
        "extracted_entities": {
            "middlebox": "dpi",
            "group": "students",
            "location": "labs",
            "operation": "add"
        },
        "nile_statement": "define intent dpiIntent: for group('students') add middlebox('dpi')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.261852741241455,
        "intent_length": 101,
        "nile_length": 67
    },
    {
        "text": "Limit rack servers to 5gbps during 5pm to 7pm",
        "extracted_entities": {
            "location": "rack servers",
            "qos_constraint": "limit",
            "qos_value": "5",
            "qos_unit": "gbps",
            "start": "17:00",
            "end": "19:00"
        },
        "nile_statement": "define intent qosIntent: for group('rackservers') set bandwidth('max', '5', 'gbps') start hour('17:00') end hour('19:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.550918579101562,
        "intent_length": 45,
        "nile_length": 121
    },
    {
        "text": "Limit servers to 5gbps during 5pm to 7pm",
        "extracted_entities": {
            "qos_constraint": "limit",
            "qos_value": "5",
            "qos_unit": "gbps",
            "target": "servers",
            "start": "5pm",
            "end": "7pm"
        },
        "nile_statement": "define intent qosIntent: for group('servers') set bandwidth('max', '5', 'gbps') start hour('17:00') end hour('19:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.675574779510498,
        "intent_length": 40,
        "nile_length": 117
    },
    {
        "text": "Set 5gbps limit for servers during 4pm to 7pm",
        "extracted_entities": {
            "qos_constraint": "limit",
            "qos_value": "5",
            "qos_unit": "gbps",
            "target": "servers",
            "start": "16:00",
            "end": "19:00"
        },
        "nile_statement": "define intent qosIntent: for group('servers') set bandwidth('max', '5', 'gbps') start hour('16:00') end hour('19:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.857991695404053,
        "intent_length": 45,
        "nile_length": 117
    },
    {
        "text": "please lumi, block f2movies traffic from internet to students labs",
        "extracted_entities": {
            "operation": "block",
            "service": "F2movies",
            "origin": "internet",
            "group": "students",
            "destination": "labs"
        },
        "nile_statement": "define intent blockF2movies: from endpoint('internet') to endpoint('labs') block service('F2movies')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.601127862930298,
        "intent_length": 66,
        "nile_length": 100
    },
    {
        "text": "hey lumi, please allow traffic only from professors",
        "extracted_entities": {
            "operation": "allow",
            "traffic": "traffic",
            "group": "professors"
        },
        "nile_statement": "define intent allowTrafficIntent: for group('professors') allow traffic('specificTraffic')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.206966161727905,
        "intent_length": 51,
        "nile_length": 90
    },
    {
        "text": "please lumi, define dorms quota to 10 gb per week",
        "extracted_entities": {
            "location": "dorms",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/wk",
            "operation": "set"
        },
        "nile_statement": "define intent dormsQuota: for endpoint('dorms') set quota('any', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.75820803642273,
        "intent_length": 49,
        "nile_length": 79
    },
    {
        "text": "Students shall download no more than 1000000 megabytes per week",
        "extracted_entities": {
            "group": "students",
            "qos_constraint": "no more than",
            "qos_metric": "download",
            "qos_value": "1000000",
            "qos_unit": "mb/wk"
        },
        "nile_statement": "define intent qosIntent: for group('students') set quota('download', '1000000', 'mb/wk')",
        "grammar_check": true,
        "iterations": 0,
        "time": 5.779764890670776,
        "intent_length": 63,
        "nile_length": 88
    },
    {
        "text": "please limit bandwidth to 5 Gigabits per second for the server racks everyday from 4 PM  to 7PM",
        "extracted_entities": {
            "qos_constraint": "limit",
            "qos_metric": "bandwidth",
            "qos_value": "5",
            "qos_unit": "gbps",
            "target": "server racks",
            "hour": [
                "16:00",
                "19:00"
            ]
        },
        "nile_statement": "define intent qosIntent: for endpoint('serverRacks') set bandwidth('max', '5', 'gbps') start hour('16:00') end hour('19:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.228918313980103,
        "intent_length": 95,
        "nile_length": 124
    },
    {
        "text": "limit the bandwidth in server racks to 5gbps between 4pm and 7pm",
        "extracted_entities": {
            "qos_constraint": "limit",
            "qos_metric": "bandwidth",
            "qos_value": "5",
            "qos_unit": "gbps",
            "location": "server racks",
            "start": "16:00",
            "end": "19:00"
        },
        "nile_statement": "define intent qosIntent: for group('serverRacks') set bandwidth('max', '5', 'gbps') start hour('16:00') end hour('19:00')",
        "grammar_check": true,
        "iterations": 2,
        "time": 15.062053203582764,
        "intent_length": 64,
        "nile_length": 121
    },
    {
        "text": "I want the torrent traffic from guest users to be no more than 100 mbps",
        "extracted_entities": {
            "traffic": "torrent",
            "group": "guests",
            "qos_constraint": "no more than",
            "qos_value": "100",
            "qos_unit": "mbps"
        },
        "nile_statement": "define intent qosIntent: for group('guests'), traffic('torrent') set bandwidth('max', '100', 'mbps')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.670236349105835,
        "intent_length": 71,
        "nile_length": 100
    },
    {
        "text": "limit network usage of all students in the dorms to no more than 10 gb per seven days",
        "extracted_entities": {
            "group": "students",
            "location": "dorms",
            "qos_constraint": "limit",
            "qos_metric": "network usage",
            "qos_value": "10",
            "qos_unit": "gb per seven days"
        },
        "nile_statement": "define intent limitNetworkUsage: for group('students') set quota('any', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 12.251307249069214,
        "intent_length": 85,
        "nile_length": 86
    },
    {
        "text": "prevent all f2movies traffic from reaching the students in the labs",
        "extracted_entities": {
            "service": "F2movies",
            "group": "students",
            "location": "labs",
            "operation": "prevent"
        },
        "nile_statement": "define intent blockF2movies: for service('F2movies') block traffic('students')",
        "grammar_check": true,
        "iterations": 2,
        "time": 15.406762599945068,
        "intent_length": 67,
        "nile_length": 78
    },
    {
        "text": "Add monitor for the university from 4am to 10pm",
        "extracted_entities": {
            "middlebox": "monitor",
            "target": "university",
            "start": "04:00",
            "end": "22:00"
        },
        "nile_statement": "define intent monitorIntent: for group('university') add middlebox('monitor') start hour('04:00') end hour('22:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.59705901145935,
        "intent_length": 47,
        "nile_length": 115
    },
    {
        "text": "set a maximum of 5 gbps to the servers from 4pm to 7pm",
        "extracted_entities": {
            "qos_constraint": "maximum",
            "qos_value": "5",
            "qos_unit": "gbps",
            "target": "servers",
            "start": "16:00",
            "end": "19:00"
        },
        "nile_statement": "define intent qosIntent: for group('servers') set bandwidth('max', '5', 'gbps') start hour('16:00') end hour('19:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.447160720825195,
        "intent_length": 54,
        "nile_length": 117
    },
    {
        "text": "students should download no more than 10 GB of data in a week",
        "extracted_entities": {
            "group": "students",
            "qos_constraint": "download",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/wk"
        },
        "nile_statement": "define intent qosIntent: for group('students') set quota('download', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 0,
        "time": 5.078191041946411,
        "intent_length": 61,
        "nile_length": 83
    },
    {
        "text": "set torrent traffic from guests to 100 mbps",
        "extracted_entities": {
            "traffic": "torrent traffic",
            "group": "guests",
            "qos_value": "100",
            "qos_unit": "mbps"
        },
        "nile_statement": "define intent qosIntent: for traffic('torrent'), group('guests') set bandwidth('max', '100', 'mbps')",
        "grammar_check": true,
        "iterations": 2,
        "time": 13.224701642990112,
        "intent_length": 43,
        "nile_length": 100
    },
    {
        "text": "From internet to Labs add DPI",
        "extracted_entities": {
            "origin": "internet",
            "destination": "Labs",
            "middlebox": "DPI",
            "operation": "add"
        },
        "nile_statement": "define intent networkIntent: from endpoint('internet') to endpoint('Labs') add middlebox('DPI')",
        "grammar_check": true,
        "iterations": 0,
        "time": 7.525656461715698,
        "intent_length": 29,
        "nile_length": 95
    },
    {
        "text": "From internet to Labs block F2movies",
        "extracted_entities": {
            "origin": "internet",
            "destination": "Labs",
            "service": "F2movies"
        },
        "nile_statement": "define intent blockF2movies: from endpoint('internet') to endpoint('Labs') block service('F2movies')",
        "grammar_check": true,
        "iterations": 0,
        "time": 6.375509977340698,
        "intent_length": 36,
        "nile_length": 100
    },
    {
        "text": "limit the bandwidth rate of the server racks to 5 gbps from 4pm to 7pm",
        "extracted_entities": {
            "qos_constraint": "limit",
            "qos_metric": "bandwidth",
            "qos_value": "5",
            "qos_unit": "gbps",
            "target": "server racks",
            "start": "16:00",
            "end": "19:00"
        },
        "nile_statement": "define intent qosIntent: for endpoint('serverRacks') set bandwidth('max', '5', 'gbps') start hour('16:00') end hour('19:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.736822605133057,
        "intent_length": 70,
        "nile_length": 124
    },
    {
        "text": "block traffic of the server racks",
        "extracted_entities": {
            "operation": "block",
            "traffic": "all",
            "target": "server racks"
        },
        "nile_statement": "define intent blockTraffic: for endpoint('serverRacks') block traffic('all')",
        "grammar_check": true,
        "iterations": 2,
        "time": 16.25708317756653,
        "intent_length": 33,
        "nile_length": 76
    },
    {
        "text": "block all traffic for the server racks",
        "extracted_entities": {
            "operation": "block",
            "traffic": "all traffic",
            "target": "server racks"
        },
        "nile_statement": "define intent blockTraffic: for endpoint('serverRacks') block traffic('allTraffic')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.08607792854309,
        "intent_length": 38,
        "nile_length": 83
    },
    {
        "text": "limit to 100 Mbps the bandwidth torrent traffic can consume",
        "extracted_entities": {
            "traffic": "torrent",
            "qos_constraint": "limit",
            "qos_value": "100",
            "qos_unit": "mbps"
        },
        "nile_statement": "define intent qosIntent: for traffic('torrent') set bandwidth('max', '100', 'mbps')",
        "grammar_check": true,
        "iterations": 1,
        "time": 12.01740574836731,
        "intent_length": 59,
        "nile_length": 83
    },
    {
        "text": "forward traffic for labs through the dpi",
        "extracted_entities": {
            "traffic": "traffic",
            "group": "labs",
            "middlebox": "dpi",
            "operation": "forward"
        },
        "nile_statement": "define intent forwardTraffic: for group('labs') add middlebox('dpi')",
        "grammar_check": true,
        "iterations": 2,
        "time": 13.162761211395264,
        "intent_length": 40,
        "nile_length": 68
    },
    {
        "text": "put a download quota for students of 10 gb per week",
        "extracted_entities": {
            "group": "students",
            "qos_constraint": "download",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb per week"
        },
        "nile_statement": "define intent qosIntent: for group('students') set quota('download', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 2,
        "time": 14.529531955718994,
        "intent_length": 51,
        "nile_length": 83
    },
    {
        "text": "limit torrent traffic to 100 mbps",
        "extracted_entities": {
            "traffic": "torrent traffic",
            "qos_constraint": "limit",
            "qos_value": "100",
            "qos_unit": "mbps"
        },
        "nile_statement": "define intent qosIntent: for traffic('torrent') set bandwidth('max', '100', 'mbps')",
        "grammar_check": true,
        "iterations": 2,
        "time": 16.424437761306763,
        "intent_length": 33,
        "nile_length": 83
    },
    {
        "text": "block F2movies traffic for students in the labs",
        "extracted_entities": {
            "service": "F2movies",
            "group": "students",
            "location": "labs",
            "operation": "block"
        },
        "nile_statement": "define intent blockF2movies: for group('students') block service('F2movies')",
        "grammar_check": true,
        "iterations": 1,
        "time": 7.985486268997192,
        "intent_length": 47,
        "nile_length": 76
    },
    {
        "text": "set a 10 GB per week download quota for students in dorms",
        "extracted_entities": {
            "qos_constraint": "download",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/wk",
            "group": "students",
            "location": "dorms"
        },
        "nile_statement": "define intent qosIntent: for group('students'), group('dorms') set quota('download', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.29243803024292,
        "intent_length": 57,
        "nile_length": 99
    },
    {
        "text": "ensure that all traffic from the Internet to the labs is carefully inspected by the Deep Packet Inspection middlebox",
        "extracted_entities": {
            "traffic": "all traffic",
            "origin": "Internet",
            "destination": "labs",
            "middlebox": "Deep Packet Inspection"
        },
        "nile_statement": "define intent trafficInspection: from endpoint('Internet') to endpoint('labs') add middlebox('DeepPacketInspection')",
        "grammar_check": true,
        "iterations": 1,
        "time": 13.606576681137085,
        "intent_length": 116,
        "nile_length": 116
    },
    {
        "text": "limit torrent traffic for guests to 100 Mbps",
        "extracted_entities": {
            "traffic": "torrent traffic",
            "group": "guests",
            "qos_constraint": "limit",
            "qos_value": "100",
            "qos_unit": "mbps"
        },
        "nile_statement": "define intent qosIntent: for group('guests') set bandwidth('max', '100', 'mbps') allow traffic('torrent')",
        "grammar_check": true,
        "iterations": 2,
        "time": 14.883299112319946,
        "intent_length": 44,
        "nile_length": 105
    },
    {
        "text": "inspect all internet traffic",
        "extracted_entities": {
            "traffic": "all",
            "operation": "inspect"
        },
        "nile_statement": "define intent inspectTraffic: for traffic('all') add middlebox('dpi')",
        "grammar_check": true,
        "iterations": 0,
        "time": 5.237465143203735,
        "intent_length": 28,
        "nile_length": 69
    },
    {
        "text": "Students can download up to 10 GB per week of data.",
        "extracted_entities": {
            "group": "students",
            "qos_constraint": "download",
            "qos_value": "10",
            "qos_unit": "gb per week",
            "qos_metric": "data"
        },
        "nile_statement": "define intent qosIntent: for group('students') set quota('download', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 2,
        "time": 12.90896201133728,
        "intent_length": 51,
        "nile_length": 83
    },
    {
        "text": "Limit bandwidth usage to 50 mbps for professors.",
        "extracted_entities": {
            "group": "professors",
            "qos_constraint": "limit",
            "qos_metric": "bandwidth",
            "qos_value": "50",
            "qos_unit": "mbps"
        },
        "nile_statement": "define intent qosIntent: for group('professors') set bandwidth('max', '50', 'mbps')",
        "grammar_check": true,
        "iterations": 1,
        "time": 12.337003946304321,
        "intent_length": 48,
        "nile_length": 83
    },
    {
        "text": "Please make traffic coming from the Internet pass through a firewall.",
        "extracted_entities": {
            "traffic": "Internet",
            "middlebox": "firewall",
            "operation": "pass through"
        },
        "nile_statement": "define intent qosIntent: from endpoint('Internet') to endpoint('Internet') add middlebox('firewall')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.438908576965332,
        "intent_length": 69,
        "nile_length": 100
    },
    {
        "text": "Hey Lumi please block traffic for all students",
        "extracted_entities": {
            "group": "students",
            "traffic": "all",
            "operation": "block"
        },
        "nile_statement": "define intent blockTrafficIntent: for group('students') block traffic('all')",
        "grammar_check": true,
        "iterations": 1,
        "time": 7.2576515674591064,
        "intent_length": 46,
        "nile_length": 76
    },
    {
        "text": "add a firewall",
        "extracted_entities": {
            "middlebox": "firewall",
            "operation": "add"
        },
        "nile_statement": "define intent addFirewallIntent: for endpoint('genericEndpoint') add middlebox('firewall')",
        "grammar_check": true,
        "iterations": 1,
        "time": 13.290525674819946,
        "intent_length": 14,
        "nile_length": 90
    },
    {
        "text": "From gateway to network add middlebox firewall",
        "extracted_entities": {
            "origin": "gateway",
            "destination": "network",
            "middlebox": "firewall",
            "operation": "add"
        },
        "nile_statement": "define intent qosIntent: from endpoint('gateway') to endpoint('network') add middlebox('firewall')",
        "grammar_check": true,
        "iterations": 0,
        "time": 5.372776508331299,
        "intent_length": 46,
        "nile_length": 98
    },
    {
        "text": "From my house to PUCRS add middlebox dpi",
        "extracted_entities": {
            "origin": "house",
            "destination": "PUCRS",
            "middlebox": "dpi",
            "operation": "add"
        },
        "nile_statement": "define intent qosIntent: from endpoint('house') to endpoint('PUCRS') add middlebox('dpi')",
        "grammar_check": true,
        "iterations": 0,
        "time": 5.179742097854614,
        "intent_length": 40,
        "nile_length": 89
    },
    {
        "text": "From dorms to internet add nat",
        "extracted_entities": {
            "origin": "dorms",
            "destination": "internet",
            "middlebox": "nat",
            "operation": "add"
        },
        "nile_statement": "define intent networkIntent: from endpoint('dorms') to endpoint('internet') add middlebox('nat')",
        "grammar_check": true,
        "iterations": 0,
        "time": 6.154376983642578,
        "intent_length": 30,
        "nile_length": 96
    },
    {
        "text": "From university to internet add firewall",
        "extracted_entities": {
            "origin": "university",
            "destination": "internet",
            "middlebox": "firewall",
            "operation": "add"
        },
        "nile_statement": "define intent qosIntent: from endpoint('university') to endpoint('internet') add middlebox('firewall')",
        "grammar_check": true,
        "iterations": 0,
        "time": 6.281509637832642,
        "intent_length": 40,
        "nile_length": 102
    },
    {
        "text": "Please add traffic shaper between the internet and the dorms",
        "extracted_entities": {
            "middlebox": "traffic shaper",
            "origin": "internet",
            "destination": "dorms"
        },
        "nile_statement": "define intent qosIntent: from endpoint('internet') to endpoint('dorms') add middlebox('trafficShaper')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.055031776428223,
        "intent_length": 60,
        "nile_length": 102
    },
    {
        "text": "Please, block netflix traffic on PUC",
        "extracted_entities": {
            "operation": "block",
            "service": "netflix",
            "target": "PUC"
        },
        "nile_statement": "define intent blockNetflix: for endpoint('PUC') block service('netflix')",
        "grammar_check": true,
        "iterations": 3,
        "time": 18.637938737869263,
        "intent_length": 36,
        "nile_length": 72
    },
    {
        "text": "Block streaming traffic on UFRGS",
        "extracted_entities": {
            "operation": "block",
            "traffic": "streaming",
            "group": "UFRGS"
        },
        "nile_statement": "define intent blockStreaming: for group('UFRGS') block traffic('streaming')",
        "grammar_check": true,
        "iterations": 0,
        "time": 5.301981210708618,
        "intent_length": 32,
        "nile_length": 75
    },
    {
        "text": "Add inspection for the university from 10pm to 12pm",
        "extracted_entities": {
            "middlebox": "inspection",
            "target": "university",
            "start": "22:00",
            "end": "12:00"
        },
        "nile_statement": "define intent inspectionIntent: for group('university') add middlebox('inspection') start hour('22:00') end hour('00:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.296371459960938,
        "intent_length": 51,
        "nile_length": 121
    },
    {
        "text": "Block traffic from netflix",
        "extracted_entities": {
            "operation": "block",
            "service": "netflix"
        },
        "nile_statement": "define intent blockNetflix: for service('netflix') block traffic('netflix')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.26535177230835,
        "intent_length": 26,
        "nile_length": 75
    },
    {
        "text": "Add monitor for the university from 04:00 to 22:00",
        "extracted_entities": {
            "middlebox": "monitor",
            "target": "university",
            "start": "04:00",
            "end": "22:00"
        },
        "nile_statement": "define intent monitorIntent: for group('university') add middlebox('monitor') start hour('04:00') end hour('22:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.037688255310059,
        "intent_length": 50,
        "nile_length": 115
    },
    {
        "text": "Add traffic monitor from PUC to UFRGS",
        "extracted_entities": {
            "middlebox": "traffic monitor",
            "origin": "PUC",
            "destination": "UFRGS",
            "operation": "add"
        },
        "nile_statement": "define intent qosIntent: from endpoint('PUC') to endpoint('UFRGS') add middlebox('trafficMonitor')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.063342094421387,
        "intent_length": 37,
        "nile_length": 98
    },
    {
        "text": "add shaping for gateway everyday from 18:00 to midnight",
        "extracted_entities": {
            "middlebox": "shaping",
            "origin": "gateway",
            "start": "18:00",
            "end": "midnight",
            "operation": "add"
        },
        "nile_statement": "define intent qosIntent: for endpoint('gateway') add middlebox('shaping') start hour('18:00') end hour('00:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.327513694763184,
        "intent_length": 55,
        "nile_length": 111
    },
    {
        "text": "Add a firewall and address translation for att and verizon",
        "extracted_entities": {
            "middlebox": [
                "firewall",
                "address translation"
            ],
            "group": [
                "att",
                "verizon"
            ]
        },
        "nile_statement": "define intent qosIntent: for group('att'), group('verizon') add middlebox('firewall'), middlebox('addressTranslation')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.651539325714111,
        "intent_length": 58,
        "nile_length": 118
    },
    {
        "text": "Define a quota of 10 GB per week for all students",
        "extracted_entities": {
            "group": "students",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "GB per week"
        },
        "nile_statement": "define intent quotaIntent: for group('students') set quota('any', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 2,
        "time": 16.2183735370636,
        "intent_length": 49,
        "nile_length": 80
    },
    {
        "text": "Dorms traffic to internet must pass through a firewall",
        "extracted_entities": {
            "origin": "dorms",
            "destination": "internet",
            "middlebox": "firewall",
            "operation": "must pass through"
        },
        "nile_statement": "define intent firewallIntent: from endpoint('dorms') to endpoint('internet') add middlebox('firewall')",
        "grammar_check": true,
        "iterations": 0,
        "time": 7.423863172531128,
        "intent_length": 54,
        "nile_length": 102
    },
    {
        "text": "We provide a quota to all students of 1 GB/wk of usage.",
        "extracted_entities": {
            "group": "students",
            "qos_metric": "quota",
            "qos_value": "1",
            "qos_unit": "gb/wk"
        },
        "nile_statement": "define intent quotaIntent: for group('students') set quota('any', '1', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.713549375534058,
        "intent_length": 55,
        "nile_length": 79
    },
    {
        "text": "Add inspection for the university from 22:00 to 12:00",
        "extracted_entities": {
            "middlebox": "inspection",
            "group": "university",
            "start": "22:00",
            "end": "12:00"
        },
        "nile_statement": "define intent inspectionIntent: for group('university') add middlebox('inspection') start hour('22:00') end hour('12:00')",
        "grammar_check": true,
        "iterations": 0,
        "time": 5.1905434131622314,
        "intent_length": 53,
        "nile_length": 121
    },
    {
        "text": "Remove firewall from the university to my house",
        "extracted_entities": {
            "middlebox": "firewall",
            "origin": "university",
            "destination": "my house",
            "operation": "remove"
        },
        "nile_statement": "define intent removeFirewall: from endpoint('university') to endpoint('myHouse') remove middlebox('firewall')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.664539098739624,
        "intent_length": 47,
        "nile_length": 109
    },
    {
        "text": "add security from entry to backend",
        "extracted_entities": {
            "operation": "add",
            "middlebox": "security",
            "origin": "entry",
            "destination": "backend"
        },
        "nile_statement": "define intent securityIntent: from endpoint('entry') to endpoint('backend') add middlebox('security')",
        "grammar_check": true,
        "iterations": 0,
        "time": 6.485639333724976,
        "intent_length": 34,
        "nile_length": 101
    },
    {
        "text": "From gateway to my network remove nat",
        "extracted_entities": {
            "origin": "gateway",
            "destination": "network",
            "middlebox": "nat",
            "operation": "remove"
        },
        "nile_statement": "define intent removeNat: from endpoint('gateway') to endpoint('network') remove middlebox('nat')",
        "grammar_check": true,
        "iterations": 0,
        "time": 7.804394721984863,
        "intent_length": 37,
        "nile_length": 96
    },
    {
        "text": "Remove load balancing from gateway to database",
        "extracted_entities": {
            "operation": "remove",
            "middlebox": "load balancing",
            "origin": "gateway",
            "destination": "database"
        },
        "nile_statement": "define intent removeLoadBalancing: from endpoint('gateway') to endpoint('database') remove middlebox('loadBalancing')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.690963506698608,
        "intent_length": 46,
        "nile_length": 117
    },
    {
        "text": "Add firewall from gateway to my house from 06:00 to 21:00",
        "extracted_entities": {
            "middlebox": "firewall",
            "origin": "gateway",
            "destination": "my house",
            "start": "06:00",
            "end": "21:00"
        },
        "nile_statement": "define intent firewallIntent: from endpoint('gateway') to endpoint('myHouse') add middlebox('firewall') start hour('06:00') end hour('21:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.009599208831787,
        "intent_length": 57,
        "nile_length": 141
    },
    {
        "text": "Remove nat for gateway everyday from 18:00 to midnight",
        "extracted_entities": {
            "middlebox": "nat",
            "origin": "gateway",
            "start": "18:00",
            "end": "midnight",
            "operation": "remove"
        },
        "nile_statement": "define intent removeNat: from endpoint('gateway') to endpoint('gateway') remove middlebox('nat') start hour('18:00') end hour('00:00')",
        "grammar_check": true,
        "iterations": 3,
        "time": 18.89482069015503,
        "intent_length": 54,
        "nile_length": 134
    },
    {
        "text": "We provide a data plan quota for all staff of 10 GB per day",
        "extracted_entities": {
            "operation": "provide",
            "qos_metric": "quota",
            "group": "staff",
            "qos_value": "10",
            "qos_unit": "GB per day"
        },
        "nile_statement": "define intent dataPlanQuota: for group('staff') set quota('any', '10', 'gb/d')",
        "grammar_check": true,
        "iterations": 2,
        "time": 11.550597190856934,
        "intent_length": 59,
        "nile_length": 78
    },
    {
        "text": "We provide a quota to all students of 1 GB per week of usage",
        "extracted_entities": {
            "group": "students",
            "qos_metric": "quota",
            "qos_value": "1",
            "qos_unit": "gb/wk",
            "operation": "provide"
        },
        "nile_statement": "define intent quotaIntent: for group('students') set quota('any', '1', 'gb/wk')",
        "grammar_check": true,
        "iterations": 2,
        "time": 12.091439008712769,
        "intent_length": 60,
        "nile_length": 79
    },
    {
        "text": "Please Lumi, block streaming traffic for students and set a 10 Mbps bandwidth limit",
        "extracted_entities": {
            "traffic": "streaming",
            "group": "students",
            "qos_constraint": "max",
            "qos_value": "10",
            "qos_unit": "mbps",
            "operation": [
                "block",
                "set"
            ]
        },
        "nile_statement": "define intent qosIntent: for group('students') block traffic('streaming') set bandwidth('max', '10', 'mbps')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.64177131652832,
        "intent_length": 83,
        "nile_length": 108
    },
    {
        "text": "Please allow social media for the HR department",
        "extracted_entities": {
            "traffic": "social media",
            "group": "HR department",
            "operation": "allow"
        },
        "nile_statement": "define intent allowSocialMedia: for group('HR') allow traffic('socialMedia')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.123227834701538,
        "intent_length": 47,
        "nile_length": 76
    },
    {
        "text": "Let students access Facebook",
        "extracted_entities": {
            "group": "students",
            "service": "Facebook",
            "operation": "allow"
        },
        "nile_statement": "define intent allowFacebook: for group('students') allow service('Facebook')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.807798147201538,
        "intent_length": 28,
        "nile_length": 76
    },
    {
        "text": "Do no let students access Netflix from the laboratories to the internet",
        "extracted_entities": {
            "group": "students",
            "service": "Netflix",
            "origin": "laboratories",
            "destination": "internet",
            "operation": "block"
        },
        "nile_statement": "define intent blockNetflix: from endpoint('laboratories') to endpoint('internet') block service('Netflix')",
        "grammar_check": true,
        "iterations": 1,
        "time": 13.25651478767395,
        "intent_length": 71,
        "nile_length": 106
    },
    {
        "text": "Block all traffic from HR to the backend servers",
        "extracted_entities": {
            "operation": "block",
            "traffic": "all",
            "origin": "HR",
            "destination": "backend"
        },
        "nile_statement": "define intent blockAllTraffic: from endpoint('HR') to endpoint('backend') block traffic('all')",
        "grammar_check": true,
        "iterations": 0,
        "time": 7.294848918914795,
        "intent_length": 48,
        "nile_length": 94
    },
    {
        "text": "Students may use up to 10 GB of data weekly",
        "extracted_entities": {
            "group": "students",
            "qos_constraint": "download",
            "qos_value": "10",
            "qos_unit": "gb/wk",
            "qos_metric": "data"
        },
        "nile_statement": "define intent quotaIntent: for group('students') set quota('download', '10', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.255057573318481,
        "intent_length": 43,
        "nile_length": 85
    },
    {
        "text": "Block streaming and gaming traffic in classrooms",
        "extracted_entities": {
            "operation": "block",
            "traffic": [
                "streaming",
                "gaming"
            ],
            "group": "students",
            "location": "classrooms"
        },
        "nile_statement": "define intent blockTraffic: for group('classrooms') block traffic('streaming'), traffic('gaming')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.886296033859253,
        "intent_length": 48,
        "nile_length": 97
    },
    {
        "text": "Add intrusion detection and address translation for servers network",
        "extracted_entities": {
            "middlebox": [
                "intrusion detection",
                "address translation"
            ],
            "target": "servers"
        },
        "nile_statement": "define intent qosIntent: for group('servers') add middlebox('intrusiondetection'), middlebox('addresstranslation')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.850172519683838,
        "intent_length": 67,
        "nile_length": 114
    },
    {
        "text": "Dismiss rate limiting for faculty members",
        "extracted_entities": {
            "operation": "dismiss",
            "qos_metric": "rate limiting",
            "group": "faculty"
        },
        "nile_statement": "define intent dismissRateLimiting: for group('faculty') unset quota('any', '0', 'gb/mth')",
        "grammar_check": true,
        "iterations": 1,
        "time": 14.634878158569336,
        "intent_length": 41,
        "nile_length": 89
    },
    {
        "text": "Dismiss all middleboxes from UFRGS to PUCRS",
        "extracted_entities": {
            "operation": "dismiss",
            "middlebox": "all middleboxes",
            "origin": "UFRGS",
            "destination": "PUCRS"
        },
        "nile_statement": "define intent dismissMiddleboxes: from endpoint('UFRGS') to endpoint('PUCRS') remove middlebox('allMiddleboxes')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.059163331985474,
        "intent_length": 43,
        "nile_length": 112
    },
    {
        "text": "Include parental control for PlayStation",
        "extracted_entities": {
            "middlebox": "parental control",
            "service": "PlayStation"
        },
        "nile_statement": "define intent parentalControlIntent: for service('PlayStation') add middlebox('parentalControl')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.41515827178955,
        "intent_length": 40,
        "nile_length": 96
    },
    {
        "text": "Do not let Staff members access any social media",
        "extracted_entities": {
            "group": "Staff members",
            "traffic": "social media",
            "operation": "block"
        },
        "nile_statement": "define intent blockSocialMedia: for group('StaffMembers') block traffic('socialmedia')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.786490201950073,
        "intent_length": 48,
        "nile_length": 86
    },
    {
        "text": "Set users bandwidth to 500 kbps when the 100 Gb per month quota is reached",
        "extracted_entities": {
            "group": "users",
            "qos_metric": [
                "bandwidth",
                "quota"
            ],
            "qos_value": [
                "500",
                "100"
            ],
            "qos_unit": [
                "kbps",
                "gb/mth"
            ],
            "operation": "set"
        },
        "nile_statement": "define intent qosIntent: for group('users') set bandwidth('max', '500', 'kbps') set quota('any', '100', 'gb/mth')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.167745113372803,
        "intent_length": 74,
        "nile_length": 113
    },
    {
        "text": "Prioritize Netflix traffic from 18:00 to midnight",
        "extracted_entities": {
            "middlebox": "prioritize",
            "service": "Netflix",
            "start": "18:00",
            "end": "midnight"
        },
        "nile_statement": "define intent qosIntent: for service('Netflix') set bandwidth('max', '0', 'bps') start hour('18:00') end hour('00:00')",
        "grammar_check": true,
        "iterations": 2,
        "time": 18.554993152618408,
        "intent_length": 49,
        "nile_length": 118
    },
    {
        "text": "Balance traffic coming from gateway to application servers",
        "extracted_entities": {
            "middlebox": "load balancer",
            "origin": "gateway",
            "destination": "application servers"
        },
        "nile_statement": "define intent balanceTraffic: from endpoint('gateway') to endpoint('applicationServers') add middlebox('loadBalancer')",
        "grammar_check": true,
        "iterations": 2,
        "time": 14.202962160110474,
        "intent_length": 58,
        "nile_length": 118
    },
    {
        "text": "Block torrent traffic for all students",
        "extracted_entities": {
            "traffic": "torrent",
            "group": "students",
            "operation": "block"
        },
        "nile_statement": "define intent blockTorrentTraffic: for group('students') block traffic('torrent')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.224161386489868,
        "intent_length": 38,
        "nile_length": 81
    },
    {
        "text": "Block bittorrent for professors",
        "extracted_entities": {
            "operation": "block",
            "service": "bittorrent",
            "group": "professors"
        },
        "nile_statement": "define intent blockBittorrentForProfessors: for group('professors') block service('bittorrent')",
        "grammar_check": true,
        "iterations": 1,
        "time": 12.15231966972351,
        "intent_length": 31,
        "nile_length": 95
    },
    {
        "text": "Staff is allowed to access ftp",
        "extracted_entities": {
            "group": "staff",
            "operation": "allow",
            "protocol": "ftp"
        },
        "nile_statement": "define intent accessFtpIntent: for group('staff') allow protocol('ftp')",
        "grammar_check": true,
        "iterations": 2,
        "time": 14.517451047897339,
        "intent_length": 30,
        "nile_length": 71
    },
    {
        "text": "Students cannot run file servers",
        "extracted_entities": {
            "group": "students",
            "operation": "cannot run",
            "service": "file servers"
        },
        "nile_statement": "define intent blockFileServers: for group('students') block service('fileServers')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.361207485198975,
        "intent_length": 32,
        "nile_length": 82
    },
    {
        "text": "Add parental control from my house to internet",
        "extracted_entities": {
            "middlebox": "parental control",
            "origin": "my house",
            "destination": "internet",
            "operation": "add"
        },
        "nile_statement": "define intent parentalControlIntent: from endpoint('myHouse') to endpoint('internet') add middlebox('parentalControl')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.28215742111206,
        "intent_length": 46,
        "nile_length": 118
    },
    {
        "text": "Students should not use more than five gigabytes of bandwidth per week",
        "extracted_entities": {
            "group": "students",
            "qos_metric": "quota",
            "qos_value": "5",
            "qos_unit": "gb/wk"
        },
        "nile_statement": "define intent qosIntent: for group('students') set quota('any', '5', 'gb/wk')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.178151369094849,
        "intent_length": 70,
        "nile_length": 77
    },
    {
        "text": "Block all incoming HTTP traffic, allow only HTTPS for all hosts",
        "extracted_entities": {
            "operation": [
                "block",
                "allow"
            ],
            "protocol": [
                "HTTP",
                "HTTPS"
            ],
            "target": "all hosts"
        },
        "nile_statement": "define intent blockAllowIntent: for endpoint('allHosts') block protocol('HTTP') allow protocol('HTTPS')",
        "grammar_check": true,
        "iterations": 2,
        "time": 13.02436375617981,
        "intent_length": 63,
        "nile_length": 103
    },
    {
        "text": "Permit gaming for PS4 from 13:00 to 18:00",
        "extracted_entities": {
            "traffic": "gaming",
            "service": "PS4",
            "start": "13:00",
            "end": "18:00",
            "operation": "permit"
        },
        "nile_statement": "define intent qosIntent: for traffic('gaming'), service('PS4') allow service('PS4') start hour('13:00') end hour('18:00')",
        "grammar_check": true,
        "iterations": 2,
        "time": 13.91473913192749,
        "intent_length": 41,
        "nile_length": 121
    },
    {
        "text": "Email traffic is allowed for Staff members",
        "extracted_entities": {
            "traffic": "Email",
            "operation": "allow",
            "group": "Staff members"
        },
        "nile_statement": "define intent emailIntent: for group('Staff') allow traffic('Email')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.476372957229614,
        "intent_length": 42,
        "nile_length": 68
    },
    {
        "text": "Grant SFTP access to all students from 08:00 to 17:00",
        "extracted_entities": {
            "operation": "grant",
            "protocol": "SFTP",
            "group": "students",
            "start": "08:00",
            "end": "17:00"
        },
        "nile_statement": "define intent accessIntent: for group('students') allow protocol('SFTP') start hour('08:00') end hour('17:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 7.34641432762146,
        "intent_length": 53,
        "nile_length": 110
    },
    {
        "text": "Dismiss all rate limits and quotas for all hosts",
        "extracted_entities": {
            "operation": "dismiss",
            "qos_metric": [
                "rate limits",
                "quotas"
            ],
            "target": "hosts"
        },
        "nile_statement": "define intent dismissLimits: for endpoint('hosts') unset bandwidth('max', '0', 'bps'), quota('any', '0', 'mb/d')",
        "grammar_check": true,
        "iterations": 2,
        "time": 11.706166982650757,
        "intent_length": 48,
        "nile_length": 112
    },
    {
        "text": "Prioritize VoIP traffic on the meeting room 23 from 13:00 to 14:00",
        "extracted_entities": {
            "traffic": "VoIP",
            "target": "meeting room 23",
            "start": "13:00",
            "end": "14:00"
        },
        "nile_statement": "define intent qosIntent: for traffic('VoIP') set bandwidth('max', '1000', 'kbps') start hour('13:00') end hour('14:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 12.98635745048523,
        "intent_length": 66,
        "nile_length": 119
    },
    {
        "text": "Forward all the external traffic to DMZ",
        "extracted_entities": {
            "operation": "forward",
            "traffic": "external",
            "destination": "DMZ"
        },
        "nile_statement": "define intent forwardIntent: for traffic('external'), endpoint('DMZ') allow traffic('external')",
        "grammar_check": true,
        "iterations": 3,
        "time": 17.571590900421143,
        "intent_length": 39,
        "nile_length": 95
    },
    {
        "text": "Limit in 10 Mbps the download rate of dorms from internet",
        "extracted_entities": {
            "qos_constraint": "limit",
            "qos_value": "10",
            "qos_unit": "Mbps",
            "qos_metric": "download rate",
            "origin": "internet",
            "destination": "dorms"
        },
        "nile_statement": "define intent qosIntent: from endpoint('internet') to endpoint('dorms') set bandwidth('max', '10', 'mbps')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.636178016662598,
        "intent_length": 57,
        "nile_length": 106
    },
    {
        "text": "Lumi, block SIP traffic from 19:00 to 08:00 for dorms",
        "extracted_entities": {
            "traffic": "SIP",
            "hour": [
                "19:00",
                "08:00"
            ],
            "group": "dorms",
            "operation": "block"
        },
        "nile_statement": "define intent blockSIP: for group('dorms') block traffic('SIP') start hour('19:00') end hour('08:00')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.20321249961853,
        "intent_length": 53,
        "nile_length": 101
    },
    {
        "text": "Grant SSH access to professors",
        "extracted_entities": {
            "operation": "grant",
            "protocol": "ssh",
            "group": "professors"
        },
        "nile_statement": "define intent grantSSHAccess: for group('professors') allow protocol('ssh')",
        "grammar_check": true,
        "iterations": 3,
        "time": 21.771207332611084,
        "intent_length": 30,
        "nile_length": 75
    },
    {
        "text": "Setup a packet filter for guests traffic",
        "extracted_entities": {
            "middlebox": "packet filter",
            "group": "guests",
            "traffic": "traffic"
        },
        "nile_statement": "define intent setupPacketFilter: for group('guests') add middlebox('packetFilter')",
        "grammar_check": true,
        "iterations": 1,
        "time": 11.514684438705444,
        "intent_length": 40,
        "nile_length": 82
    },
    {
        "text": "Lumi, please set to 1 GB per day the download limit for guests",
        "extracted_entities": {
            "operation": "set",
            "qos_value": "1",
            "qos_unit": "gb/d",
            "qos_metric": "download limit",
            "group": "guests"
        },
        "nile_statement": "define intent qosIntent: for group('guests') set quota('download', '1', 'gb/d')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.458921909332275,
        "intent_length": 62,
        "nile_length": 79
    },
    {
        "text": "Lumi, prohibit access to internal campus computers from the internet",
        "extracted_entities": {
            "operation": "prohibit",
            "origin": "internet",
            "destination": "internal campus computers"
        },
        "nile_statement": "define intent prohibitAccess: from endpoint('internet') to endpoint('internalCampusComputers') block traffic('all')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.65578556060791,
        "intent_length": 68,
        "nile_length": 115
    },
    {
        "text": "Increase the bandwidth consumption limit for professors to 100 Mbps",
        "extracted_entities": {
            "operation": "increase",
            "qos_metric": "bandwidth consumption limit",
            "group": "professors",
            "qos_value": "100",
            "qos_unit": "Mbps"
        },
        "nile_statement": "define intent qosIntent: for group('professors') set bandwidth('max', '100', 'mbps')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.461806535720825,
        "intent_length": 67,
        "nile_length": 84
    },
    {
        "text": "Allow RTSP traffic in the LAN",
        "extracted_entities": {
            "operation": "allow",
            "protocol": "RTSP",
            "target": "LAN"
        },
        "nile_statement": "define intent allowRTSP: for traffic('LAN') allow protocol('RTSP')",
        "grammar_check": true,
        "iterations": 2,
        "time": 12.797852754592896,
        "intent_length": 29,
        "nile_length": 66
    },
    {
        "text": "Lumi, please install an email scanner for the gateway",
        "extracted_entities": {
            "middlebox": "email scanner",
            "origin": "gateway"
        },
        "nile_statement": "define intent installEmailScanner: from endpoint('gateway') to endpoint('gateway') add middlebox('emailScanner')",
        "grammar_check": true,
        "iterations": 2,
        "time": 17.456905364990234,
        "intent_length": 53,
        "nile_length": 112
    },
    {
        "text": "Lumi, block VoIP traffic from 00:00 to 06:00",
        "extracted_entities": {
            "traffic": "VoIP",
            "operation": "block",
            "start": "00:00",
            "end": "06:00"
        },
        "nile_statement": "define intent blockVoIP: block traffic('VoIP') start hour('00:00') end hour('06:00')",
        "grammar_check": false,
        "iterations": 3,
        "time": 16.228002071380615,
        "intent_length": 44,
        "nile_length": 84
    },
    {
        "text": "Set to 1 Gbps bandwidth limit for the traffic to DMZ",
        "extracted_entities": {
            "qos_constraint": "limit",
            "qos_value": "1",
            "qos_unit": "Gbps",
            "traffic": "traffic",
            "destination": "DMZ"
        },
        "nile_statement": "define intent qosIntent: for endpoint('DMZ') set bandwidth('max', '1', 'gbps')",
        "grammar_check": true,
        "iterations": 2,
        "time": 14.96658968925476,
        "intent_length": 52,
        "nile_length": 78
    },
    {
        "text": "Lumi, set to 10 kbps the upload rate for faculty",
        "extracted_entities": {
            "operation": "set",
            "qos_value": "10",
            "qos_unit": "kbps",
            "qos_metric": "upload rate",
            "group": "faculty"
        },
        "nile_statement": "define intent qosIntent: for group('faculty') set bandwidth('max', '10', 'kbps')",
        "grammar_check": true,
        "iterations": 2,
        "time": 16.26562523841858,
        "intent_length": 48,
        "nile_length": 80
    },
    {
        "text": "Please, allow Skype for all users",
        "extracted_entities": {
            "operation": "allow",
            "service": "Skype",
            "group": "users"
        },
        "nile_statement": "define intent allowSkype: for group('users') allow service('Skype')",
        "grammar_check": true,
        "iterations": 1,
        "time": 7.508507966995239,
        "intent_length": 33,
        "nile_length": 67
    },
    {
        "text": "Deny SSH access to students",
        "extracted_entities": {
            "operation": "deny",
            "protocol": "ssh",
            "group": "students"
        },
        "nile_statement": "define intent denySSH: for group('students') block protocol('ssh')",
        "grammar_check": true,
        "iterations": 3,
        "time": 16.685084581375122,
        "intent_length": 27,
        "nile_length": 66
    },
    {
        "text": "Lumi, setup a TCP accelerator between LAN and video server",
        "extracted_entities": {
            "middlebox": "TCP accelerator",
            "origin": "LAN",
            "destination": "video server",
            "operation": "setup"
        },
        "nile_statement": "define intent networkIntent: from endpoint('LAN') to endpoint('videoServer') add middlebox('TCPAccelerator')",
        "grammar_check": true,
        "iterations": 2,
        "time": 16.405770301818848,
        "intent_length": 58,
        "nile_length": 108
    },
    {
        "text": "Lumi, allow access to internal campus computers from the internet through SSH",
        "extracted_entities": {
            "operation": "allow",
            "origin": "internet",
            "destination": "internal campus computers",
            "protocol": "SSH"
        },
        "nile_statement": "define intent accessIntent: from endpoint('internet') to endpoint('internalCampusComputers') allow protocol('SSH')",
        "grammar_check": true,
        "iterations": 1,
        "time": 9.564707517623901,
        "intent_length": 77,
        "nile_length": 114
    },
    {
        "text": "Reduce the download rate for faculty members to 20 Mbps",
        "extracted_entities": {
            "group": "faculty members",
            "qos_metric": "download rate",
            "qos_value": "20",
            "qos_unit": "Mbps",
            "operation": "reduce"
        },
        "nile_statement": "define intent qosIntent: for group('faculty') set bandwidth('max', '20', 'mbps')",
        "grammar_check": true,
        "iterations": 2,
        "time": 16.2705979347229,
        "intent_length": 55,
        "nile_length": 80
    },
    {
        "text": "Allow access from computers to DMZ",
        "extracted_entities": {
            "operation": "allow",
            "origin": "computers",
            "destination": "DMZ"
        },
        "nile_statement": "define intent accessIntent: from endpoint('computers') to endpoint('DMZ') allow service('web')",
        "grammar_check": true,
        "iterations": 1,
        "time": 8.551154136657715,
        "intent_length": 34,
        "nile_length": 94
    },
    {
        "text": "Lumi monitors the network traffic",
        "extracted_entities": {
            "middlebox": "traffic monitor",
            "traffic": "network"
        },
        "nile_statement": "define intent monitorIntent: for traffic('network') add middlebox('trafficMonitor')",
        "grammar_check": true,
        "iterations": 1,
        "time": 10.135436773300171,
        "intent_length": 33,
        "nile_length": 83
    }
]