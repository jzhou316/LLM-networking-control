,Intents,LLM Output,Correct Output,Step 1,Step 2,Step 3,Step 4,Step 5,Exact Match,Relaxed Match
0,Remove parental control from the network,define intent uniIntent: remove middlebox('parental control'),define intent uniIntent: for endpoint('network') remove middlebox('parental control'),1. Identify the network configuration action implied by the statement: to remove parental control from the network. ,"2. Determine the important Nile entities: 'parental control' (a middlebox). 3. 'parental control' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox('parental control'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to remove the middlebox, it corresponds to the Nile operation ""remove"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: remove middlebox('parental control'),[''],False,False
1,Do not allow people from dorms to access Instagram and YouTube,"define intent uniIntent: for group('dorms') block service('Instagram'), service('YouTube')","define intent uniIntent: for group('dorms') block service('Instagram'), service('YouTube')",1. Identify the network configuration action implied by the statement: to block access to Instagram and YouTube for people from dorms. ,"2. Determine the important Nile entities: 'people from dorms' (a group), 'Instagram' (a service), and 'YouTube' (a service). 3. 'people from dorms' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'dorms'. We pair them together in Nile: group('dorms'). 'Instagram' is a value of the entity ""service"", so we pair them together in Nile: service('Instagram'). 'YouTube' is a value of the entity ""service"", so we pair them together in Nile: service('YouTube'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to block access to both Instagram and YouTube, they both correspond to the Nile operation ""block"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('dorms') block service('Instagram'), service('YouTube')",[''],True,True
2,Social media is blocked by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('social media'),define intent uniIntent: for endpoint('university') add middlebox('firewall') block traffic('social media'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that blocks social media. ,"2. Determine the important Nile entities: 'social media' (a service), and 'University' (an endpoint). 3. 'social media' is a value of the entity ""service"", so we pair them together in Nile: service('social media'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the service, it corresponds to the Nile operation ""block"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('social media'),[''],False,False
3,Set a minimum bandwidth of 10 Mbps for guests,"define intent uniIntent: for endpoint('guests') set bandwidth('min', '10', 'mbps')","define intent uniIntent: for endpoint('guests') set bandwidth('min', '10', 'mbps')",1. Identify the network configuration action implied by the statement: to set a minimum bandwidth of 10 Mbps for guests. ,2. Determine the important Nile entities: a minimum bandwidth of 10 Mbps (a bandwidth) and 'guests' (an endpoint). ,"3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""min"" because we want to set a minimum bandwidth, the ""qos_value"" here is ""10"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('min', '10', 'mbps'). 'guests' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'guests'. We pair them together in Nile: endpoint('guests'). ","4. Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('guests') set bandwidth('min', '10', 'mbps')",True,True
4,Block all bittorrent traffic on the network,define intent uniIntent: block protocol('BitTorrent'),define intent uniIntent: for endpoint('network') block traffic('bittorrent'),1. Identify the network configuration action implied by the statement: to block all BitTorrent traffic on the network. ,"2. Determine the important Nile entities: 'BitTorrent' (a protocol) and the network. 3. 'BitTorrent' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('BitTorrent'). Since the network is not specified, we can assume it refers to the entire network. We pair them together in Nile: network(). ","4. Each Nile entity corresponds to a Nile operation. Since we want to block the protocol, it corresponds to the Nile operation ""block"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: block protocol('BitTorrent'),[''],False,False
5,Set a maximum quota of 500 MB per week for gaming traffic,"define intent uniIntent: set quota('max', '500', 'mb') for traffic('gaming traffic')","define intent uniIntent: for traffic('gaming') set quota('max', '500', 'mb/wk')",1. Identify the network configuration action implied by the statement: to set a maximum quota of 500 MB per week for gaming traffic. ,2. Determine the important Nile entities: a maximum quota of 500 MB per week (a quota) and gaming traffic (a traffic). ,"3. A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to set a maximum quota, the ""qos_value"" here is ""500"", and the ""qos_unit"" is ""mb"". We put them together in Nile: quota('max', '500', 'mb'). 'Gaming traffic' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('gaming traffic'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to set the quota, it corresponds to the Nile operation ""set"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: set quota('max', '500', 'mb') for traffic('gaming traffic')",False,True
6,Allow Netflix on the network for students only,define intent uniIntent: for group('students') allow service('Netflix'),define intent uniIntent: for group('students') allow service('Netflix'),1. Identify the network configuration action implied by the statement: to allow Netflix on the network for students only. ,"2. Determine the important Nile entities: 'Netflix' (a service) and 'students' (a group). 3. 'Netflix' is a value of the entity ""service"", so we pair them together in Nile: service('Netflix'). 'students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to allow the service, it corresponds to the Nile operation ""allow"". A group always corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') allow service('Netflix'),[''],True,True
7,University Housing monitors only the amount of traffic,define intent uniIntent: for endpoint('university housing') monitor traffic('traffic amount'),define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to monitor only the amount of traffic for University Housing. ,"2. Determine the important Nile entities: 'University Housing' (an endpoint) and the 'amount of traffic' (a traffic). 3. 'University Housing' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university housing'. We pair them together in Nile: endpoint('university housing'). The 'amount of traffic' is a ""traffic"", but it is not one of the possible values for the ""traffic"" entity, so we choose the one that closest matches in meaning: 'traffic amount'. We pair them together in Nile: traffic('traffic amount'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university housing') monitor traffic('traffic amount'),[''],False,False
8,AIM chat and file transfering is allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transferring')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows AIM chat and file transferring. ,"2. Determine the important Nile entities: 'AIM chat' (a service), 'file transferring' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'AIM chat' is a value of the entity ""service"", so we pair them together in Nile: service('AIM chat'). 'file transferring' is a value of the entity ""service"", so we pair them together in Nile: service('file transferring'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the service ""AIM chat"" and the service ""file transferring"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transferring')",[''],False,True
9,Battlenet is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows Battlenet. ,"2. Determine the important Nile entities: 'Battlenet' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'Battlenet' is a value of the entity ""service"", so we pair them together in Nile: service('Battlenet'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""Battlenet"", it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet'),[''],True,True
10,H323 video conferencing is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('H323 video conferencing'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows H323 video conferencing. ,"2. Determine the important Nile entities: 'H323 video conferencing' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'H323 video conferencing' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('H323 video conferencing'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""H323 video conferencing"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('H323 video conferencing'),[''],False,False
11,Everquest is blocked by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest'),define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that blocks Everquest. ,"2. Determine the important Nile entities: 'Everquest' (a service), and 'University' (an endpoint). 3. 'Everquest' is a value of the entity ""service"", so we pair them together in Nile: service('Everquest'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the service, it corresponds to the Nile operation ""block"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest'),[''],True,True
12,HTTP and HTTPS are allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows HTTP and HTTPS. ,"2. Determine the important Nile entities: 'HTTP' (a protocol), 'HTTPS' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'HTTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('HTTP'). 'HTTPS' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('HTTPS'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the protocol ""HTTP"" and the protocol ""HTTPS"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",[''],True,True
13,"MSN audio and video are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked","define intent uniIntent: add middlebox('firewall') block service('MSN audio'), service('MSN video') allow service('MSN chat'), service('application sharing'), service('file transferring')","define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')","1. Identify the network configuration action implied by the statement: to block MSN audio and video, but allow MSN chat, application sharing, and file transferring through the University firewall. ","2. Determine the important Nile entities: 'MSN audio' (a service), 'MSN video' (a service), 'MSN chat' (a service), 'application sharing' (a service), 'file transferring' (a service), and the University firewall (a middlebox). 3. 'MSN audio' is a value of the entity ""service"", so we pair them together in Nile: service('MSN audio'). 'MSN video' is a value of the entity ""service"", so we pair them together in Nile: service('MSN video'). 'MSN chat' is a value of the entity ""service"", so we pair them together in Nile: service('MSN chat'). 'application sharing' is a value of the entity ""service"", so we pair them together in Nile: service('application sharing'). 'file transferring' is a value of the entity ""service"", so we pair them together in Nile: service('file transferring'). The University firewall is a ""middlebox"", but it is not one of the possible values for the ""middlebox"" entity, so we choose the one that closest matches in meaning: 'firewall'. We pair them together in Nile: middlebox('firewall'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the services 'MSN audio' and 'MSN video', they both correspond to the Nile operation ""block"". Since we want to allow the services 'MSN chat', 'application sharing', and 'file transferring', they all correspond to the Nile operation ""allow"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: add middlebox('firewall') block service('MSN audio'), service('MSN video') allow service('MSN chat'), service('application sharing'), service('file transferring')",[''],False,False
14,Net2Phone is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows Net2Phone. ,"2. Determine the important Nile entities: 'Net2Phone' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'Net2Phone' is a value of the entity ""service"", so we pair them together in Nile: service('Net2Phone'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""Net2Phone"", it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone'),[''],True,True
15,PC-Telephone is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow application('pc-telephony'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows PC-Telephone. ,"2. Determine the important Nile entities: 'PC-Telephone' (an application), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'PC-Telephone' is an ""application"", but it is not one of the possible values for the ""application"" entity, so we choose the one that closest matches in meaning: 'pc-telephony'. We pair them together in Nile: application('pc-telephony'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the application ""PC-Telephone"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow application('pc-telephony'),[''],False,False
16,POP3 and secure POP are allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows POP3 and secure POP. ,"2. Determine the important Nile entities: 'POP3' (a protocol), 'secure POP' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'POP3' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('POP3'). 'secure POP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('secure POP'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the protocol ""POP3"" and the protocol ""secure POP"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",[''],True,True
17,SMTP is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows SMTP. ,"2. Determine the important Nile entities: 'SMTP' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'SMTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('SMTP'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""SMTP"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP'),[''],True,True
18,Sony Playstation 2 is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow device('Sony Playstation 2'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows the Sony Playstation 2. ,"2. Determine the important Nile entities: 'Sony Playstation 2' (a device), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'Sony Playstation 2' is a value of the entity ""device"", so we pair them together in Nile: device('Sony Playstation 2'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the device ""Sony Playstation 2"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow device('Sony Playstation 2'),[''],False,False
19,SSH is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows SSH. ,"2. Determine the important Nile entities: 'SSH' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'SSH' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('SSH'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""SSH"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH'),[''],True,True
20,Telnet is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows Telnet. ,"2. Determine the important Nile entities: 'Telnet' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'Telnet' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('Telnet'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""Telnet"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet'),[''],True,True
21,Sorenson Videophone 200 is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow device('Sorenson Videophone 200'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows the Sorenson Videophone 200. ,"2. Determine the important Nile entities: 'Sorenson Videophone 200' (a device), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'Sorenson Videophone 200' is a value of the entity ""device"", so we pair them together in Nile: device('Sorenson Videophone 200'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the device ""Sorenson Videophone 200"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow device('Sorenson Videophone 200'),[''],False,False
22,FTP and SFTP servers are allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('FTP'), protocol('SFTP')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows FTP and SFTP servers. ,"2. Determine the important Nile entities: 'FTP' (a protocol), 'SFTP' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'FTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('FTP'). 'SFTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('SFTP'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the protocol ""FTP"" and the protocol ""SFTP"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('FTP'), protocol('SFTP')",[''],False,True
23,Students data limit is 100 GB per week,"define intent uniIntent: for group('students') set quota('download', '100', 'gb/week')","define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')",1. Identify the network configuration action implied by the statement: to set a data limit of 100 GB per week for students. ,"2. Determine the important Nile entities: 'Students' (a group) and a data limit of 100 GB per week (a quota). 3. 'Students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"" because we want to limit the data, the ""qos_value"" here is ""100"", and the ""qos_unit"" is ""gb/week"". We put them together in Nile: quota('download', '100', 'gb/week'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '100', 'gb/week')",[''],False,True
24,The system passively monitors the network throughput when traffic is light,define intent uniIntent: for endpoint('system') passively monitor metric('network throughput') when condition('light traffic'),define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to passively monitor the network throughput when traffic is light. ,"2. Determine the important Nile entities: 'system' (an endpoint), 'network throughput' (a metric), and 'light traffic' (a condition). 3. 'system' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'system'. We pair them together in Nile: endpoint('system'). 'network throughput' is a ""metric"", so we pair them together in Nile: metric('network throughput'). 'light traffic' is a ""condition"", so we pair them together in Nile: condition('light traffic'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we want to passively monitor the network throughput, it corresponds to the Nile operation ""passively monitor"". Since 'light traffic' is a condition, it corresponds to the Nile operation ""when"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('system') passively monitor metric('network throughput') when condition('light traffic'),[''],False,False
25,"There is a 6 GB per 24-hour period upload or download data transfer limit starting at midnight of each day, on all of your combined traffic on ResNet and UIC wireless","define intent uniIntent: for endpoint('resnet'), endpoint('uic wireless') set quota('any', '6', 'gb') start hour('00:00')","define intent uniIntent: for endpoint('dorms'), endpoint('wireless') set quota('any', '6', 'gb/d') start hour('00:00') end hour('23:59')",1. Identify the network configuration action implied by the statement: to set a combined upload or download data transfer limit of 6 GB per 24-hour period starting at midnight of each day for all traffic on ResNet and UIC wireless. ,"2. Determine the important Nile entities: a data transfer limit of 6 GB per 24-hour period (a quota), 'midnight' (an hour), 'ResNet' (an endpoint), and 'UIC wireless' (an endpoint). ","3. A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is not specified as either 'upload' or 'download', so we imply that it has the value 'any'. The ""qos_value"" here is '6', and the ""qos_unit"" is 'gb'. We put them together in Nile: quota('any', '6', 'gb'). 'midnight' is an ""hour"", so we standardize the time and write it in Nile: hour('00:00'). 'ResNet' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'resnet'. We pair them together in Nile: endpoint('resnet'). 'UIC wireless' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'uic wireless'. We pair them together in Nile: endpoint('uic wireless'). ","4. Each Nile entity corresponds to a Nile operation. A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('resnet'), endpoint('uic wireless') set quota('any', '6', 'gb') start hour('00:00')",False,True
26,Guests cannot run any file sharing/downloading program,define intent uniIntent: from endpoint('guests') to application('file sharing') block traffic('any'),define intent uniIntent: for endpoint('guests') block service('file transfer'),1. Identify the network configuration action implied by the statement: to block guests from running any file sharing or downloading program. ,"2. Determine the important Nile entities: 'guests' (an endpoint), and file sharing/downloading programs (an application). 3. 'guests' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'guests'. We pair them together in Nile: endpoint('guests'). 'file sharing/downloading programs' is an ""application"", but it is not one of the possible values for the ""application"" entity, so we choose the one that closest matches in meaning: 'file sharing'. We pair them together in Nile: application('file sharing'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint 'guests' is an origin, it corresponds to the Nile operation ""from"". Since the application 'file sharing' is a destination, it corresponds to the Nile operation ""to"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: from endpoint('guests') to application('file sharing') block traffic('any'),[''],False,False
27,"No individual service or system running on the wired/wireless network should use more than 10 gigabytes of per day, regardless of whether it is inbound or outbound over the commodity network link","define intent uniIntent: for group('services') for endpoint('network') over link('commodity') set quota('max', '10', 'gb/day')","define intent uniIntent: for endpoint('network') set quota('any', '10', 'gb/d')","1. Identify the network configuration action implied by the statement: to set a daily data usage limit of 10 gigabytes for any individual service or system on the wired/wireless network, regardless of whether it is inbound or outbound over the commodity network link. ","2. Determine the important Nile entities: a daily data usage limit of 10 gigabytes (a quota), 'individual service or system' (a group), the wired/wireless network (an endpoint), and the commodity network link (a link). ","3. A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the data usage, the ""qos_value"" here is ""10"", and the ""qos_unit"" is ""gb/day"". We put them together in Nile: quota('max', '10', 'gb/day'). 'individual service or system' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'services'. We pair them together in Nile: group('services'). The wired/wireless network is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'network'. We pair them together in Nile: endpoint('network'). The commodity network link is a ""link"", but it is not one of the possible values for the ""link"" entity, so we choose the one that closest matches in meaning: 'commodity'. We pair them together in Nile: link('commodity'). ","4. Each Nile entity corresponds to a Nile operation. A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". A link always corresponds to the Nile operation ""over"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('services') for endpoint('network') over link('commodity') set quota('max', '10', 'gb/day')",False,False
28,The system will trigger an overuse notification if the average for either inbound or outbound usage exceeds 10 GB per week,"define intent uniIntent: set metric('usage'), threshold('average', '10', 'gb/week') trigger action('notification')","define intent uniIntent: for endpoint('network') add middlebox('overuse notification') set quota('any', '10', 'gb/wk')",1. Identify the network configuration action implied by the statement: to trigger an overuse notification if the average for either inbound or outbound usage exceeds 10 GB per week. ,"2. Determine the important Nile entities: an overuse notification (an action), the average for either inbound or outbound usage (a metric), and 10 GB per week (a threshold). ","3. An overuse notification is an ""action"", but it is not one of the possible values for the ""action"" entity, so we choose the one that closest matches in meaning: 'notification'. We pair them together in Nile: action('notification'). The average for either inbound or outbound usage is a ""metric"", but it is not one of the possible values for the ""metric"" entity, so we choose the one that closest matches in meaning: 'usage'. We pair them together in Nile: metric('usage'). The threshold is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""average"", the ""qos_value"" here is ""10"", and the ""qos_unit"" is ""gb/week"". We put them together in Nile: threshold('average', '10', 'gb/week'). ","4. Each Nile entity corresponds to a Nile operation. An action is either ""trigger"" or ""unset"". Since we want to trigger the action, it corresponds to the Nile operation ""trigger"". A metric is either ""set"" or ""unset"". Since we want to set the metric, it corresponds to the Nile operation ""set"". A threshold is either ""set"" or ""unset"". Since we want to set the threshold, it corresponds to the Nile operation ""set"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: set metric('usage'), threshold('average', '10', 'gb/week') trigger action('notification')",False,False
29,Quotas for students are 5000 Megabyte per hr download and 2000 Megabyte per hr upload,"define intent uniIntent: for group('students') set quota('download', '5000', 'mb/hr'), quota('upload', '2000', 'mb/hr')","define intent uniIntent: for group('students') set quota('download', '5000', 'mb/h'), quota('upload', '2000', 'mb/h')","1. Identify the network configuration action implied by the statement: to set download and upload quotas for students, with a download quota of 5000 Megabytes per hour and an upload quota of 2000 Megabytes per hour. ","2. Determine the important Nile entities: 'students' (a group), a download quota of 5000 Megabytes per hour (a quota), and an upload quota of 2000 Megabytes per hour (a quota). 3. 'students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"", the ""qos_value"" here is ""5000"", and the ""qos_unit"" is ""mb/hr"". We put them together in Nile: quota('download', '5000', 'mb/hr'). The ""qos_constraint"" here is ""upload"", the ""qos_value"" here is ""2000"", and the ""qos_unit"" is ""mb/hr"". We put them together in Nile: quota('upload', '2000', 'mb/hr'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to set the quotas, they both correspond to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '5000', 'mb/hr'), quota('upload', '2000', 'mb/hr')",[''],False,True
30,Routers or anything else that does routing or NAT are prohibited from MITNet as they interfere with the operation of the network,"define intent uniIntent: for network('MITNet') prohibit device('routers'), function('routing'), function('NAT')",define intent uniIntent: for endpoint('dorms') block protocol('nat'),1. Identify the network configuration action implied by the statement: to prohibit routers or any other devices that perform routing or NAT from being connected to MITNet. ,"2. Determine the important Nile entities: 'routers' (a device), 'routing' (a function), 'NAT' (a function), and 'MITNet' (a network). 3. 'routers' is a value of the entity ""device"", so we pair them together in Nile: device('routers'). 'routing' is a value of the entity ""function"", so we pair them together in Nile: function('routing'). 'NAT' is a value of the entity ""function"", so we pair them together in Nile: function('NAT'). 'MITNet' is a value of the entity ""network"", so we pair them together in Nile: network('MITNet'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to prohibit the devices, it corresponds to the Nile operation ""prohibit"". Since the functions are not explicitly mentioned, we assume that they are prohibited as well. Since the network is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for network('MITNet') prohibit device('routers'), function('routing'), function('NAT')",[''],False,False
31,The individual will have a 4 Mbps bandwidth rate limit,"define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')","define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",1. Identify the network configuration action implied by the statement: to set a bandwidth rate limit of 4 Mbps for the individual. ,2. Determine the important Nile entities: a bandwidth rate limit of 4 Mbps (a bandwidth) and the 'individual' (an endpoint). ,"3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""4"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '4', 'mbps'). The 'individual' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'host'. We pair them together in Nile: endpoint('host'). ","4. Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth rate limit, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",True,True
32,"You may not run FTP, telnet, peer-to-peer, HTTP, IRC, DNS and mail servers on ResNet or UIC wireless-connected devices","define intent uniIntent: for endpoint('resnet'), endpoint('uic wireless-connected devices') block service('FTP'), service('telnet'), service('peer-to-peer'), service('HTTP'), service('IRC'), service('DNS'), service('mail servers')","define intent uniIntent: for endpoint('dorms'), endpoint('wireless') block protocol('ftp'), protocol('telnet'), traffic('peer2peer'), protocol('http'), service('irc'), protocol('dns'), service('email')","1. Identify the network configuration action implied by the statement: to block the running of FTP, telnet, peer-to-peer, HTTP, IRC, DNS, and mail servers on ResNet or UIC wireless-connected devices. ","2. Determine the important Nile entities: FTP (a service), telnet (a service), peer-to-peer (a service), HTTP (a service), IRC (a service), DNS (a service), mail servers (a service), ResNet (an endpoint), and UIC wireless-connected devices (an endpoint). ","3. FTP, telnet, peer-to-peer, HTTP, IRC, DNS, and mail servers are all values of the entity ""service"". We pair them together in Nile: service('FTP'), service('telnet'), service('peer-to-peer'), service('HTTP'), service('IRC'), service('DNS'), service('mail servers'). ResNet is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'resnet'. We pair them together in Nile: endpoint('resnet'). UIC wireless-connected devices is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'uic wireless-connected devices'. We pair them together in Nile: endpoint('uic wireless-connected devices'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to block the services, they all correspond to the Nile operation ""block"". Since the endpoints are not origins or destinations, they correspond to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('resnet'), endpoint('uic wireless-connected devices') block service('FTP'), service('telnet'), service('peer-to-peer'), service('HTTP'), service('IRC'), service('DNS'), service('mail servers')",False,False
33,Students have 200 GB of Free monthly usage,"define intent uniIntent: for group('students') set quota('download', '200', 'gb')","define intent uniIntent: for group('students') set quota('download', '200', 'gb/mth')",1. Identify the network configuration action implied by the statement: to set a monthly usage limit of 200 GB for students. ,"2. Determine the important Nile entities: 'Students' (a group) and a monthly usage limit of 200 GB (a quota). 3. 'Students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"" because we want to set a limit on the download usage, the ""qos_value"" here is ""200"", and the ""qos_unit"" is ""gb"". We put them together in Nile: quota('download', '200', 'gb'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '200', 'gb')",[''],False,True
34,Faculty members have 500 Gb per week of free network use,"define intent uniIntent: for group('faculty') set quota('download', '500', 'gb/week')","define intent uniIntent: for group('professors') set quota('download', '500', 'gb/wk')",1. Identify the network configuration action implied by the statement: to set a network use quota of 500 GB per week for faculty members. ,"2. Determine the important Nile entities: 'Faculty members' (a group) and a network use quota of 500 GB per week (a quota). 3. 'Faculty members' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'faculty'. We pair them together in Nile: group('faculty'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"" because we want to set a quota for downloading, the ""qos_value"" here is ""500"", and the ""qos_unit"" is ""gb/week"". We put them together in Nile: quota('download', '500', 'gb/week'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('faculty') set quota('download', '500', 'gb/week')",[''],False,True
35,Students have a quota of 5 GB per day The quota is reset at 6am,"define intent uniIntent: for group('students') set quota('download', '5', 'gb/day') reset time('06:00')","define intent uniIntent: for group('students') set quota('download', '5','gb/d') start hour('06:00') end('05:59')",1. Identify the network configuration action implied by the statement: to set a quota of 5 GB per day for students and reset the quota at 6am. ,"2. Determine the important Nile entities: 'Students' (a group), a quota of 5 GB per day (a quota), and 6am (a time). 3. 'Students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"", the ""qos_value"" here is ""5"", and the ""qos_unit"" is ""gb/day"". We put them together in Nile: quota('download', '5', 'gb/day'). '6am' is a ""time"", so we standardize the time and write it in Nile: time('06:00'). ","4. Each Nile entity corresponds to a Nile operation. A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". Since we want to reset the quota at 6am, it corresponds to the Nile operation ""reset"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '5', 'gb/day') reset time('06:00')",[''],False,False
36,Internet is limited to 3 Mbps per host,"define intent uniIntent: for group('hosts') set bandwidth('max', '3', 'mbps')","define intent uniIntent: for endpoint('host') set bandwidth('max', '3', 'mbps')",1. Identify the network configuration action implied by the statement: to set a bandwidth rate limit of 3 Mbps per host. ,2. Determine the important Nile entities: a bandwidth rate limit of 3 Mbps (a bandwidth) and the 'host' (a group). ,"3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""3"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '3', 'mbps'). The 'host' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'hosts'. We pair them together in Nile: group('hosts'). ","4. Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth rate limit, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('hosts') set bandwidth('max', '3', 'mbps')",False,False
37,P2P application is separately capped at 30 Mbps for the entire campus,"define intent uniIntent: for endpoint('campus') for service('P2P applications') set bandwidth('max', '30', 'mbps')","define intent uniIntent: for traffic('peer2peer'), endpoint('campus') set bandwidth('max', '30', 'mbps')",1. Identify the network configuration action implied by the statement: to set a separate bandwidth rate limit of 30 Mbps for the entire campus for P2P applications. ,"2. Determine the important Nile entities: a bandwidth rate limit of 30 Mbps (a bandwidth), the 'entire campus' (an endpoint), and P2P applications (a service). ","3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""30"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '30', 'mbps'). The 'entire campus' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'campus'. We pair them together in Nile: endpoint('campus'). P2P applications are a ""service"", so we pair them together in Nile: service('P2P applications'). ","4. Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". A service always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('campus') for service('P2P applications') set bandwidth('max', '30', 'mbps')",False,False
38,Guests' network is rate-limited to 5 Mb/s per user,"define intent uniIntent: for endpoint('guests') set bandwidth('max', '5', 'mbps')","define intent uniIntent: for group('guests') set bandwidth('max', '5', 'mbps')",1. Identify the network configuration action implied by the statement: to set a rate limit of 5 Mb/s per user for the guests' network. ,2. Determine the important Nile entities: the guests' network (an endpoint) and a rate limit of 5 Mb/s per user (a bandwidth). ,"3. The guests' network is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'guests'. We pair them together in Nile: endpoint('guests'). A bandwidth is defined by three parameters, a ""qos_constraint"" ('max' or 'min'), a ""qos_value"" (a number), and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""5"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '5', 'mbps'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('guests') set bandwidth('max', '5', 'mbps')",False,False
39,The ResNet cap is currently 200 gigabytes per each 7 day period of combined incoming and outgoing traffic,"define intent uniIntent: for network('ResNet') set quota('combined', '200', 'gb')","define intent uniIntent: for group('dorms') set quota('any', '200', 'gb/wk')",1. Identify the network configuration action implied by the statement: to set a data cap of 200 gigabytes per each 7-day period for combined incoming and outgoing traffic for ResNet. ,2. Determine the important Nile entities: a data cap of 200 gigabytes per each 7-day period (a quota) and 'ResNet' (a network). ,"3. A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is not specified, so we imply that it has the value 'combined'. The ""qos_value"" here is '200', and the ""qos_unit"" is 'gb'. We put them together in Nile: quota('combined', '200', 'gb'). 'ResNet' is a value of the entity ""network"", so we pair them together in Nile: network('ResNet'). ","4. Each Nile entity corresponds to a Nile operation. Since the network is not an origin or a destination, it corresponds to the Nile operation ""for"". A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for network('ResNet') set quota('combined', '200', 'gb')",False,False
40,These network security changes include blocking traffic from the Internet into the UW network over FTP,define intent uniIntent: from endpoint('internet') to endpoint('uw network') block protocol('FTP'),define intent uniIntent: from endpoint('internet') to endpoint('network') block protocol('ftp'),1. Identify the network configuration action implied by the statement: to block traffic from the Internet into the UW network over FTP. ,"2. Determine the important Nile entities: 'Internet' (an endpoint), 'UW network' (an endpoint), and 'FTP' (a protocol). 3. 'Internet' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'internet'. We pair them together in Nile: endpoint('internet'). 'UW network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'uw network'. We pair them together in Nile: endpoint('uw network'). 'FTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('FTP'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint 'internet' is an origin, it corresponds to the Nile operation ""from"". Since the endpoint 'uw network' is a destination, it corresponds to the Nile operation ""to"". Since we want to block the traffic, it corresponds to the Nile operation ""block"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: from endpoint('internet') to endpoint('uw network') block protocol('FTP'),[''],False,True
41,"Elements of network security currently include the following four solutions: Network Border Infrastructure System, Intrusion Prevention System, Firewalls and Custom Unit Firewalls","define intent uniIntent: add security_solution('Network Border Infrastructure System'), security_solution('Intrusion Prevention System'), security_solution('Firewalls'), security_solution('Custom Unit Firewalls')","define intent uniIntent: for endpoint('network') add middlebox('network border system'), middlebox('ips'), middlebox('firewall'), middlebox('unit firewall')","1. Identify the network configuration actions implied by the statement: to add four network security solutions - Network Border Infrastructure System, Intrusion Prevention System, Firewalls, and Custom Unit Firewalls. ","2. Determine the important Nile entities: 'Network Border Infrastructure System' (a security solution), 'Intrusion Prevention System' (a security solution), 'Firewalls' (a security solution), and 'Custom Unit Firewalls' (a security solution). ","3. Each security solution is a value of the entity ""security solution"". We pair them together in Nile: security_solution('Network Border Infrastructure System'), security_solution('Intrusion Prevention System'), security_solution('Firewalls'), security_solution('Custom Unit Firewalls'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the security solutions, they all correspond to the Nile operation ""add"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: add security_solution('Network Border Infrastructure System'), security_solution('Intrusion Prevention System'), security_solution('Firewalls'), security_solution('Custom Unit Firewalls')",False,False
42,ACT/IT Infrastructure monitors traffic on the network for the purpose of maintaining proper network function,define intent uniIntent: for group('ACT/IT') monitor traffic('any'),define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to monitor network traffic for the purpose of maintaining proper network function. ,"2. Determine the important Nile entities: 'ACT/IT Infrastructure' (a group) and 'network traffic' (a traffic). 3. 'ACT/IT Infrastructure' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'ACT/IT'. We pair them together in Nile: group('ACT/IT'). 'network traffic' is a ""traffic"". Since the statement does not specify any specific type of traffic, we use the value 'any'. We pair them together in Nile: traffic('any'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to monitor the traffic, it corresponds to the Nile operation ""monitor"". A group always corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('ACT/IT') monitor traffic('any'),[''],False,False
43,"CIS restricts traffic that is known to cause damage to the network or hosts on it, such as NETBIOS",define intent uniIntent: for group('cis') restrict traffic('any'),define intent uniIntent: for endpoint('network') block service('NETBIOS'),"1. Identify the network configuration action implied by the statement: to restrict traffic that is known to cause damage to the network or hosts, such as NETBIOS, by the CIS. ","2. Determine the important Nile entities: 'CIS' (a group), traffic that causes damage to the network or hosts (a traffic), and 'NETBIOS' (a protocol). 3. 'CIS' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'cis'. We pair them together in Nile: group('cis'). The value of the ""traffic"" entity is not explicitly stated in the statement, so it is assumed to be all traffic that causes damage to the network or hosts, and we use the value 'any'. We pair them together in Nile: traffic('any'). 'NETBIOS' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('NETBIOS'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to restrict the traffic, it corresponds to the Nile operation ""restrict"". A group always corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('cis') restrict traffic('any'),[''],False,False
44,All network traffic passing in or out of Brown's network is monitored by intrusion detection system for signs of compromises,define intent uniIntent: for endpoint('network') add middlebox('intrusion detection system'),define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to monitor all network traffic passing in or out of Brown's network for signs of compromises using an intrusion detection system. ,"2. Determine the important Nile entities: 'Brown's network' (an endpoint) and 'intrusion detection system' (a middlebox). 3. 'Brown's network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'network'. We pair them together in Nile: endpoint('network'). 'intrusion detection system' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""intrusion detection system""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') add middlebox('intrusion detection system'),[''],False,True
45,"You may not run any services (e.g., FTP services,listservers,P2P file sharing servers, publishing files via generic file services, etc.) via ResNet or NYURoam wireless networks","define intent uniIntent: block action('block') for group('services') from endpoint('resnet'), endpoint('nyuroam')","define intent uniIntent: for endpoint('dorms'), endpoint('wireless') block protocol('ftp'), service('listserver'), traffic('peer2peer')","1. Identify the network configuration action implied by the statement: to block the running of any services (e.g., FTP services, listservers, P2P file sharing servers, publishing files via generic file services, etc.) via the ResNet or NYURoam wireless networks. ","2. Determine the important Nile entities: 'services' (a group), 'ResNet' (an endpoint), 'NYURoam wireless networks' (an endpoint), and 'block' (an action). 3. 'services' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'services'. We pair them together in Nile: group('services'). 'ResNet' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'resnet'. We pair them together in Nile: endpoint('resnet'). 'NYURoam wireless networks' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'nyuroam'. We pair them together in Nile: endpoint('nyuroam'). 'block' is an ""action"", so we pair them together in Nile: action('block'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to block the running of services, it corresponds to the Nile operation ""block"". A group always corresponds to the Nile operation ""for"". An endpoint is either an origin or a destination, so it corresponds to the Nile operation ""from"" or ""to"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: block action('block') for group('services') from endpoint('resnet'), endpoint('nyuroam')",[''],False,False
46,Housing does not normally limit the amount of bandwidth,define intent uniIntent: for group('housing') unset bandwidth(),define intent uniIntent: for endpoint('dorms') unset bandwidth(),1. Identify the network configuration action implied by the statement: to not set any bandwidth limits for Housing. ,"2. Determine the important Nile entities: 'Housing' (a group) and 'bandwidth' (a bandwidth). 3. 'Housing' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'housing'. We pair them together in Nile: group('housing'). 'bandwidth' is a ""bandwidth"". A ""bandwidth"" can have either zero parameters or three parameters, in which case they must consist of a ""qos_constraint"" ('max' or 'min'), a ""qos_value"" (a number), and a ""qos_unit"". Since there is no ""qos_constraint"", ""qos_value"", and ""qos_unit"" specified, we give our ""bandwidth"" zero parameters. In Nile, we have: bandwidth(). ","4. Each Nile entity corresponds to a Nile operation. Since the group is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we do not want to set any bandwidth limits, the bandwidth corresponds to the Nile operation ""unset"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('housing') unset bandwidth(),[''],False,False
47,"The UVA More Secure Network uses a firewall, a network security device designed to help protect your computer from hackers and other malicious people on the Internet.",define intent uniIntent: for endpoint('uva_more_secure_network') add middlebox('firewall'),define intent uniIntent: for endpoint('network') add middlebox('firewall'),1. Identify the network configuration action implied by the statement: to add a firewall for the UVA More Secure Network. ,"2. Determine the important Nile entities: 'UVA More Secure Network' (an endpoint) and 'firewall' (a middlebox). 3. 'UVA More Secure Network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'uva_more_secure_network'. We pair them together in Nile: endpoint('uva_more_secure_network'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('uva_more_secure_network') add middlebox('firewall'),[''],False,True
48,"The network firewall does prevent some applications from working in their normal manner, for example, video and audio conferencing products that use the H.323","define intent uniIntent: for middlebox('firewall') block application('video conferencing'), application('audio conferencing')",define intent uniIntent: for endpoint('network') block traffic('H323 video conferencing'),1. Identify the network configuration action implied by the statement: to block applications that use the H.323 protocol for video and audio conferencing. ,"2. Determine the important Nile entities: applications that use the H.323 protocol (an application), the network firewall (a middlebox). ","3. The applications that use the H.323 protocol are specified as video and audio conferencing products. We pair them together in Nile: application('video conferencing'), application('audio conferencing'). The network firewall is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox('firewall'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to block the applications, they correspond to the Nile operation ""block"". Since the middlebox is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for middlebox('firewall') block application('video conferencing'), application('audio conferencing')",False,False
49,The UC Davis network is continually scanned for prohibited activities and network threats.,"define intent uniIntent: for endpoint('ucdavis') scan category('prohibited activities'), category('network threats')",define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to continually scan the UC Davis network for prohibited activities and network threats. ,"2. Determine the important Nile entities: the 'UC Davis network' (an endpoint), 'prohibited activities' (a category), and 'network threats' (a category). ","3. The 'UC Davis network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'ucdavis'. We pair them together in Nile: endpoint('ucdavis'). 'prohibited activities' is a value of the entity ""category"", so we pair them together in Nile: category('prohibited activities'). 'network threats' is a value of the entity ""category"", so we pair them together in Nile: category('network threats'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we want to continually scan for both the category ""prohibited activities"" and the category ""network threats"", they both correspond to the Nile operation ""scan"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('ucdavis') scan category('prohibited activities'), category('network threats')",False,False
