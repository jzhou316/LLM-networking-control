,Intents,LLM Output,Correct Output,Step 1,Step 2,Step 3,Step 4,Step 5,Exact Match,Relaxed Match
0,"If a student is in obvious violations of copyright law by using a room's wired connection (ie ResNet) to distribute copyrighted materials, the room's connection will be disabled, and the issue could be sent to Housing Student Judicial Affairs",define intent uniIntent: for group('students') for endpoint('room') for connection('wired') for network('ResNet') for content('copyrighted') for action('disable') for entity('Housing Student Judicial Affairs'),"define intent uniIntent: add middlebox('copyright monitoring') for group('students'), endpoint('dorms')","Identify the network configuration action implied by the statement: to disable the room's connection if a student is in obvious violations of copyright law by using the room's wired connection to distribute copyrighted materials. Additionally, the issue could be sent to Housing Student Judicial Affairs. ","Determine the important Nile entities: 'student' (a group), 'room' (an endpoint), 'wired connection' (a connection), 'ResNet' (a network), 'copyrighted materials' (a content), 'connection disablement' (an action), and 'Housing Student Judicial Affairs' (an entity). ","'student' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). 'room' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'room'. We pair them together in Nile: endpoint('room'). 'wired connection' is a ""connection"", but it is not one of the possible values for the ""connection"" entity, so we choose the one that closest matches in meaning: 'wired'. We pair them together in Nile: connection('wired'). 'ResNet' is a ""network"", but it is not one of the possible values for the ""network"" entity, so we choose the one that closest matches in meaning: 'ResNet'. We pair them together in Nile: network('ResNet'). 'copyrighted materials' is a ""content"", but it is not one of the possible values for the ""content"" entity, so we choose the one that closest matches in meaning: 'copyrighted'. We pair them together in Nile: content('copyrighted'). 'connection disablement' is an ""action"", but it is not one of the possible values for the ""action"" entity, so we choose the one that closest matches in meaning: 'disable'. We pair them together in Nile: action('disable'). 'Housing Student Judicial Affairs' is an ""entity"", but it is not one of the possible values for the ""entity"" entity, so we choose the one that closest matches in meaning: 'Housing Student Judicial Affairs'. We pair them together in Nile: entity('Housing Student Judicial Affairs'). ","Each Nile entity corresponds to a Nile operation. Since we want to disable the connection, it corresponds to the Nile operation ""disable"". A group always corresponds to the Nile operation ""for"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since the network is not an origin or a destination, it corresponds to the Nile operation ""for"". Since the content is not an origin or a destination, it corresponds to the Nile operation ""for"". Since the action is not an origin or a destination, it corresponds to the Nile operation ""for"". Since the entity is not an origin or a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') for endpoint('room') for connection('wired') for network('ResNet') for content('copyrighted') for action('disable') for entity('Housing Student Judicial Affairs'),False,False
1,"Currently, the University of Illinois does not have any rate limits set in place",define intent uniIntent: check configuration('rate limits') for endpoint('university of illinois'),define intent uniIntent: for endpoint('university') unset bandwidth(),Identify the network configuration action implied by the statement: to check if there are any rate limits set in place for the University of Illinois. ,Determine the important Nile entities: 'University of Illinois' (an endpoint) and 'rate limits' (a configuration). ,"'University of Illinois' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university of illinois'. We pair them together in Nile: endpoint('university of illinois'). 'rate limits' is a ""configuration"", but it is not one of the possible values for the ""configuration"" entity, so we choose the one that closest matches in meaning: 'rate limits'. We pair them together in Nile: configuration('rate limits'). ","Each Nile entity corresponds to a Nile operation. Since we want to check if there are any rate limits set in place, it corresponds to the Nile operation ""check"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: check configuration('rate limits') for endpoint('university of illinois'),False,False
2,University Housing monitors only the amount of traffic,define intent uniIntent: for endpoint('university housing') metric('amount of traffic'),define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor'),Identify the network configuration action implied by the statement: to configure University Housing to monitor only the amount of traffic. ,Determine the important Nile entities: 'University Housing' (an endpoint) and 'amount of traffic' (a metric). ,"'University Housing' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university housing'. We pair them together in Nile: endpoint('university housing'). 'amount of traffic' is a ""metric"", so we pair them together in Nile: metric('amount of traffic'). ","Each Nile entity corresponds to a Nile operation. Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university housing') metric('amount of traffic'),False,False
3,CounterStrike server is blocked by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike server'),define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike'),Identify the network configuration action implied by the statement: to add a firewall for the university that blocks the CounterStrike server. ,"Determine the important Nile entities: 'CounterStrike server' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). ","'CounterStrike server' is a value of the entity ""service"", so we pair them together in Nile: service('CounterStrike server'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the service, it corresponds to the Nile operation ""block"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('CounterStrike server'),False,True
4,AIM chat and file transfering is allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transferring')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",Identify the network configuration action implied by the statement: to add a firewall for the university that allows AIM chat and file transferring. ,"Determine the important Nile entities: 'AIM chat' (a service), 'file transferring' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). ","'AIM chat' is a value of the entity ""service"", so we pair them together in Nile: service('AIM chat'). 'file transferring' is a value of the entity ""service"", so we pair them together in Nile: service('file transferring'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the service ""AIM chat"" and the service ""file transferring"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transferring')",False,True
5,Battlenet is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet'),Identify the network configuration action implied by the statement: to add a firewall for the university that allows Battlenet. ,"Determine the important Nile entities: 'Battlenet' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). ","'Battlenet' is a value of the entity ""service"", so we pair them together in Nile: service('Battlenet'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""Battlenet"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet'),True,True
6,H323 video conferencing is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('H323 video conferencing'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing'),Identify the network configuration action implied by the statement: to add a firewall for the university that allows H323 video conferencing. ,"Determine the important Nile entities: 'H323 video conferencing' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). ","'H323 video conferencing' is a value of the entity ""service"", so we pair them together in Nile: service('H323 video conferencing'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""H323 video conferencing"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('H323 video conferencing'),False,False
7,Everquest is blocked by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest'),define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest'),Identify the network configuration action implied by the statement: to add a firewall for the university that blocks Everquest. ,"Determine the important Nile entities: 'Everquest' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). ","'Everquest' is a value of the entity ""service"", so we pair them together in Nile: service('Everquest'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the service, it corresponds to the Nile operation ""block"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest'),True,True
8,HTTP and HTTPS are allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",Identify the network configuration action implied by the statement: to add a firewall for the university that allows HTTP and HTTPS. ,"Determine the important Nile entities: 'HTTP' (a protocol), 'HTTPS' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). ","'HTTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('HTTP'). 'HTTPS' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('HTTPS'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the protocol ""HTTP"" and the protocol ""HTTPS"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",True,True
9,IMAP and secure IMAP are allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",Identify the network configuration action implied by the statement: to add a firewall for the university that allows IMAP and secure IMAP. ,"Determine the important Nile entities: 'IMAP' (a protocol), 'secure IMAP' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). ","'IMAP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('IMAP'). 'secure IMAP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('secure IMAP'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the protocol ""IMAP"" and the protocol ""secure IMAP"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('IMAP'), protocol('secure IMAP')",True,True
10,"MSN audio and video are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked","define intent uniIntent: for endpoint('university') block service('MSN audio'), service('MSN video') allow service('MSN chat'), service('application sharing'), service('file transferring')","define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')","Identify the network configuration action implied by the statement: to block MSN audio and video, but allow MSN chat, application sharing, and file transferring. ","Determine the important Nile entities: 'MSN audio' (a service), 'MSN video' (a service), 'MSN chat' (a service), 'application sharing' (a service), 'file transferring' (a service), and the 'University' (an endpoint). ","'MSN audio' is a value of the entity ""service"", so we pair them together in Nile: service('MSN audio'). 'MSN video' is a value of the entity ""service"", so we pair them together in Nile: service('MSN video'). 'MSN chat' is a value of the entity ""service"", so we pair them together in Nile: service('MSN chat'). 'application sharing' is a value of the entity ""service"", so we pair them together in Nile: service('application sharing'). 'file transferring' is a value of the entity ""service"", so we pair them together in Nile: service('file transferring'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). ","Each Nile entity corresponds to a Nile operation. Since we want to block the services 'MSN audio' and 'MSN video', they both correspond to the Nile operation ""block"". Since we want to allow the services 'MSN chat', 'application sharing', and 'file transferring', they all correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') block service('MSN audio'), service('MSN video') allow service('MSN chat'), service('application sharing'), service('file transferring')",False,False
11,Net2Phone is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone'),Identify the network configuration action implied by the statement: to add a firewall for the university that allows Net2Phone. ,"Determine the important Nile entities: 'Net2Phone' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). ","'Net2Phone' is a value of the entity ""service"", so we pair them together in Nile: service('Net2Phone'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""Net2Phone"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone'),True,True
12,PC-Telephone is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC-Telephone'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone'),Identify the network configuration action implied by the statement: to add a firewall for the university that allows PC-Telephone. ,"Determine the important Nile entities: 'PC-Telephone' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). ","'PC-Telephone' is a value of the entity ""service"", so we pair them together in Nile: service('PC-Telephone'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""PC-Telephone"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC-Telephone'),False,True
13,POP3 and secure POP are allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",Identify the network configuration action implied by the statement: to add a firewall for the university that allows POP3 and secure POP. ,"Determine the important Nile entities: 'POP3' (a protocol), 'secure POP' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). ","'POP3' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('POP3'). 'secure POP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('secure POP'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the protocol ""POP3"" and the protocol ""secure POP"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",True,True
14,SMTP is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP'),Identify the network configuration action implied by the statement: to add a firewall for the university that allows SMTP. ,"Determine the important Nile entities: 'SMTP' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). ","'SMTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('SMTP'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""SMTP"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP'),True,True
15,Sony Playstation 2 is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow device('Sony Playstation 2'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2'),Identify the network configuration action implied by the statement: to add a firewall for the university that allows Sony Playstation ,,"Determine the important Nile entities: 'Sony Playstation 2' (a device), 'University' (an endpoint), and 'firewall' (a middlebox). ","'Sony Playstation 2' is a value of the entity ""device"", so we pair them together in Nile: device('Sony Playstation 2'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the device ""Sony Playstation 2"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",False,False
16,SSH is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH'),Identify the network configuration action implied by the statement: to add a firewall for the university that allows SSH. ,"Determine the important Nile entities: 'SSH' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). ","'SSH' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('SSH'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""SSH"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH'),True,True
17,Telnet is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet'),Identify the network configuration action implied by the statement: to add a firewall for the university that allows Telnet. ,"Determine the important Nile entities: 'Telnet' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). ","'Telnet' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('Telnet'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""Telnet"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet'),True,True
18,Sorenson Videophone 200 is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow device('Sorenson Videophone 200'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200'),Identify the network configuration action implied by the statement: to add a firewall for the university that allows the Sorenson Videophone ,,"Determine the important Nile entities: 'Sorenson Videophone 200' (a device), 'University' (an endpoint), and 'firewall' (a middlebox). ","'Sorenson Videophone 200' is a value of the entity ""device"", so we pair them together in Nile: device('Sorenson Videophone 200'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the device ""Sorenson Videophone 200"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",False,False
19,FTP and SFTP servers are allowed by the University firewall,"define intent uniIntent: for endpoint('servers') add middlebox('firewall') allow protocol('FTP'), protocol('SFTP')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",Identify the network configuration action implied by the statement: to add a firewall for the university that allows FTP and SFTP servers. ,"Determine the important Nile entities: 'FTP' (a protocol), 'SFTP' (a protocol), 'servers' (an endpoint), and 'firewall' (a middlebox). ","'FTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('FTP'). 'SFTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('SFTP'). 'servers' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'servers'. We pair them together in Nile: endpoint('servers'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the protocol ""FTP"" and the protocol ""SFTP"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('servers') add middlebox('firewall') allow protocol('FTP'), protocol('SFTP')",False,True
20,Students data limit is 100 GB per week,"define intent uniIntent: for group('students') set quota('download', '100', 'gb/week')","define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')",Identify the network configuration action implied by the statement: to set a data limit of 100 GB per week for students. ,Determine the important Nile entities: 'Students' (a group) and a data limit of 100 GB per week (a quota). ,"'Students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"", the ""qos_value"" here is ""100"", and the ""qos_unit"" is ""gb/week"". We put them together in Nile: quota('download', '100', 'gb/week'). ","Each Nile entity corresponds to a Nile operation. A group always corresponds to the Nile operation ""for"". A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '100', 'gb/week')",False,True
21,Students 10 GB a day download quotas are on 10 AM to Midnight,"define intent uniIntent: for group('students') set quota('download', '10', 'gb/day') start hour('10:00') end hour('00:00')","define intent uniIntent: for group('students') set quota('download', '10', 'gb/d') start hour('10:00') end hour('23:59')",Identify the network configuration action implied by the statement: to set a download quota of 10 GB a day for students within the time frame of 10 AM to Midnight. ,"Determine the important Nile entities: 'Students' (a group), a download quota of 10 GB a day (a quota), '10 AM' (an hour), and 'Midnight' (an hour). ","'Students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"", the ""qos_value"" here is ""10"", and the ""qos_unit"" is ""gb/day"". We put them together in Nile: quota('download', '10', 'gb/day'). '10 AM' is an ""hour"", so we standardize the time and write it in Nile: hour('10:00'). 'Midnight' is an ""hour"", so we standardize the time and write it in Nile: hour('00:00'). ","Each Nile entity corresponds to a Nile operation. A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". Since '10:00' is a start time and '00:00' is an end time, they correspond to ""start"" and ""end"", respectively. ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '10', 'gb/day') start hour('10:00') end hour('00:00')",False,True
22,The system passively monitors the network throughput when traffic is light,define intent uniIntent: monitor endpoint('system') metric('network throughput') when condition('light traffic'),define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),Identify the network configuration action implied by the statement: to passively monitor the network throughput when traffic is light. ,"Determine the important Nile entities: 'system' (an endpoint), 'network throughput' (a metric), and 'light traffic' (a condition). ","'system' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'system'. We pair them together in Nile: endpoint('system'). 'network throughput' is a ""metric"", so we pair them together in Nile: metric('network throughput'). 'light traffic' is a ""condition"", so we pair them together in Nile: condition('light traffic'). ","Each Nile entity corresponds to a Nile operation. Since the endpoint 'system' is the entity that performs the monitoring, it corresponds to the Nile operation ""monitor"". Since 'network throughput' is the metric being monitored, it corresponds to the Nile operation ""metric"". Since 'light traffic' is the condition under which the monitoring occurs, it corresponds to the Nile operation ""when"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: monitor endpoint('system') metric('network throughput') when condition('light traffic'),False,False
23,"There is a 6 GB per 24-hour period upload or download data transfer limit starting at midnight of each day, on all of your combined traffic on ResNet and UIC wireless","define intent uniIntent: for endpoint('resnet'), endpoint('uic wireless') set limit('any', '6', 'gb') start hour('00:00')","define intent uniIntent: for endpoint('dorms'), endpoint('wireless') set quota('any', '6', 'gb/d') start hour('00:00') end hour('23:59')","Identify the network configuration action implied by the statement: to set a data transfer limit of 6 GB per 24-hour period for combined upload and download traffic on ResNet and UIC wireless, starting at midnight of each day. ","Determine the important Nile entities: a data transfer limit of 6 GB per 24-hour period (a limit), 'ResNet' (an endpoint), 'UIC wireless' (an endpoint), and the start time of midnight (an hour). ","A limit is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is not specified, so we imply that it has the value 'any'. The ""qos_value"" here is '6', and the ""qos_unit"" is 'gb'. We put them together in Nile: limit('any', '6', 'gb'). 'ResNet' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'resnet'. We pair them together in Nile: endpoint('resnet'). 'UIC wireless' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'uic wireless'. We pair them together in Nile: endpoint('uic wireless'). The start time of midnight is an ""hour"", so we standardize the time and write it in Nile: hour('00:00'). ","Each Nile entity corresponds to a Nile operation. A limit is either ""set"" or ""unset"". Since we want to set the limit, it corresponds to the Nile operation ""set"". Since the endpoints are not origins or destinations, they correspond to the Nile operation ""for"". The start time corresponds to the Nile operation ""start"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('resnet'), endpoint('uic wireless') set limit('any', '6', 'gb') start hour('00:00')",False,False
24,Guests cannot run any file sharing/downloading program,"define intent uniIntent: from endpoint('guests') block service('file sharing program'), service('downloading program')",define intent uniIntent: for endpoint('guests') block service('file transfer'),Identify the network configuration action implied by the statement: to block guests from running any file sharing or downloading program. ,"Determine the important Nile entities: 'guests' (an endpoint), 'file sharing program' (a service), and 'downloading program' (a service). ","'guests' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'guests'. We pair them together in Nile: endpoint('guests'). 'file sharing program' is a value of the entity ""service"", so we pair them together in Nile: service('file sharing program'). 'downloading program' is a value of the entity ""service"", so we pair them together in Nile: service('downloading program'). ","Each Nile entity corresponds to a Nile operation. Since the endpoint 'guests' is an origin, it corresponds to the Nile operation ""from"". Since both 'file sharing program' and 'downloading program' are services that we want to block, they both correspond to the Nile operation ""block"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: from endpoint('guests') block service('file sharing program'), service('downloading program')",False,False
25,"No individual service or system running on the wired/wireless network should use more than 10 gigabytes of per day, regardless of whether it is inbound or outbound over the commodity network link","define intent uniIntent: for group('services') for endpoint('network') for link('commodity') set quota('data usage', '10', 'gb/day')","define intent uniIntent: for endpoint('network') set quota('any', '10', 'gb/d')","Identify the network configuration action implied by the statement: to set a daily data usage limit of 10 gigabytes for any individual service or system running on the wired/wireless network, regardless of whether it is inbound or outbound over the commodity network link. ","Determine the important Nile entities: a daily data usage limit of 10 gigabytes (a quota), 'individual service or system' (a group), the wired/wireless network (an endpoint), and the commodity network link (a link). ","A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""data usage"", the ""qos_value"" here is ""10"", and the ""qos_unit"" is ""gb/day"". We put them together in Nile: quota('data usage', '10', 'gb/day'). 'individual service or system' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'services'. We pair them together in Nile: group('services'). The wired/wireless network is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'network'. We pair them together in Nile: endpoint('network'). The commodity network link is a ""link"", but it is not one of the possible values for the ""link"" entity, so we choose the one that closest matches in meaning: 'commodity'. We pair them together in Nile: link('commodity'). ","Each Nile entity corresponds to a Nile operation. Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since the link is not an origin or a destination, it corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('services') for endpoint('network') for link('commodity') set quota('data usage', '10', 'gb/day')",False,False
26,The system will trigger an overuse notification if the average for either inbound or outbound usage exceeds 10 GB per week,"define intent uniIntent: set system('overuse notification') set metric('usage') set threshold('average', '10', 'gb/week')","define intent uniIntent: for endpoint('network') add middlebox('overuse notification') set quota('any', '10', 'gb/wk')",Identify the network configuration action implied by the statement: to set up an overuse notification system that triggers when the average inbound or outbound usage exceeds 10 GB per week. ,"Determine the important Nile entities: an overuse notification system (a system), the average inbound or outbound usage (a metric), and a threshold of 10 GB per week (a threshold). ","An overuse notification system is defined by the entity ""system"". We pair them together in Nile: system('overuse notification'). The average inbound or outbound usage is a ""metric"", but it is not one of the possible values for the ""metric"" entity, so we choose the one that closest matches in meaning: 'usage'. We pair them together in Nile: metric('usage'). The threshold is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""average"", the ""qos_value"" here is ""10"", and the ""qos_unit"" is ""gb/week"". We put them together in Nile: threshold('average', '10', 'gb/week'). ","Each Nile entity corresponds to a Nile operation. A system is either ""set"" or ""unset"". Since we want to set up the system, it corresponds to the Nile operation ""set"". A metric is either ""set"" or ""unset"". Since we want to set up the metric, it corresponds to the Nile operation ""set"". A threshold is either ""set"" or ""unset"". Since we want to set the threshold, it corresponds to the Nile operation ""set"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: set system('overuse notification') set metric('usage') set threshold('average', '10', 'gb/week')",False,False
27,Quotas for students are 5000 Megabyte per hr download and 2000 Megabyte per hr upload,"define intent uniIntent: for group('students') set quota('download', '5000', 'mb/hr'), quota('upload', '2000', 'mb/hr')","define intent uniIntent: for group('students') set quota('download', '5000', 'mb/h'), quota('upload', '2000', 'mb/h')","Identify the network configuration action implied by the statement: to set download and upload quotas for students, with a download quota of 5000 Megabytes per hour and an upload quota of 2000 Megabytes per hour. ","Determine the important Nile entities: 'students' (a group), a download quota of 5000 Megabytes per hour (a quota), and an upload quota of 2000 Megabytes per hour (a quota). ","'students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"", the ""qos_value"" here is ""5000"", and the ""qos_unit"" is ""mb/hr"". We put them together in Nile: quota('download', '5000', 'mb/hr'). The ""qos_constraint"" here is ""upload"", the ""qos_value"" here is ""2000"", and the ""qos_unit"" is ""mb/hr"". We put them together in Nile: quota('upload', '2000', 'mb/hr'). ","Each Nile entity corresponds to a Nile operation. A group always corresponds to the Nile operation ""for"". A quota is either ""set"" or ""unset"". Since we want to set the quotas, they correspond to the Nile operation ""set"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '5000', 'mb/hr'), quota('upload', '2000', 'mb/hr')",False,True
28,Routers or anything else that does routing or NAT are prohibited from MITNet as they interfere with the operation of the network,"define intent uniIntent: for device('routers') with function('routing'), function('NAT') on network('MITNet') prohibit constraint('prohibited')",define intent uniIntent: for endpoint('dorms') block protocol('nat'),Identify the network configuration action implied by the statement: to prohibit routers or any other devices that perform routing or NAT from being connected to MITNet. ,"Determine the important Nile entities: 'routers' (a device), 'routing' (a function), 'NAT' (a function), 'MITNet' (a network), and 'prohibited' (a constraint). ","'routers' is a value of the entity ""device"", so we pair them together in Nile: device('routers'). 'routing' is a value of the entity ""function"", so we pair them together in Nile: function('routing'). 'NAT' is a value of the entity ""function"", so we pair them together in Nile: function('NAT'). 'MITNet' is a value of the entity ""network"", so we pair them together in Nile: network('MITNet'). 'prohibited' is a value of the entity ""constraint"", so we pair them together in Nile: constraint('prohibited'). ","Each Nile entity corresponds to a Nile operation. Since we want to prohibit the devices, it corresponds to the Nile operation ""prohibit"". Since the devices are not an origin or a destination, it corresponds to the Nile operation ""for"". Since the functions are not an origin or a destination, it corresponds to the Nile operation ""with"". Since the network is not an origin or a destination, it corresponds to the Nile operation ""on"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for device('routers') with function('routing'), function('NAT') on network('MITNet') prohibit constraint('prohibited')",False,False
29,"When a total of 18 gigabytes of data is reached, the individual's bandwidth rate limit is set to 2 Mbps","define intent uniIntent: for endpoint('user') set quota('data_limit', '18', 'gb'), bandwidth('rate_limit', '2', 'mbps')","define intent uniIntent: for endpoint('host') set quota('download', '18', 'gb'), bandwidth('max', '2', 'mbps')",Identify the network configuration action implied by the statement: to set a bandwidth rate limit of 2 Mbps for the individual when a data quota of 18 gigabytes is reached. ,"Determine the important Nile entities: a bandwidth rate limit of 2 Mbps (a bandwidth), the 'individual' (an endpoint), and a quota of 18 gigabytes of data (a quota). ","A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""rate_limit"" because we want to limit the bandwidth, the ""qos_value"" here is ""2"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('rate_limit', '2', 'mbps'). The 'individual' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'user'. We pair them together in Nile: endpoint('user'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""data_limit"" because we want to limit the data usage, the ""qos_value"" here is '18', and the ""qos_unit"" is 'gb'. We put them together in Nile: quota('data_limit', '18', 'gb'). ","Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('user') set quota('data_limit', '18', 'gb'), bandwidth('rate_limit', '2', 'mbps')",False,True
30,The individual will have a 4 Mbps bandwidth rate limit,"define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')","define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",Identify the network configuration action implied by the statement: to set a bandwidth rate limit of 4 Mbps for the individual. ,Determine the important Nile entities: a bandwidth rate limit of 4 Mbps (a bandwidth) and the 'individual' (an endpoint). ,"A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""4"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '4', 'mbps'). The 'individual' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'host'. We pair them together in Nile: endpoint('host'). ","Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",True,True
31,"RHIT-OPEN will work in labs, classrooms and residence halls but does not allow the user to access the internal Rose-Hulman network",define intent uniIntent: from endpoint('guests') to endpoint('servers') in location('buildings'),define intent uniIntent: from endpoint('guests') to endpoint('servers') for group('host') block traffic('any'),"Identify the network configuration action implied by the statement: to allow RHIT-OPEN in labs, classrooms, and residence halls, but block access to the internal Rose-Hulman network. ","Determine the important Nile entities: 'RHIT-OPEN' (an endpoint), labs, classrooms, residence halls (locations), and the internal Rose-Hulman network (an endpoint). ","'RHIT-OPEN' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning. Since 'RHIT-OPEN' refers to a guest network, the one closest in meaning is 'guests'. We pair them together in Nile: endpoint('guests'). Labs, classrooms, and residence halls are ""locations"", but they are not one of the possible values for the ""location"" entity, so we choose the one that closest matches in meaning: 'buildings'. We pair them together in Nile: location('buildings'). The 'internal Rose-Hulman network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning. Since the 'internal Rose-Hulman network' refers to the internal servers, the one closest in meaning is 'servers'. We pair them together in Nile: endpoint('servers'). ","Each Nile entity corresponds to a Nile operation. Since the endpoint 'guests' is an origin, it corresponds to the Nile operation ""from"". Since the endpoint 'servers' is a destination, it corresponds to the Nile operation ""to"". Since the locations are not origins or destinations, they correspond to the Nile operation ""in"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: from endpoint('guests') to endpoint('servers') in location('buildings'),False,False
32,"You may not run FTP, telnet, peer-to-peer, HTTP, IRC, DNS and mail servers on ResNet or UIC wireless-connected devices","define intent uniIntent: for endpoint('residential network'), endpoint('UIC wireless') block service('FTP'), block service('telnet'), block service('peer-to-peer'), block service('HTTP'), block service('IRC'), block service('DNS'), block service('mail servers')","define intent uniIntent: for endpoint('dorms'), endpoint('wireless') block protocol('ftp'), protocol('telnet'), traffic('peer2peer'), protocol('http'), service('irc'), protocol('dns'), service('email')","Identify the network configuration action implied by the statement: to block the running of FTP, telnet, peer-to-peer, HTTP, IRC, DNS, and mail servers on ResNet or UIC wireless-connected devices. ","Determine the important Nile entities: FTP (a service), telnet (a service), peer-to-peer (a service), HTTP (a service), IRC (a service), DNS (a service), mail servers (a service), ResNet (an endpoint), and UIC wireless-connected devices (an endpoint). ","Each service corresponds to the Nile operation ""block"". We pair the services with their corresponding Nile expressions: block service('FTP'), block service('telnet'), block service('peer-to-peer'), block service('HTTP'), block service('IRC'), block service('DNS'), block service('mail servers'). 'ResNet' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'residential network'. We pair them together in Nile: endpoint('residential network'). 'UIC wireless-connected devices' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'UIC wireless'. We pair them together in Nile: endpoint('UIC wireless'). ","Each Nile entity corresponds to a Nile operation. Since we want to block the services, they all correspond to the Nile operation ""block"". Since the endpoints are neither origins nor destinations, they correspond to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('residential network'), endpoint('UIC wireless') block service('FTP'), block service('telnet'), block service('peer-to-peer'), block service('HTTP'), block service('IRC'), block service('DNS'), block service('mail servers')",False,False
33,Students have 200 GB of Free monthly usage,"define intent uniIntent: for group('students') set quota('download', '200', 'gb/month')","define intent uniIntent: for group('students') set quota('download', '200', 'gb/mth')",Identify the network configuration action implied by the statement: to set a monthly usage limit of 200 GB for students. ,Determine the important Nile entities: 'Students' (a group) and a monthly usage limit of 200 GB (a quota). ,"'Students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"", the ""qos_value"" here is ""200"", and the ""qos_unit"" is ""gb/month"". We put them together in Nile: quota('download', '200', 'gb/month'). ","Each Nile entity corresponds to a Nile operation. A group always corresponds to the Nile operation ""for"". A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '200', 'gb/month')",False,True
34,Faculty members have 500 Gb per week of free network use,"define intent uniIntent: for group('faculty') set quota('download', '500', 'gb/week')","define intent uniIntent: for group('professors') set quota('download', '500', 'gb/wk')",Identify the network configuration action implied by the statement: to set a network use quota of 500 GB per week for faculty members. ,Determine the important Nile entities: 'faculty members' (a group) and a quota of 500 GB per week (a quota). ,"'faculty members' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'faculty'. We pair them together in Nile: group('faculty'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"", the ""qos_value"" here is ""500"", and the ""qos_unit"" is ""gb/week"". We put them together in Nile: quota('download', '500', 'gb/week'). ","Each Nile entity corresponds to a Nile operation. A group always corresponds to the Nile operation ""for"". A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('faculty') set quota('download', '500', 'gb/week')",False,True
35,Students have a quota of 5 GB per day The quota is reset at  6am,"define intent uniIntent: for group('students') set quota('download', '5', 'gb/day') reset time('06:00')","define intent uniIntent: for group('students') set quota('download', '5','gb/d') start hour('06:00') end('05:59')",Identify the network configuration action implied by the statement: to set a daily quota of 5 GB for students and reset the quota at 6am. ,"Determine the important Nile entities: 'Students' (a group), a quota of 5 GB per day (a quota), and 6am (a time). ","'Students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"", the ""qos_value"" here is ""5"", and the ""qos_unit"" is ""gb/day"". We put them together in Nile: quota('download', '5', 'gb/day'). '6am' is a time, so we standardize the time and write it in Nile: time('06:00'). ","Each Nile entity corresponds to a Nile operation. A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". Since we want to reset the quota at 6am, it corresponds to the Nile operation ""reset"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '5', 'gb/day') reset time('06:00')",False,False
36,Internet is limited to 3 Mbps per host,"define intent uniIntent: for group('hosts') set bandwidth('max', '3', 'mbps')","define intent uniIntent: for endpoint('host') set bandwidth('max', '3', 'mbps')",Identify the network configuration action implied by the statement: to set a bandwidth rate limit of 3 Mbps for each host. ,"Determine the important Nile entities: a bandwidth rate limit of 3 Mbps (a bandwidth), and 'each host' (a group). ","A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""3"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '3', 'mbps'). 'Each host' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'hosts'. We pair them together in Nile: group('hosts'). ","Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('hosts') set bandwidth('max', '3', 'mbps')",False,False
37,P2P application is separately capped at 30 Mbps for the entire campus,"define intent uniIntent: for group('campus') set bandwidth('max', '30', 'mbps') for service('P2P applications')","define intent uniIntent: for traffic('peer2peer'), endpoint('campus') set bandwidth('max', '30', 'mbps')",Identify the network configuration action implied by the statement: to set a separate bandwidth rate limit of 30 Mbps for the entire campus for P2P applications. ,"Determine the important Nile entities: a bandwidth rate limit of 30 Mbps (a bandwidth), the 'entire campus' (a group), and P2P applications (a service). ","A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""30"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '30', 'mbps'). The 'entire campus' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'campus'. We pair them together in Nile: group('campus'). P2P applications are a ""service"", so we pair them together in Nile: service('P2P applications'). ","Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('campus') set bandwidth('max', '30', 'mbps') for service('P2P applications')",False,False
38,Guests' network is rate-limited to 5 Mb/s per user,"define intent uniIntent: for endpoint('guests') set bandwidth('max', '5', 'mbps')","define intent uniIntent: for group('guests') set bandwidth('max', '5', 'mbps')",Identify the network configuration action implied by the statement: to set a rate limit of 5 Mb/s per user for the guests' network. ,"Determine the important Nile entities: a rate limit of 5 Mb/s (a bandwidth), the 'guests' network (an endpoint), and 'user' (a group). ","A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""5"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '5', 'mbps'). The 'guests' network is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'guests'. We pair them together in Nile: endpoint('guests'). 'user' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'host'. We pair them together in Nile: group('host'). ","Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('guests') set bandwidth('max', '5', 'mbps')",False,False
39,The ResNet cap is currently 200 gigabytes per each 7 day period of combined incoming and outgoing traffic,"define intent uniIntent: for network('resnet') set quota('combined', '200', 'gb')","define intent uniIntent: for group('dorms') set quota('any', '200', 'gb/wk')",Identify the network configuration action implied by the statement: to set a data cap of 200 gigabytes per each 7-day period for combined incoming and outgoing traffic for ResNet. ,"Determine the important Nile entities: a data cap of 200 gigabytes per each 7-day period (a quota), and 'ResNet' (a network). ","A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""combined"", the ""qos_value"" here is ""200"", and the ""qos_unit"" is ""gb"". We put them together in Nile: quota('combined', '200', 'gb'). 'ResNet' is a ""network"", but it is not one of the possible values for the ""network"" entity, so we choose the one that closest matches in meaning: 'resnet'. We pair them together in Nile: network('resnet'). ","Each Nile entity corresponds to a Nile operation. A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". A network always corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for network('resnet') set quota('combined', '200', 'gb')",False,False
40,These network security changes include blocking traffic from the Internet into the UW network over FTP,define intent uniIntent: from endpoint('internet') to endpoint('uw network') block protocol('FTP'),define intent uniIntent: from endpoint('internet') to endpoint('network') block protocol('ftp'),Identify the network configuration action implied by the statement: to block traffic from the Internet into the UW network over FTP. ,"Determine the important Nile entities: 'Internet' (an endpoint), 'UW network' (an endpoint), and 'FTP' (a protocol). ","'Internet' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'internet'. We pair them together in Nile: endpoint('internet'). 'UW network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'uw network'. We pair them together in Nile: endpoint('uw network'). 'FTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('FTP'). ","Each Nile entity corresponds to a Nile operation. Since the endpoint 'internet' is an origin, it corresponds to the Nile operation ""from"". Since the endpoint 'uw network' is a destination, it corresponds to the Nile operation ""to"". Since we want to block the traffic, it corresponds to the Nile operation ""block"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: from endpoint('internet') to endpoint('uw network') block protocol('FTP'),False,True
41,"Elements of network security currently include the following four solutions: Network Border Infrastructure System, Intrusion Prevention System, Firewalls and Custom Unit Firewalls","define intent uniIntent: add solution('Network Border Infrastructure System'), solution('Intrusion Prevention System'), solution('Firewalls'), solution('Custom Unit Firewalls')","define intent uniIntent: for endpoint('network') add middlebox('network border system'), middlebox('ips'), middlebox('firewall'), middlebox('unit firewall')","Identify the network configuration actions implied by the statement: to add four network security solutions - Network Border Infrastructure System, Intrusion Prevention System, Firewalls, and Custom Unit Firewalls. ","Determine the important Nile entities: 'Network Border Infrastructure System' (a solution), 'Intrusion Prevention System' (a solution), 'Firewalls' (a solution), and 'Custom Unit Firewalls' (a solution). ","Each of the entities is a value of the entity ""solution"". We pair them together in Nile: solution('Network Border Infrastructure System'), solution('Intrusion Prevention System'), solution('Firewalls'), solution('Custom Unit Firewalls'). ","Each Nile entity corresponds to a Nile operation. Since we want to add the solutions, they all correspond to the Nile operation ""add"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: add solution('Network Border Infrastructure System'), solution('Intrusion Prevention System'), solution('Firewalls'), solution('Custom Unit Firewalls')",False,False
42,ACT/IT Infrastructure monitors traffic on the network for the purpose of maintaining proper network function,define intent uniIntent: for group('ACT/IT') monitor traffic('traffic') for purpose('network function'),define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),Identify the network configuration action implied by the statement: to monitor network traffic for the purpose of maintaining proper network function. ,"Determine the important Nile entities: 'ACT/IT Infrastructure' (a group), 'traffic' (a value), and 'network function' (a purpose). ","'ACT/IT Infrastructure' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'ACT/IT'. We pair them together in Nile: group('ACT/IT'). 'traffic' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('traffic'). 'network function' is a value of the entity ""purpose"", so we pair them together in Nile: purpose('network function'). ","Each Nile entity corresponds to a Nile operation. Since we want to monitor the traffic, it corresponds to the Nile operation ""monitor"". A group always corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('ACT/IT') monitor traffic('traffic') for purpose('network function'),False,False
43,"CIS restricts traffic that is known to cause damage to the network or hosts on it, such as NETBIOS",define intent uniIntent: restrict traffic('NETBIOS') with middlebox('CIS'),define intent uniIntent: for endpoint('network') block service('NETBIOS'),"Identify the network configuration action implied by the statement: to restrict traffic that is known to cause damage to the network or hosts, such as NETBIOS. ","Determine the important Nile entities: 'CIS' (a middlebox), traffic that causes damage to the network or hosts (a traffic). ","'CIS' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox('CIS'). The traffic that causes damage to the network or hosts is not explicitly specified, but it is mentioned as an example, such as 'NETBIOS'. We pair them together in Nile: traffic('NETBIOS'). ","Each Nile entity corresponds to a Nile operation. Since we want to restrict the traffic, it corresponds to the Nile operation ""restrict"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: restrict traffic('NETBIOS') with middlebox('CIS'),False,False
44,All network traffic passing in or out of Brown's network is monitored by intrusion detection system for signs of compromises,define intent uniIntent: for endpoint('Brown') add middlebox('intrusion detection system'),define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),Identify the network configuration action implied by the statement: to monitor all network traffic passing in or out of Brown's network for signs of compromises using an intrusion detection system. ,Determine the important Nile entities: 'Brown's network' (an endpoint) and 'intrusion detection system' (a middlebox). ,"'Brown's network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'Brown'. We pair them together in Nile: endpoint('Brown'). 'intrusion detection system' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""intrusion detection system""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('Brown') add middlebox('intrusion detection system'),False,True
45,"You may not run any services (e.g., FTP services,listservers,P2P file sharing servers, publishing files via generic file services, etc.) via ResNet or NYURoam wireless networks","define intent uniIntent: from endpoint('resnet'), endpoint('nyuroam') for group('services') block action('block')","define intent uniIntent: for endpoint('dorms'), endpoint('wireless') block protocol('ftp'), service('listserver'), traffic('peer2peer')","Identify the network configuration action implied by the statement: to block the running of any services (e.g., FTP services, listservers, P2P file sharing servers, publishing files via generic file services, etc.) via the ResNet or NYURoam wireless networks. ","Determine the important Nile entities: 'services' (a group), 'ResNet' (an endpoint), 'NYURoam wireless networks' (an endpoint), and 'block' (an action). ","'services' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'services'. We pair them together in Nile: group('services'). 'ResNet' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'resnet'. We pair them together in Nile: endpoint('resnet'). 'NYURoam wireless networks' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'nyuroam'. We pair them together in Nile: endpoint('nyuroam'). 'block' is an ""action"", so we pair them together in Nile: action('block'). ","Each Nile entity corresponds to a Nile operation. Since we want to block the running of services, it corresponds to the Nile operation ""block"". Since the endpoint 'resnet' is an origin, it corresponds to the Nile operation ""from"". Since the endpoint 'nyuroam' is an origin, it also corresponds to the Nile operation ""from"". A group always corresponds to the Nile operation ""for"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: from endpoint('resnet'), endpoint('nyuroam') for group('services') block action('block')",False,False
46,Housing does not normally limit the amount of bandwidth,define intent uniIntent: for group('housing') unset resource('bandwidth'),define intent uniIntent: for endpoint('dorms') unset bandwidth(),Identify the network configuration action implied by the statement: to not impose any bandwidth limits for housing. ,Determine the important Nile entities: 'Housing' (a group) and 'bandwidth' (a resource). ,"'Housing' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'housing'. We pair them together in Nile: group('housing'). 'bandwidth' is a ""resource"", so we pair them together in Nile: resource('bandwidth'). ","Each Nile entity corresponds to a Nile operation. Since we want to not impose any limits, it corresponds to the Nile operation ""unset"". A group always corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('housing') unset resource('bandwidth'),False,False
47,"The UVA More Secure Network uses a firewall, a network security device designed to help protect your computer from hackers and other malicious people on the Internet.",define intent uniIntent: for endpoint('UVA More Secure Network') add middlebox('firewall'),define intent uniIntent: for endpoint('network') add middlebox('firewall'),Identify the network configuration action implied by the statement: to add a firewall for the UVA More Secure Network. ,"Determine the important Nile entities: 'UVA More Secure Network' (an endpoint), and 'firewall' (a middlebox). ","'UVA More Secure Network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'UVA More Secure Network'. We pair them together in Nile: endpoint('UVA More Secure Network'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('UVA More Secure Network') add middlebox('firewall'),False,True
48,"The network firewall does prevent some applications from working in their normal manner, for example, video and audio conferencing products that use the H.323","define intent uniIntent: add middlebox('firewall') block protocol('H.323'), service('video conferencing'), service('audio conferencing')",define intent uniIntent: for endpoint('network') block traffic('H323 video conferencing'),"Identify the network configuration action implied by the statement: to block applications that use the H.323 protocol, specifically video and audio conferencing products. ","Determine the important Nile entities: applications that use the H.323 protocol (a protocol), video and audio conferencing products (a service), and the network firewall (a middlebox). ","Applications that use the H.323 protocol are values of the entity ""protocol"", so we pair them together in Nile: protocol('H.323'). Video and audio conferencing products are values of the entity ""service"", so we pair them together in Nile: service('video conferencing'), service('audio conferencing'). The network firewall is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the services that use the H.323 protocol, they correspond to the Nile operation ""block"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: add middlebox('firewall') block protocol('H.323'), service('video conferencing'), service('audio conferencing')",False,False
49,The UC Davis network is continually scanned for prohibited activities and network threats.,"define intent uniIntent: from endpoint('ucdavis') scan category('prohibited activities'), category('network threats')",define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),Identify the network configuration action implied by the statement: to continually scan the UC Davis network for prohibited activities and network threats. ,"Determine the important Nile entities: the 'UC Davis network' (an endpoint), 'prohibited activities' (a category), and 'network threats' (a category). ","The 'UC Davis network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'ucdavis'. We pair them together in Nile: endpoint('ucdavis'). 'prohibited activities' is a value of the entity ""category"", so we pair them together in Nile: category('prohibited activities'). 'network threats' is a value of the entity ""category"", so we pair them together in Nile: category('network threats'). ","Each Nile entity corresponds to a Nile operation. Since the endpoint 'ucdavis' is an origin, it corresponds to the Nile operation ""from"". 'prohibited activities' and 'network threats' are categories that need to be scanned, so they correspond to the Nile operation ""scan"". ","We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: from endpoint('ucdavis') scan category('prohibited activities'), category('network threats')",False,False
