,Intents,LLM Output,Correct Output,Step 1,Step 2,Step 3,Step 4,Step 5,Exact Match,Relaxed Match
0,Remove parental control from the network,define intent uniIntent: remove middlebox('parental control'),define intent uniIntent: for endpoint('network') remove middlebox('parental control'),1. Identify the network configuration action implied by the statement: to remove parental control from the network. ,"2. Determine the important Nile entities: 'parental control' (a middlebox). 3. 'parental control' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox('parental control'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to remove the middlebox, it corresponds to the Nile operation ""remove"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: remove middlebox('parental control'),[''],False,False
1,Do not allow people from dorms to access Instagram and YouTube,"define intent uniIntent: for group('dorms') block service('Instagram'), service('YouTube')","define intent uniIntent: for group('dorms') block service('Instagram'), service('YouTube')",1. Identify the network configuration action implied by the statement: to block access to Instagram and YouTube for people from dorms. ,"2. Determine the important Nile entities: 'people from dorms' (a group), 'Instagram' (a service), and 'YouTube' (a service). 3. 'people from dorms' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'dorms'. We pair them together in Nile: group('dorms'). 'Instagram' is a value of the entity ""service"", so we pair them together in Nile: service('Instagram'). 'YouTube' is a value of the entity ""service"", so we pair them together in Nile: service('YouTube'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to block access to both Instagram and YouTube, they both correspond to the Nile operation ""block"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('dorms') block service('Instagram'), service('YouTube')",[''],True,True
2,Social media is blocked by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') block traffic('social media'),define intent uniIntent: for endpoint('university') add middlebox('firewall') block traffic('social media'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that blocks social media. ,"2. Determine the important Nile entities: 'social media' (a traffic), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'social media' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('social media'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the traffic, it corresponds to the Nile operation ""block"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') block traffic('social media'),[''],True,True
3,Set a minimum bandwidth of 10 Mbps for guests,"define intent uniIntent: for endpoint('guests') set bandwidth('min', '10', 'mbps')","define intent uniIntent: for endpoint('guests') set bandwidth('min', '10', 'mbps')",1. Identify the network configuration action implied by the statement: to set a minimum bandwidth of 10 Mbps for guests. ,2. Determine the important Nile entities: a minimum bandwidth of 10 Mbps (a bandwidth) and 'guests' (an endpoint). ,"3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""min"" because we want to set a minimum bandwidth, the ""qos_value"" here is ""10"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('min', '10', 'mbps'). 'guests' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'guests'. We pair them together in Nile: endpoint('guests'). ","4. Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('guests') set bandwidth('min', '10', 'mbps')",True,True
4,Block all bittorrent traffic on the network,define intent uniIntent: for endpoint('network') block traffic('bittorrent'),define intent uniIntent: for endpoint('network') block traffic('bittorrent'),1. Identify the network configuration action implied by the statement: to block all bittorrent traffic on the network. ,"2. Determine the important Nile entities: 'bittorrent' (a traffic) and the network (an endpoint). 3. 'bittorrent' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('bittorrent'). The network is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'network'. We pair them together in Nile: endpoint('network'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to block the traffic, it corresponds to the Nile operation ""block"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') block traffic('bittorrent'),[''],True,True
5,Set a maximum quota of 500 MB per week for gaming traffic,"define intent uniIntent: set quota('max', '500', 'mb/wk') for traffic('gaming')","define intent uniIntent: for traffic('gaming') set quota('max', '500', 'mb/wk')",1. Identify the network configuration action implied by the statement: to set a maximum quota of 500 MB per week for gaming traffic. ,2. Determine the important Nile entities: a maximum quota of 500 MB per week (a quota) and gaming traffic (a traffic). ,"3. A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to set a maximum quota, the ""qos_value"" here is ""500"", and the ""qos_unit"" is ""mb/wk"". We put them together in Nile: quota('max', '500', 'mb/wk'). The 'gaming traffic' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('gaming'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to set the quota, it corresponds to the Nile operation ""set"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: set quota('max', '500', 'mb/wk') for traffic('gaming')",False,True
6,Allow Netflix on the network for students only,define intent uniIntent: allow service('Netflix') for group('students'),define intent uniIntent: for group('students') allow service('Netflix'),1. Identify the network configuration action implied by the statement: to allow Netflix on the network for students only. ,"2. Determine the important Nile entities: 'Netflix' (a service) and 'students' (a group). 3. 'Netflix' is a value of the entity ""service"", so we pair them together in Nile: service('Netflix'). 'students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to allow the service, it corresponds to the Nile operation ""allow"". A group always corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: allow service('Netflix') for group('students'),[''],False,True
7,University Housing monitors only the amount of traffic,define intent uniIntent: for endpoint('dorms') traffic('amount of traffic'),define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to configure University Housing to monitor only the amount of traffic. ,"2. Determine the important Nile entities: 'University Housing' (an endpoint) and 'amount of traffic' (a traffic). 3. 'University Housing' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'dorms'. We pair them together in Nile: endpoint('dorms'). 'amount of traffic' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('amount of traffic'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('dorms') traffic('amount of traffic'),[''],False,False
8,AIM chat and file transfering is allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transferring')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows AIM chat and file transferring. ,"2. Determine the important Nile entities: 'AIM chat' (a service), 'file transferring' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'AIM chat' is a value of the entity ""service"", so we pair them together in Nile: service('AIM chat'). 'file transferring' is a value of the entity ""service"", so we pair them together in Nile: service('file transferring'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the service ""AIM chat"" and the service ""file transferring"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transferring')",[''],False,True
9,Battlenet is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows Battlenet. ,"2. Determine the important Nile entities: 'Battlenet' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'Battlenet' is a value of the entity ""service"", so we pair them together in Nile: service('Battlenet'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""Battlenet"", it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet'),[''],True,True
10,H323 video conferencing is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows H323 video conferencing. ,"2. Determine the important Nile entities: 'H323 video conferencing' (a traffic), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'H323 video conferencing' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('H323 video conferencing'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the traffic 'H323 video conferencing', it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing'),[''],True,True
11,Everquest is blocked by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest'),define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that blocks Everquest. ,"2. Determine the important Nile entities: 'Everquest' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'Everquest' is a value of the entity ""service"", so we pair them together in Nile: service('Everquest'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the service, it corresponds to the Nile operation ""block"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest'),[''],True,True
12,HTTP and HTTPS are allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows HTTP and HTTPS. ,"2. Determine the important Nile entities: 'HTTP' (a protocol), 'HTTPS' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'HTTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('HTTP'). 'HTTPS' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('HTTPS'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the protocol ""HTTP"" and the protocol ""HTTPS"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",[''],True,True
13,"MSN audio and video are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked","define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN audio'), service('MSN video') allow service('MSN chat'), service('application sharing'), service('file transferring')","define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')","1. Identify the network configuration action implied by the statement: to add a firewall for the university that blocks MSN audio and video, but does not block MSN chat, application sharing, and file transferring. ","2. Determine the important Nile entities: 'MSN audio' (a service), 'MSN video' (a service), 'MSN chat' (a service), 'application sharing' (a service), 'file transferring' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'MSN audio' is a value of the entity ""service"", so we pair them together in Nile: service('MSN audio'). 'MSN video' is a value of the entity ""service"", so we pair them together in Nile: service('MSN video'). 'MSN chat' is a value of the entity ""service"", so we pair them together in Nile: service('MSN chat'). 'application sharing' is a value of the entity ""service"", so we pair them together in Nile: service('application sharing'). 'file transferring' is a value of the entity ""service"", so we pair them together in Nile: service('file transferring'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the services 'MSN audio' and 'MSN video', they both correspond to the Nile operation ""block"". Since we want to allow the services 'MSN chat', 'application sharing', and 'file transferring', they all correspond to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN audio'), service('MSN video') allow service('MSN chat'), service('application sharing'), service('file transferring')",[''],False,True
14,Net2Phone is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows Net2Phone. ,"2. Determine the important Nile entities: 'Net2Phone' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'Net2Phone' is a value of the entity ""service"", so we pair them together in Nile: service('Net2Phone'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""Net2Phone"", it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone'),[''],True,True
15,PC-Telephone is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC-Telephone'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows PC-Telephone. ,"2. Determine the important Nile entities: 'PC-Telephone' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'PC-Telephone' is a value of the entity ""service"", so we pair them together in Nile: service('PC-Telephone'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""PC-Telephone"", it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC-Telephone'),[''],False,True
16,POP3 and secure POP are allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows POP3 and secure POP. ,"2. Determine the important Nile entities: 'POP3' (a protocol), 'secure POP' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'POP3' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('POP3'). 'secure POP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('secure POP'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the protocol ""POP3"" and the protocol ""secure POP"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",[''],True,True
17,SMTP is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows SMTP. ,"2. Determine the important Nile entities: 'SMTP' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'SMTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('SMTP'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""SMTP"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP'),[''],True,True
18,Sony Playstation 2 is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows the Sony Playstation 2. ,"2. Determine the important Nile entities: 'Sony Playstation 2' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'Sony Playstation 2' is a value of the entity ""service"", so we pair them together in Nile: service('Sony Playstation 2'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""Sony Playstation 2"", it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2'),[''],True,True
19,SSH is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows SSH. ,"2. Determine the important Nile entities: 'SSH' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'SSH' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('SSH'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""SSH"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH'),[''],True,True
20,Telnet is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows Telnet. ,"2. Determine the important Nile entities: 'Telnet' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'Telnet' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('Telnet'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""Telnet"", it corresponds to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet'),[''],True,True
21,Sorenson Videophone 200 is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows the Sorenson Videophone 200. ,"2. Determine the important Nile entities: 'Sorenson Videophone 200' (a service), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'Sorenson Videophone 200' is a value of the entity ""service"", so we pair them together in Nile: service('Sorenson Videophone 200'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""Sorenson Videophone 200"", it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200'),[''],True,True
22,FTP and SFTP servers are allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('FTP'), protocol('SFTP')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows FTP and SFTP servers. ,"2. Determine the important Nile entities: 'FTP' (a protocol), 'SFTP' (a protocol), 'University' (an endpoint), and 'firewall' (a middlebox). 3. 'FTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('FTP'). 'SFTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('SFTP'). 'University' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the protocol ""FTP"" and the protocol ""SFTP"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('FTP'), protocol('SFTP')",[''],False,True
23,Students data limit is 100 GB per week,"define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')","define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')",1. Identify the network configuration action implied by the statement: to set a data limit of 100 GB per week for students. ,"2. Determine the important Nile entities: 'Students' (a group) and a data limit of 100 GB per week (a quota). 3. 'Students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"" because we are setting a data limit, the ""qos_value"" here is ""100"", and the ""qos_unit"" is ""gb/wk"". We put them together in Nile: quota('download', '100', 'gb/wk'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')",[''],True,True
24,The system passively monitors the network throughput when traffic is light,"define intent uniIntent: for endpoint('network') monitor traffic('network throughput', 'low')",define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to passively monitor the network throughput when traffic is light. ,"2. Determine the important Nile entities: 'system' (an endpoint), 'network throughput' (a traffic), and 'light' (a condition). 3. 'system' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'network'. We pair them together in Nile: endpoint('network'). 'network throughput' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('network throughput'). 'light' is a condition, but it is not one of the possible values for the ""traffic"" entity, so we choose the one that closest matches in meaning: 'low'. We pair them together in Nile: traffic('low'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we want to passively monitor the network throughput, it corresponds to the Nile operation ""monitor"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') monitor traffic('network throughput', 'low')",[''],False,False
25,"There is a 6 GB per 24-hour period upload or download data transfer limit starting at midnight of each day, on all of your combined traffic on ResNet and UIC wireless","define intent uniIntent: for endpoint('dorms'), endpoint('wireless') start hour","define intent uniIntent: for endpoint('dorms'), endpoint('wireless') set quota('any', '6', 'gb/d') start hour('00:00') end hour('23:59')","1. Identify the network configuration action implied by the statement: to set a data transfer limit of 6 GB per 24-hour period for combined upload or download traffic on ResNet and UIC wireless, starting at midnight of each day. ","2. Determine the important Nile entities: a data transfer limit of 6 GB per 24-hour period (a quota), 'midnight' (a time), combined upload or download traffic on ResNet and UIC wireless (a traffic), 'ResNet' (an endpoint), and 'UIC wireless' (an endpoint). ","3. A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is not explicitly specified, so we assume it is ""any"". The ""qos_value"" here is ""6"", and the ""qos_unit"" is ""gb/24hr"". We put them together in Nile: quota('any', '6', 'gb/24hr'). 'midnight' is a time, so we standardize the time and write it in Nile: hour('00:00'). The combined upload or download traffic on ResNet and UIC wireless is a ""traffic"", and since it is not explicitly specified, we assume it is 'any'. We pair them together in Nile: traffic('any'). 'ResNet' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'dorms'. We pair them together in Nile: endpoint('dorms'). 'UIC wireless' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'wireless'. We pair them together in Nile: endpoint('wireless'). ","4. Each Nile entity corresponds to a Nile operation. A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since '00:00' is a start time, it corresponds to the Nile operation ""start"". The traffic corresponds to the Nile operation ""allow"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('dorms'), endpoint('wireless') start hour",False,False
26,Guests cannot run any file sharing/downloading program,define intent uniIntent: for endpoint('guests') block traffic('file sharing/downloading program'),define intent uniIntent: for endpoint('guests') block service('file transfer'),1. Identify the network configuration action implied by the statement: to block guests from running any file sharing or downloading program. ,"2. Determine the important Nile entities: 'guests' (an endpoint) and 'file sharing/downloading program' (a traffic). 3. 'guests' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'guests'. We pair them together in Nile: endpoint('guests'). 'file sharing/downloading program' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('file sharing/downloading program'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we want to block the traffic, it corresponds to the Nile operation ""block"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('guests') block traffic('file sharing/downloading program'),[''],False,False
27,"No individual service or system running on the wired/wireless network should use more than 10 gigabytes of per day, regardless of whether it is inbound or outbound over the commodity network link","define intent uniIntent: for group('host') set quota('any', '10', 'gb/day')","define intent uniIntent: for endpoint('network') set quota('any', '10', 'gb/d')","1. Identify the network configuration action implied by the statement: to set a daily data usage limit of 10 gigabytes for any individual service or system on the wired/wireless network, regardless of whether it is inbound or outbound over the commodity network link. ","2. Determine the important Nile entities: a daily data usage limit of 10 gigabytes (a quota), 'individual service or system' (a group), and the 'wired/wireless network' (an endpoint). ","3. A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is not specified, so we imply that it has the value 'any'. The ""qos_value"" here is '10', and the ""qos_unit"" is 'gb/day'. We put them together in Nile: quota('any', '10', 'gb/day'). 'individual service or system' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'host'. We pair them together in Nile: group('host'). The 'wired/wireless network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'network'. We pair them together in Nile: endpoint('network'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('host') set quota('any', '10', 'gb/day')",False,False
28,The system will trigger an overuse notification if the average for either inbound or outbound usage exceeds 10 GB per week,"define intent uniIntent: add middlebox('overuse notification') set bandwidth('any', '10', 'gb/wk')","define intent uniIntent: for endpoint('network') add middlebox('overuse notification') set quota('any', '10', 'gb/wk')",1. Identify the network configuration action implied by the statement: to set up an overuse notification if the average inbound or outbound usage exceeds 10 GB per week. ,"2. Determine the important Nile entities: an overuse notification (a middlebox), the average inbound or outbound usage (a bandwidth), and 10 GB per week (a quota). ","3. An overuse notification is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox('overuse notification'). A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". Since the statement does not specify whether it refers to inbound or outbound usage, we assume it refers to both. Therefore, the ""qos_constraint"" is ""any"", the ""qos_value"" is ""10"", and the ""qos_unit"" is ""gb/wk"". We put them together in Nile: bandwidth('any', '10', 'gb/wk'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: add middlebox('overuse notification') set bandwidth('any', '10', 'gb/wk')",False,False
29,Quotas for students are 5000 Megabyte per hr download and 2000 Megabyte per hr upload,"define intent uniIntent: for group('students') set quota('download', '5000', 'mb/hr'), quota('upload', '2000', 'mb/hr')","define intent uniIntent: for group('students') set quota('download', '5000', 'mb/h'), quota('upload', '2000', 'mb/h')",1. Identify the network configuration action implied by the statement: to set download and upload quotas for students. ,"2. Determine the important Nile entities: 'students' (a group), a download quota of 5000 Megabytes per hour (a quota), and an upload quota of 2000 Megabytes per hour (a quota). 3. 'students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"", the ""qos_value"" here is ""5000"", and the ""qos_unit"" is ""mb/hr"". We put them together in Nile: quota('download', '5000', 'mb/hr'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""upload"", the ""qos_value"" here is ""2000"", and the ""qos_unit"" is ""mb/hr"". We put them together in Nile: quota('upload', '2000', 'mb/hr'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to set the quotas, they both correspond to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '5000', 'mb/hr'), quota('upload', '2000', 'mb/hr')",[''],False,True
30,Routers or anything else that does routing or NAT are prohibited from MITNet as they interfere with the operation of the network,"define intent uniIntent: for endpoint('network') block middlebox('routers'), middlebox('devices that perform routing or NAT')",define intent uniIntent: for endpoint('dorms') block protocol('nat'),1. Identify the network configuration action implied by the statement: to prohibit routers or any other devices that perform routing or NAT from being connected to MITNet. ,"2. Determine the important Nile entities: 'routers' (a middlebox), devices that perform routing or NAT (a middlebox), and 'MITNet' (an endpoint). 3. 'routers' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox('routers'). Devices that perform routing or NAT are also values of the entity ""middlebox"", so we pair them together in Nile: middlebox('devices that perform routing or NAT'). 'MITNet' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'network'. We pair them together in Nile: endpoint('network'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to block the middleboxes, they correspond to the Nile operation ""block"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') block middlebox('routers'), middlebox('devices that perform routing or NAT')",[''],False,False
31,The individual will have a 4 Mbps bandwidth rate limit,"define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')","define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",1. Identify the network configuration action implied by the statement: to set a bandwidth rate limit of 4 Mbps for the individual. ,2. Determine the important Nile entities: a bandwidth rate limit of 4 Mbps (a bandwidth) and the 'individual' (an endpoint). ,"3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""4"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '4', 'mbps'). The 'individual' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'host'. We pair them together in Nile: endpoint('host'). ","4. Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",True,True
32,"You may not run FTP, telnet, peer-to-peer, HTTP, IRC, DNS and mail servers on ResNet or UIC wireless-connected devices","define intent uniIntent: for endpoint('resnet'), endpoint('wireless') block protocol('FTP'), protocol('telnet'), traffic('peer-to-peer'), protocol('HTTP'), protocol('IRC'), protocol('DNS'), service('mail servers')","define intent uniIntent: for endpoint('dorms'), endpoint('wireless') block protocol('ftp'), protocol('telnet'), traffic('peer2peer'), protocol('http'), service('irc'), protocol('dns'), service('email')","1. Identify the network configuration action implied by the statement: to block FTP, telnet, peer-to-peer, HTTP, IRC, DNS, and mail servers on ResNet and UIC wireless-connected devices. ","2. Determine the important Nile entities: FTP (a protocol), telnet (a protocol), peer-to-peer (a traffic), HTTP (a protocol), IRC (a protocol), DNS (a protocol), mail servers (a service), ResNet (an endpoint), and UIC wireless-connected devices (an endpoint). ","3. FTP, telnet, peer-to-peer, HTTP, IRC, DNS, and mail servers are values of the entity ""protocol"" or ""traffic"" or ""service"", so we pair them together in Nile: protocol('FTP'), protocol('telnet'), traffic('peer-to-peer'), protocol('HTTP'), protocol('IRC'), protocol('DNS'), service('mail servers'). ResNet is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'resnet'. We pair them together in Nile: endpoint('resnet'). UIC wireless-connected devices is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'wireless'. We pair them together in Nile: endpoint('wireless'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to block the protocols and traffic, they correspond to the Nile operation ""block"". Since the endpoints are not origins or destinations, they correspond to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('resnet'), endpoint('wireless') block protocol('FTP'), protocol('telnet'), traffic('peer-to-peer'), protocol('HTTP'), protocol('IRC'), protocol('DNS'), service('mail servers')",False,True
33,Students have 200 GB of Free monthly usage,"define intent uniIntent: for group('students') set quota('download', '200', 'gb')","define intent uniIntent: for group('students') set quota('download', '200', 'gb/mth')",1. Identify the network configuration action implied by the statement: to set a free monthly usage quota of 200 GB for students. ,"2. Determine the important Nile entities: 'Students' (a group) and a free monthly usage quota of 200 GB (a quota). 3. 'Students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"" because it is not explicitly specified, the ""qos_value"" here is ""200"", and the ""qos_unit"" is ""gb"". We put them together in Nile: quota('download', '200', 'gb'). ","4. Each Nile entity corresponds to a Nile operation. Since the group is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we want to set the quota, it corresponds to the Nile operation ""set"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '200', 'gb')",[''],False,True
34,Faculty members have 500 Gb per week of free network use,"define intent uniIntent: for group('professors') set quota('download', '500', 'gb/wk')","define intent uniIntent: for group('professors') set quota('download', '500', 'gb/wk')",1. Identify the network configuration action implied by the statement: to set a quota of 500 GB per week for faculty members. ,"2. Determine the important Nile entities: 'faculty members' (a group) and a quota of 500 GB per week (a quota). 3. 'faculty members' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'professors'. We pair them together in Nile: group('professors'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"" because we want to set a quota for downloading, the ""qos_value"" here is ""500"", and the ""qos_unit"" is ""gb/wk"". We put them together in Nile: quota('download', '500', 'gb/wk'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('professors') set quota('download', '500', 'gb/wk')",[''],True,True
35,Students have a quota of 5 GB per day The quota is reset at 6am,"define intent uniIntent: for group('students') set quota('download', '5', 'gb/day') start hour('06:00')","define intent uniIntent: for group('students') set quota('download', '5','gb/d') start hour('06:00') end('05:59')",1. Identify the network configuration action implied by the statement: to set a quota of 5 GB per day for students and reset the quota at 6am. ,"2. Determine the important Nile entities: 'Students' (a group), a quota of 5 GB per day (a quota), and 6am (an hour). 3. 'Students' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"", the ""qos_value"" here is ""5"", and the ""qos_unit"" is ""gb/day"". We put them together in Nile: quota('download', '5', 'gb/day'). '6am' is an ""hour"", so we standardize the time and write it in Nile: hour('06:00'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we want to set the quota, it corresponds to the Nile operation ""set"". Since '06:00' is a reset time, it corresponds to the Nile operation ""start"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '5', 'gb/day') start hour('06:00')",[''],False,True
36,Internet is limited to 3 Mbps per host,"define intent uniIntent: for group('host') set bandwidth('max', '3', 'mbps')","define intent uniIntent: for endpoint('host') set bandwidth('max', '3', 'mbps')",1. Identify the network configuration action implied by the statement: to set a bandwidth rate limit of 3 Mbps for each host. ,2. Determine the important Nile entities: a bandwidth rate limit of 3 Mbps (a bandwidth) and 'each host' (a group). ,"3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""3"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '3', 'mbps'). 'each host' is a ""group"", but it is not one of the possible values for the ""group"" entity, so we choose the one that closest matches in meaning: 'host'. We pair them together in Nile: group('host'). ","4. Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('host') set bandwidth('max', '3', 'mbps')",False,False
37,P2P application is separately capped at 30 Mbps for the entire campus,"define intent uniIntent: for endpoint('campus') set bandwidth('max', '30', 'mbps') for service('P2P application')","define intent uniIntent: for traffic('peer2peer'), endpoint('campus') set bandwidth('max', '30', 'mbps')",1. Identify the network configuration action implied by the statement: to set a separate bandwidth rate limit of 30 Mbps for the P2P application for the entire campus. ,"2. Determine the important Nile entities: a bandwidth rate limit of 30 Mbps (a bandwidth), the P2P application (a service), and the entire campus (an endpoint). ","3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""30"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '30', 'mbps'). The P2P application is a value of the entity ""service"", so we pair them together in Nile: service('P2P application'). The entire campus is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'campus'. We pair them together in Nile: endpoint('campus'). ","4. Each Nile entity corresponds to a Nile operation. A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('campus') set bandwidth('max', '30', 'mbps') for service('P2P application')",False,False
38,Guests' network is rate-limited to 5 Mb/s per user,"define intent uniIntent: for endpoint('guests') set bandwidth('max', '5', 'mbps')","define intent uniIntent: for group('guests') set bandwidth('max', '5', 'mbps')",1. Identify the network configuration action implied by the statement: to set a rate limit of 5 Mbps per user for the guests' network. ,"2. Determine the important Nile entities: 'guests' (an endpoint) and a rate limit of 5 Mbps per user (a bandwidth). 3. 'guests' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'guests'. We pair them together in Nile: endpoint('guests'). A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""5"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '5', 'mbps'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". A bandwidth is either ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('guests') set bandwidth('max', '5', 'mbps')",[''],False,False
39,The ResNet cap is currently 200 gigabytes per each 7 day period of combined incoming and outgoing traffic,"define intent uniIntent: for endpoint('network') set quota('any', '200', 'gb/7d')","define intent uniIntent: for group('dorms') set quota('any', '200', 'gb/wk')",1. Identify the network configuration action implied by the statement: to set a cap of 200 gigabytes per each 7-day period for combined incoming and outgoing traffic for ResNet. ,"2. Determine the important Nile entities: a cap of 200 gigabytes per each 7-day period (a quota), and 'ResNet' (an endpoint). ","3. A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is not explicitly specified, so we assume it is ""any"". The ""qos_value"" here is ""200"", and the ""qos_unit"" is ""gb/7d"". We put them together in Nile: quota('any', '200', 'gb/7d'). 'ResNet' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'network'. We pair them together in Nile: endpoint('network'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". A quota is either ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') set quota('any', '200', 'gb/7d')",False,False
40,These network security changes include blocking traffic from the Internet into the UW network over FTP,define intent uniIntent: from endpoint('internet') to endpoint('university') block protocol('FTP'),define intent uniIntent: from endpoint('internet') to endpoint('network') block protocol('ftp'),1. Identify the network configuration action implied by the statement: to add a network security rule that blocks traffic from the Internet into the UW network over FTP. ,"2. Determine the important Nile entities: 'Internet' (an endpoint), 'UW network' (an endpoint), and 'FTP' (a protocol). 3. 'Internet' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'internet'. We pair them together in Nile: endpoint('internet'). 'UW network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'FTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('FTP'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint 'internet' is an origin, it corresponds to the Nile operation ""from"". Since the endpoint 'university' is a destination, it corresponds to the Nile operation ""to"". Since we want to block the traffic, it corresponds to the Nile operation ""block"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: from endpoint('internet') to endpoint('university') block protocol('FTP'),[''],False,True
41,"Elements of network security currently include the following four solutions: Network Border Infrastructure System, Intrusion Prevention System, Firewalls and Custom Unit Firewalls","define intent uniIntent: add middlebox('Network Border Infrastructure System'), middlebox('Intrusion Prevention System'), middlebox('Firewalls'), middlebox('Custom Unit Firewalls')","define intent uniIntent: for endpoint('network') add middlebox('network border system'), middlebox('ips'), middlebox('firewall'), middlebox('unit firewall')","1. Identify the network configuration actions implied by the statement: to add the Network Border Infrastructure System, Intrusion Prevention System, Firewalls, and Custom Unit Firewalls as network security solutions. ","2. Determine the important Nile entities: 'Network Border Infrastructure System', 'Intrusion Prevention System', 'Firewalls', and 'Custom Unit Firewalls' (all middleboxes). ","3. Each of the entities corresponds to the Nile operation ""add"". ","4. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: add middlebox('Network Border Infrastructure System'), middlebox('Intrusion Prevention System'), middlebox('Firewalls'), middlebox('Custom Unit Firewalls')",[''],False,False
42,ACT/IT Infrastructure monitors traffic on the network for the purpose of maintaining proper network function,define intent uniIntent: for traffic('any') add middlebox('ACT/IT Infrastructure'),define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to add a traffic monitor for the purpose of maintaining proper network function. ,"2. Determine the important Nile entities: 'ACT/IT Infrastructure' (a middlebox) and 'traffic' (a traffic). 3. 'ACT/IT Infrastructure' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox('ACT/IT Infrastructure'). 'traffic' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('any'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". A traffic always corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for traffic('any') add middlebox('ACT/IT Infrastructure'),[''],False,False
43,"CIS restricts traffic that is known to cause damage to the network or hosts on it, such as NETBIOS",define intent uniIntent: for endpoint('network') add block traffic('known to cause damage to the network or hosts'),define intent uniIntent: for endpoint('network') block service('NETBIOS'),"1. Identify the network configuration action implied by the statement: to add a restriction for traffic that is known to cause damage to the network or hosts, such as NETBIOS. ","2. Determine the important Nile entities: 'CIS' (an endpoint), traffic that causes damage to the network or hosts (a traffic), and 'NETBIOS' (a protocol). 3. 'CIS' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'network'. We pair them together in Nile: endpoint('network'). The traffic that causes damage to the network or hosts is a value of the entity ""traffic"", so we pair them together in Nile: traffic('known to cause damage to the network or hosts'). 'NETBIOS' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('NETBIOS'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the restriction, it corresponds to the Nile operation ""add"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we want to block the traffic, it corresponds to the Nile operation ""block"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') add block traffic('known to cause damage to the network or hosts'),[''],False,False
44,All network traffic passing in or out of Brown's network is monitored by intrusion detection system for signs of compromises,define intent uniIntent: for endpoint('network') add middlebox('intrusion detection system'),define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to add an intrusion detection system to monitor all network traffic passing in or out of Brown's network. ,"2. Determine the important Nile entities: 'Brown's network' (an endpoint) and 'intrusion detection system' (a middlebox). 3. 'Brown's network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'network'. We pair them together in Nile: endpoint('network'). 'intrusion detection system' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""intrusion detection system""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') add middlebox('intrusion detection system'),[''],False,True
45,"You may not run any services (e.g., FTP services,listservers,P2P file sharing servers, publishing files via generic file services, etc.) via ResNet or NYURoam wireless networks",define intent uniIntent: for endpoint('wireless') block service('services'),"define intent uniIntent: for endpoint('dorms'), endpoint('wireless') block protocol('ftp'), service('listserver'), traffic('peer2peer')","1. Identify the network configuration action implied by the statement: to block all services (such as FTP services, listservers, P2P file sharing servers, publishing files via generic file services, etc.) on the ResNet and NYURoam wireless networks. ","2. Determine the important Nile entities: 'services' (a service), 'ResNet' (an endpoint), and 'NYURoam wireless networks' (an endpoint). 3. 'services' is a value of the entity ""service"", so we pair them together in Nile: service('services'). 'ResNet' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'wireless'. We pair them together in Nile: endpoint('wireless'). 'NYURoam wireless networks' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'wireless'. We pair them together in Nile: endpoint('wireless'). ","4. Each Nile entity corresponds to a Nile operation. Since we want to block the services, it corresponds to the Nile operation ""block"". Since the endpoints are not origins or destinations, they correspond to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('wireless') block service('services'),[''],False,False
46,Housing does not normally limit the amount of bandwidth,define intent uniIntent: for endpoint('dorms') unset bandwidth(),define intent uniIntent: for endpoint('dorms') unset bandwidth(),1. Identify the network configuration action implied by the statement: to not set any bandwidth limits for Housing. ,"2. Determine the important Nile entities: 'Housing' (an endpoint) and 'bandwidth' (a bandwidth). 3. 'Housing' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'dorms'. We pair them together in Nile: endpoint('dorms'). 'bandwidth' is a ""bandwidth"". A ""bandwidth"" can have either zero parameters or three parameters, in which case they must consist of a ""qos_constraint"" ('max' or 'min'), a ""qos_value"" (a number), and a ""qos_unit"" (for example, 'gb', 'mb'). Since there are no parameters specified for the bandwidth, we give it zero parameters. In Nile, we have: bandwidth(). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we do not want to set any bandwidth limits, the bandwidth corresponds to the Nile operation ""unset"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('dorms') unset bandwidth(),[''],True,True
47,"The UVA More Secure Network uses a firewall, a network security device designed to help protect your computer from hackers and other malicious people on the Internet.",define intent uniIntent: for endpoint('university') add middlebox('firewall'),define intent uniIntent: for endpoint('network') add middlebox('firewall'),1. Identify the network configuration action implied by the statement: to add a firewall for the UVA More Secure Network. ,"2. Determine the important Nile entities: 'UVA More Secure Network' (an endpoint) and 'firewall' (a middlebox). 3. 'UVA More Secure Network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall'),[''],False,True
48,"The network firewall does prevent some applications from working in their normal manner, for example, video and audio conferencing products that use the H.323",define intent uniIntent: add middlebox('firewall') block service('H.323 video conferencing'),define intent uniIntent: for endpoint('network') block traffic('H323 video conferencing'),1. Identify the network configuration action implied by the statement: to add a firewall that blocks video and audio conferencing products that use the H.323 protocol. ,"2. Determine the important Nile entities: video and audio conferencing products that use the H.323 protocol (a service), and a firewall (a middlebox). ","3. The video and audio conferencing products that use the H.323 protocol are values of the entity ""service"". We pair them together in Nile: service('H.323 video conferencing'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to a Nile operation. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the service, it corresponds to the Nile operation ""block"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: add middlebox('firewall') block service('H.323 video conferencing'),False,False
49,The UC Davis network is continually scanned for prohibited activities and network threats.,"define intent uniIntent: for endpoint('university') scan traffic('prohibited activities'), traffic('network threats')",define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to continually scan the UC Davis network for prohibited activities and network threats. ,"2. Determine the important Nile entities: 'UC Davis network' (an endpoint), 'prohibited activities' (a traffic), and 'network threats' (a traffic). 3. 'UC Davis network' is an ""endpoint"", but it is not one of the possible values for the ""endpoint"" entity, so we choose the one that closest matches in meaning: 'university'. We pair them together in Nile: endpoint('university'). 'prohibited activities' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('prohibited activities'). 'network threats' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('network threats'). ","4. Each Nile entity corresponds to a Nile operation. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we want to continually scan for the traffic 'prohibited activities' and the traffic 'network threats', they both correspond to the Nile operation ""scan"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') scan traffic('prohibited activities'), traffic('network threats')",[''],False,False
