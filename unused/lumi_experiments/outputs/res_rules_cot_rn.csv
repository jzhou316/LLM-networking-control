,Intents,LLM Output,Correct Output,Step 1,Step 2,Step 3,Step 4,Step 5,Exact Match,Relaxed Match
0,Remove parental control from the network,define intent uniIntent: for endpoint('network') remove middlebox('parental control'),define intent uniIntent: for endpoint('network') remove middlebox('parental control'),1. Identify the network configuration action implied by the statement: to remove parental control from the network. ,"2. Determine the important Nile entities: 'parental control' and the 'network'. 3. 'parental control' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox('parental control'). 'network' is not a value of any Nile entity, but according to Rule 6, 'network' is a value of type ""endpoint"", which closest matches the value 'network'. We pair them together in Nile: endpoint('network'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to remove the middlebox, it corresponds to the Nile operation ""remove"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') remove middlebox('parental control'),[''],True,True
1,Do not allow people from dorms to access Instagram and YouTube,"define intent uniIntent: for group('dorms') block service('Instagram'), service('YouTube')","define intent uniIntent: for group('dorms') block service('Instagram'), service('YouTube')",1. Identify the network configuration action implied by the statement: to block access to Instagram and YouTube for people from dorms. ,"2. Determine the important Nile entities: 'people from dorms', 'Instagram', and 'YouTube'. 3. 'people from dorms' is not a value of any Nile entity, but according to Rule 7, 'dorms' is a value of type ""group"", which closest matches the value 'people from dorms'. We pair them together in Nile: group('dorms'). 'Instagram' is a value of the entity ""service"", so we pair them together in Nile: service('Instagram'). 'YouTube' is a value of the entity ""service"", so we pair them together in Nile: service('YouTube'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to block the services, they both correspond to the Nile operation ""block"". Since the group is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('dorms') block service('Instagram'), service('YouTube')",[''],True,True
2,Social media is blocked by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') block traffic('social media'),define intent uniIntent: for endpoint('university') add middlebox('firewall') block traffic('social media'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that blocks social media. ,"2. Determine the important Nile entities: 'social media', 'University', and 'firewall'. 3. 'social media' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('social media'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the traffic, it corresponds to the Nile operation ""block"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') block traffic('social media'),[''],True,True
3,Set a minimum bandwidth of 10 Mbps for guests,"define intent uniIntent: for endpoint('guests') set bandwidth('min', '10', 'mbps')","define intent uniIntent: for endpoint('guests') set bandwidth('min', '10', 'mbps')",1. Identify the network configuration action implied by the statement: to set a minimum bandwidth of 10 Mbps for guests. ,2. Determine the important Nile entities: a minimum bandwidth of 10 Mbps and 'guests'. ,"3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""min"" because we want to set a minimum bandwidth, the ""qos_value"" here is ""10"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('min', '10', 'mbps'). 'guests' is a value of the entity ""endpoint"", so we pair them together in Nile: endpoint('guests'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. A bandwidth is paired only with the operations ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('guests') set bandwidth('min', '10', 'mbps')",True,True
4,Block all bittorrent traffic on the network,define intent uniIntent: from endpoint('network') block traffic('bittorrent'),define intent uniIntent: for endpoint('network') block traffic('bittorrent'),1. Identify the network configuration action implied by the statement: to block all bittorrent traffic on the network. ,"2. Determine the important Nile entities: 'bittorrent' (a traffic) and the network. 3. 'bittorrent' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('bittorrent'). The network is not explicitly mentioned in the statement, but we can assume it refers to the entire network. According to Rule 6, 'network' is a value of type ""endpoint"", which closest matches the value 'network'. We pair them together in Nile: endpoint('network'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since the endpoint 'network' is an origin, it corresponds to the Nile operation ""from"". Since we want to block the traffic, it corresponds to the Nile operation ""block"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: from endpoint('network') block traffic('bittorrent'),[''],False,False
5,Set a maximum quota of 500 MB per week for gaming traffic,"define intent uniIntent: set quota('max', '500', 'mb/wk') for traffic('gaming')","define intent uniIntent: for traffic('gaming') set quota('max', '500', 'mb/wk')",1. Identify the network configuration action implied by the statement: to set a maximum quota of 500 MB per week for gaming traffic. ,2. Determine the important Nile entities: a maximum quota of 500 MB per week (a quota) and gaming traffic (a traffic). ,"3. A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to set a maximum quota, the ""qos_value"" here is ""500"", and the ""qos_unit"" is ""mb/wk"". We put them together in Nile: quota('max', '500', 'mb/wk'). 'gaming traffic' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('gaming'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. A quota is paired only with the operations ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: set quota('max', '500', 'mb/wk') for traffic('gaming')",False,True
6,Allow Netflix on the network for students only,define intent uniIntent: for endpoint('network') allow service('Netflix') for group('students'),define intent uniIntent: for group('students') allow service('Netflix'),1. Identify the network configuration action implied by the statement: to allow Netflix on the network for students only. ,"2. Determine the important Nile entities: 'Netflix', 'students', and the network. 3. 'Netflix' is a value of the entity ""service"", so we pair them together in Nile: service('Netflix'). 'students' is not a value of any Nile entity, but according to Rule 7, 'students' is a value of type ""group"", which closest matches the value 'students'. We pair them together in Nile: group('students'). The network is not explicitly mentioned, but we can assume it refers to the entire network. According to Rule 6, 'network' is a value of type ""endpoint"", which closest matches the value 'network'. We pair them together in Nile: endpoint('network'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to allow the service, it corresponds to the Nile operation ""allow"". Since the service is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') allow service('Netflix') for group('students'),[''],False,True
7,University Housing monitors only the amount of traffic,define intent uniIntent: for endpoint('housing') traffic('amount of traffic'),define intent uniIntent: for endpoint('dorms') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to configure University Housing to monitor only the amount of traffic. ,"2. Determine the important Nile entities: 'University Housing' (an endpoint) and 'amount of traffic' (a traffic). 3. 'University Housing' is not a value of any Nile entity, but according to Rule 6, 'housing' is a value of type ""endpoint"", which closest matches the value 'University Housing'. We pair them together in Nile: endpoint('housing'). 'amount of traffic' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('amount of traffic'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('housing') traffic('amount of traffic'),[''],False,False
8,AIM chat and file transfering is allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transferring')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transfer')",1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows AIM chat and file transferring. ,"2. Determine the important Nile entities: 'AIM chat', 'file transferring', 'University', and 'firewall'. 3. 'AIM chat' is a value of the entity ""service"", so we pair them together in Nile: service('AIM chat'). 'file transferring' is not a value of any Nile entity, but according to Rule 10, 'file transfer' is a value of type ""service"", which closest matches the value 'file transferring'. We pair them together in Nile: service('file transferring'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the service ""AIM chat"" and the service ""file transferring"", they both correspond to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('AIM chat'), service('file transferring')",[''],False,True
9,Battlenet is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows Battlenet. ,"2. Determine the important Nile entities: 'Battlenet', 'University', and 'firewall'. 3. 'Battlenet' is a value of the entity ""service"", so we pair them together in Nile: service('Battlenet'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service 'Battlenet', it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Battlenet'),[''],True,True
10,H323 video conferencing is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows H323 video conferencing. ,"2. Determine the important Nile entities: 'H323 video conferencing', 'University', and 'firewall'. 3. 'H323 video conferencing' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('H323 video conferencing'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the traffic, it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow traffic('H323 video conferencing'),[''],True,True
11,Everquest is blocked by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest'),define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that blocks Everquest. ,"2. Determine the important Nile entities: 'Everquest', 'University', and 'firewall'. 3. 'Everquest' is a value of the entity ""service"", so we pair them together in Nile: service('Everquest'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the service, it corresponds to the Nile operation ""block"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('Everquest'),[''],True,True
12,HTTP and HTTPS are allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows HTTP and HTTPS. ,"2. Determine the important Nile entities: 'HTTP', 'HTTPS', 'University', and 'firewall'. 3. 'HTTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('HTTP'). 'HTTPS' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('HTTPS'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the protocol ""HTTP"" and the protocol ""HTTPS"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('HTTP'), protocol('HTTPS')",[''],True,True
13,"MSN audio and video are not allowed by the University firewall, but the MSN chat, application sharing and file transferring are not blocked","define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN audio'), service('MSN video') allow service('MSN chat'), service('application sharing'), service('file transferring')","define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN video'), service('MSN audio') allow service('MSN chat'), service('MSN application sharing'), service('file transfer')","1. Identify the network configuration action implied by the statement: to add a firewall for the university that blocks MSN audio and video, but does not block MSN chat, application sharing, and file transferring. ","2. Determine the important Nile entities: 'MSN audio', 'MSN video', 'MSN chat', 'application sharing', 'file transferring', 'University', and 'firewall'. 3. 'MSN audio' is a value of the entity ""service"", so we pair them together in Nile: service('MSN audio'). 'MSN video' is a value of the entity ""service"", so we pair them together in Nile: service('MSN video'). 'MSN chat' is a value of the entity ""service"", so we pair them together in Nile: service('MSN chat'). 'application sharing' is a value of the entity ""service"", so we pair them together in Nile: service('application sharing'). 'file transferring' is a value of the entity ""service"", so we pair them together in Nile: service('file transferring'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to block the services 'MSN audio' and 'MSN video', they both correspond to the Nile operation ""block"". Since we want to allow the services 'MSN chat', 'application sharing', and 'file transferring', they all correspond to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') block service('MSN audio'), service('MSN video') allow service('MSN chat'), service('application sharing'), service('file transferring')",[''],False,True
14,Net2Phone is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows Net2Phone. ,"2. Determine the important Nile entities: 'Net2Phone', 'University', and 'firewall'. 3. 'Net2Phone' is a value of the entity ""service"", so we pair them together in Nile: service('Net2Phone'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""Net2Phone"", it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Net2Phone'),[''],True,True
15,PC-Telephone is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC-Telephone'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC Telephone'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows PC-Telephone. ,"2. Determine the important Nile entities: 'PC-Telephone', 'University', and 'firewall'. 3. 'PC-Telephone' is a value of the entity ""service"", so we pair them together in Nile: service('PC-Telephone'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service ""PC-Telephone"", it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('PC-Telephone'),[''],False,True
16,POP3 and secure POP are allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows POP3 and secure POP. ,"2. Determine the important Nile entities: 'POP3', 'secure POP', 'University', and 'firewall'. 3. 'POP3' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('POP3'). 'secure POP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('secure POP'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the protocol ""POP3"" and the protocol ""secure POP"", they both correspond to the Nile operation ""allow"". Since the endpoint is neither an origin nor a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('POP3'), protocol('secure POP')",[''],True,True
17,SMTP is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows SMTP. ,"2. Determine the important Nile entities: 'SMTP', 'University', and 'firewall'. 3. 'SMTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('SMTP'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""SMTP"", it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SMTP'),[''],True,True
18,Sony Playstation 2 is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows the Sony Playstation 2. ,"2. Determine the important Nile entities: 'Sony Playstation 2', 'University', and 'firewall'. 3. 'Sony Playstation 2' is a value of the entity ""service"", so we pair them together in Nile: service('Sony Playstation 2'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service 'Sony Playstation 2', it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sony Playstation 2'),[''],True,True
19,SSH is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows SSH. ,"2. Determine the important Nile entities: 'SSH', 'University', and 'firewall'. 3. 'SSH' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('SSH'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""SSH"", it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('SSH'),[''],True,True
20,Telnet is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows Telnet. ,"2. Determine the important Nile entities: 'Telnet', 'University', and 'firewall'. 3. 'Telnet' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('Telnet'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the protocol ""Telnet"", it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('Telnet'),[''],True,True
21,Sorenson Videophone 200 is allowed by the University firewall,define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200'),define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200'),1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows the Sorenson Videophone 200. ,"2. Determine the important Nile entities: 'Sorenson Videophone 200', 'University', and 'firewall'. 3. 'Sorenson Videophone 200' is a value of the entity ""service"", so we pair them together in Nile: service('Sorenson Videophone 200'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow the service 'Sorenson Videophone 200', it corresponds to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('Sorenson Videophone 200'),[''],True,True
22,FTP and SFTP servers are allowed by the University firewall,"define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('FTP server'), service('SFTP server')","define intent uniIntent: for endpoint('university') add middlebox('firewall') allow protocol('ftp'), protocol('sftp')",1. Identify the network configuration action implied by the statement: to add a firewall for the university that allows FTP and SFTP servers. ,"2. Determine the important Nile entities: 'FTP server', 'SFTP server', 'University', and 'firewall'. 3. 'FTP server' is a value of the entity ""service"", so we pair them together in Nile: service('FTP server'). 'SFTP server' is a value of the entity ""service"", so we pair them together in Nile: service('SFTP server'). 'University' is not a value of any Nile entity, but according to Rule 6, 'university' is a value of type ""endpoint"", which closest matches the value 'University'. We pair them together in Nile: endpoint('university'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since we want to allow both the service ""FTP server"" and the service ""SFTP server"", they both correspond to the Nile operation ""allow"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('university') add middlebox('firewall') allow service('FTP server'), service('SFTP server')",[''],False,False
23,Students data limit is 100 GB per week,"define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')","define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')",1. Identify the network configuration action implied by the statement: to set a data limit of 100 GB per week for students. ,"2. Determine the important Nile entities: 'Students' (a group) and a data limit of 100 GB per week (a quota). 3. 'Students' is not a value of any Nile entity, but according to Rule 7, 'students' is a value of type ""group"", which closest matches the value 'Students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"" because we want to limit the data download, the ""qos_value"" here is ""100"", and the ""qos_unit"" is ""gb/wk"". We put them together in Nile: quota('download', '100', 'gb/wk'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. A quota is paired only with the operations ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '100', 'gb/wk')",[''],True,True
24,The system passively monitors the network throughput when traffic is light,define intent uniIntent: for traffic('any') add middlebox('traffic monitor'),define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to passively monitor the network throughput when traffic is light. ,"2. Determine the important Nile entities: 'system', 'network throughput', and 'traffic'. 3. 'system' is not a value of any Nile entity, but according to Rule 5, 'traffic monitor' is a value of type ""middlebox"", which closest matches the value 'system'. We pair them together in Nile: middlebox('traffic monitor'). 'network throughput' is not a value of any Nile entity, but according to Rule 8, 'any' is a value of type ""traffic"", which closest matches the value 'network throughput'. We pair them together in Nile: traffic('any'). 'traffic' is not a value of any Nile entity, but according to Rule 8, 'any' is a value of type ""traffic"", which closest matches the value 'traffic'. We pair them together in Nile: traffic('any'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since the traffic is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for traffic('any') add middlebox('traffic monitor'),[''],False,False
25,"There is a 6 GB per 24-hour period upload or download data transfer limit starting at midnight of each day, on all of your combined traffic on ResNet and UIC wireless","define intent uniIntent: for endpoint('resnet'), endpoint('wireless') set bandwidth('any', '6', 'gb/day')","define intent uniIntent: for endpoint('dorms'), endpoint('wireless') set quota('any', '6', 'gb/d') start hour('00:00') end hour('23:59')",1. Identify the network configuration action implied by the statement: to set a combined upload or download data transfer limit of 6 GB per 24-hour period starting at midnight of each day for all traffic on ResNet and UIC wireless. ,"2. Determine the important Nile entities: a combined upload or download data transfer limit of 6 GB per 24-hour period, 'ResNet', 'UIC wireless', and 'all traffic'. ","3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is not specified, so we imply that it is 'any'. The ""qos_value"" here is '6', and the ""qos_unit"" is 'gb/day'. We put them together in Nile: bandwidth('any', '6', 'gb/day'). 'ResNet' is not a value of any Nile entity, but according to Rule 6, 'resnet' is a value of type ""endpoint"", which closest matches the value 'ResNet'. We pair them together in Nile: endpoint('resnet'). 'UIC wireless' is not a value of any Nile entity, but according to Rule 6, 'wireless' is a value of type ""endpoint"", which closest matches the value 'UIC wireless'. We pair them together in Nile: endpoint('wireless'). 'all traffic' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('any'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. A bandwidth is paired only with the operations ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". Since the endpoints are not origins or destinations, they correspond to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('resnet'), endpoint('wireless') set bandwidth('any', '6', 'gb/day')",False,False
26,Guests cannot run any file sharing/downloading program,"define intent uniIntent: for endpoint('guests') block traffic('file sharing'), traffic('peer2peer')",define intent uniIntent: for endpoint('guests') block service('file transfer'),1. Identify the network configuration action implied by the statement: to block guests from running any file sharing or downloading program. ,"2. Determine the important Nile entities: 'guests', 'file sharing', and 'downloading program'. 3. 'guests' is not a value of any Nile entity, but according to Rule 6, 'guests' is a value of type ""endpoint"", which closest matches the value 'guests'. We pair them together in Nile: endpoint('guests'). 'file sharing' is a value of the entity ""traffic"", so we pair them together in Nile: traffic('file sharing'). 'downloading program' is not a value of any Nile entity, but according to Rule 8, 'peer2peer' is a value of type ""traffic"", which closest matches the value 'downloading program'. We pair them together in Nile: traffic('peer2peer'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we want to block the traffic, it corresponds to the Nile operation ""block"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('guests') block traffic('file sharing'), traffic('peer2peer')",[''],False,False
27,"No individual service or system running on the wired/wireless network should use more than 10 gigabytes of per day, regardless of whether it is inbound or outbound over the commodity network link","define intent uniIntent: for endpoint('network') set quota('any', '10', 'gb/day')","define intent uniIntent: for endpoint('network') set quota('any', '10', 'gb/d')","1. Identify the network configuration action implied by the statement: to set a daily data usage limit of 10 gigabytes for any individual service or system on the wired/wireless network, regardless of whether it is inbound or outbound over the commodity network link. ","2. Determine the important Nile entities: a daily data usage limit of 10 gigabytes, the 'individual service or system', and the 'wired/wireless network'. ","3. A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""any"" because we want to apply the limit regardless of whether it is inbound or outbound, the ""qos_value"" here is ""10"", and the ""qos_unit"" is ""gb/day"". We put them together in Nile: quota('any', '10', 'gb/day'). 'individual service or system' is not a value of any Nile entity. However, we observe that it refers to the 'host' entity. According to Rule 7, 'host' is a value of type ""group"", which closest matches the value 'individual service or system'. We pair them together in Nile: group('host'). 'wired/wireless network' is not a value of any Nile entity. However, we observe that it refers to the 'network' entity. According to Rule 6, 'network' is a value of type ""endpoint"", which closest matches the value 'wired/wireless network'. We pair them together in Nile: endpoint('network'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. A quota is paired only with the operations ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') set quota('any', '10', 'gb/day')",False,True
28,The system will trigger an overuse notification if the average for either inbound or outbound usage exceeds 10 GB per week,"define intent uniIntent: for traffic('any') start middlebox('overuse notification') set quota('any', '10', 'gb/wk')","define intent uniIntent: for endpoint('network') add middlebox('overuse notification') set quota('any', '10', 'gb/wk')",1. Identify the network configuration action implied by the statement: to trigger an overuse notification if the average for either inbound or outbound usage exceeds 10 GB per week. ,"2. Determine the important Nile entities: an overuse notification, the average for either inbound or outbound usage, and a quota of 10 GB per week. ","3. An overuse notification is not a value of any Nile entity. However, we observe that 'overuse notification' refers to a middlebox. According to Rule 5, 'overuse notification' is a value of type ""middlebox"". We pair them together in Nile: middlebox('overuse notification'). The average for either inbound or outbound usage is not explicitly stated in the statement, so we assume it is a traffic type of 'any'. According to Rule 8, 'any' is a value of type ""traffic"". We pair them together in Nile: traffic('any'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is not specified as either 'download' or 'upload', so we imply that it has the value 'any'. The ""qos_value"" here is '10', and the ""qos_unit"" is 'gb/wk'. We put them together in Nile: quota('any', '10', 'gb/wk'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to trigger the overuse notification, it corresponds to the Nile operation ""start"". Since the traffic is not an origin or a destination, it corresponds to the Nile operation ""for"". A quota is paired only with the operations ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for traffic('any') start middlebox('overuse notification') set quota('any', '10', 'gb/wk')",False,False
29,Quotas for students are 5000 Megabyte per hr download and 2000 Megabyte per hr upload,"define intent uniIntent: for group('students') set quota('download', '5000', 'mb/hr'), quota('upload', '2000', 'mb/hr')","define intent uniIntent: for group('students') set quota('download', '5000', 'mb/h'), quota('upload', '2000', 'mb/h')","1. Identify the network configuration action implied by the statement: to set download and upload quotas for students, with a download quota of 5000 Megabytes per hour and an upload quota of 2000 Megabytes per hour. ","2. Determine the important Nile entities: 'students' (a group), a download quota of 5000 Megabytes per hour (a quota), and an upload quota of 2000 Megabytes per hour (a quota). 3. 'students' is not a value of any Nile entity, but according to Rule 7, 'students' is a value of type ""group"", which closest matches the value 'students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"", the ""qos_value"" here is ""5000"", and the ""qos_unit"" is ""mb/hr"". We put them together in Nile: quota('download', '5000', 'mb/hr'). The ""qos_constraint"" here is ""upload"", the ""qos_value"" here is ""2000"", and the ""qos_unit"" is ""mb/hr"". We put them together in Nile: quota('upload', '2000', 'mb/hr'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. A quota is paired only with the operations ""set"" or ""unset"". Since we want to set the quotas, they correspond to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '5000', 'mb/hr'), quota('upload', '2000', 'mb/hr')",[''],False,True
30,Routers or anything else that does routing or NAT are prohibited from MITNet as they interfere with the operation of the network,"define intent uniIntent: for endpoint('network') block middlebox('routers'), middlebox('network border system')",define intent uniIntent: for endpoint('dorms') block protocol('nat'),1. Identify the network configuration action implied by the statement: to prohibit routers or any other devices that perform routing or NAT from being connected to MITNet. ,"2. Determine the important Nile entities: 'routers', devices that perform routing or NAT, and 'MITNet'. 3. 'routers' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox('routers'). Devices that perform routing or NAT are not explicitly mentioned in the Nile entities, but according to Rule 5, 'network border system' is a value of type ""middlebox"" that closest matches the devices that perform routing or NAT. We pair them together in Nile: middlebox('network border system'). 'MITNet' is not a value of any Nile entity, but according to Rule 6, 'network' is a value of type ""endpoint"", which closest matches the value 'MITNet'. We pair them together in Nile: endpoint('network'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to block the middleboxes, they correspond to the Nile operation ""block"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') block middlebox('routers'), middlebox('network border system')",[''],False,False
31,The individual will have a 4 Mbps bandwidth rate limit,"define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')","define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",1. Identify the network configuration action implied by the statement: to set a bandwidth rate limit of 4 Mbps for the individual. ,2. Determine the important Nile entities: a bandwidth rate limit of 4 Mbps and the 'individual'. ,"3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""4"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '4', 'mbps'). 'individual' is not a value of any Nile entity, but according to Rule 7, 'host' is a value of type ""group"", which closest matches the value 'individual'. We pair them together in Nile: group('host'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. A bandwidth is paired only with the operations ""set"" or ""unset"". Since we want to set the bandwidth rate limit, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('host') set bandwidth('max', '4', 'mbps')",True,True
32,"You may not run FTP, telnet, peer-to-peer, HTTP, IRC, DNS and mail servers on ResNet or UIC wireless-connected devices","define intent uniIntent: for endpoint('ResNet'), endpoint('UIC wireless-connected devices') block service('FTP'), service('telnet'), service('peer-to-peer'), service('HTTP'), service('IRC'), service('DNS'), service('mail servers')","define intent uniIntent: for endpoint('dorms'), endpoint('wireless') block protocol('ftp'), protocol('telnet'), traffic('peer2peer'), protocol('http'), service('irc'), protocol('dns'), service('email')","1. Identify the network configuration action implied by the statement: to block FTP, telnet, peer-to-peer, HTTP, IRC, DNS, and mail servers on ResNet and UIC wireless-connected devices. ","2. Determine the important Nile entities: FTP, telnet, peer-to-peer, HTTP, IRC, DNS, mail servers, ResNet, and UIC wireless-connected devices. ","3. FTP, telnet, peer-to-peer, HTTP, IRC, DNS, and mail servers are values of the entity ""service"". We pair them together in Nile: service('FTP'), service('telnet'), service('peer-to-peer'), service('HTTP'), service('IRC'), service('DNS'), service('mail servers'). ResNet and UIC wireless-connected devices are values of the entity ""endpoint"". We pair them together in Nile: endpoint('ResNet'), endpoint('UIC wireless-connected devices'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to block the services, they correspond to the Nile operation ""block"". Since the endpoints are not origins or destinations, they correspond to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('ResNet'), endpoint('UIC wireless-connected devices') block service('FTP'), service('telnet'), service('peer-to-peer'), service('HTTP'), service('IRC'), service('DNS'), service('mail servers')",False,False
33,Students have 200 GB of Free monthly usage,"define intent uniIntent: for group('students') set quota('download', '200', 'gb/mo')","define intent uniIntent: for group('students') set quota('download', '200', 'gb/mth')",1. Identify the network configuration action implied by the statement: to set a monthly usage quota of 200 GB for students. ,"2. Determine the important Nile entities: 'Students' (a group) and a monthly usage quota of 200 GB (a quota). 3. 'Students' is not a value of any Nile entity, but according to Rule 7, 'students' is a value of type ""group"", which closest matches the value 'Students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"" because it is not explicitly specified, the ""qos_value"" here is ""200"", and the ""qos_unit"" is ""gb/mo"". We put them together in Nile: quota('download', '200', 'gb/mo'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. A quota is paired only with the operations ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '200', 'gb/mo')",[''],False,True
34,Faculty members have 500 Gb per week of free network use,"define intent uniIntent: for group('professors') set quota('download', '500', 'gb/wk')","define intent uniIntent: for group('professors') set quota('download', '500', 'gb/wk')",1. Identify the network configuration action implied by the statement: to set a quota of 500 GB per week for faculty members. ,"2. Determine the important Nile entities: 'faculty members' (a group) and a quota of 500 GB per week. 3. 'faculty members' is not a value of any Nile entity, but according to Rule 7, 'professors' is a value of type ""group"", which closest matches the value 'faculty members'. We pair them together in Nile: group('professors'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"" because we assume it is the default constraint for the quota. The ""qos_value"" here is ""500"", and the ""qos_unit"" is ""gb/wk"". We put them together in Nile: quota('download', '500', 'gb/wk'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. A quota is paired only with the operations ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". A group always corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('professors') set quota('download', '500', 'gb/wk')",[''],True,True
35,Students have a quota of 5 GB per day The quota is reset at 6am,"define intent uniIntent: for group('students') set quota('download', '5', 'gb/day') start hour('06:00')","define intent uniIntent: for group('students') set quota('download', '5','gb/d') start hour('06:00') end('05:59')",1. Identify the network configuration action implied by the statement: to set a quota of 5 GB per day for students and reset the quota at 6am. ,"2. Determine the important Nile entities: 'Students' (a group), a quota of 5 GB per day (a quota), and 6am (a time). 3. 'Students' is not a value of any Nile entity, but according to Rule 7, 'students' is a value of type ""group"", which closest matches the value 'Students'. We pair them together in Nile: group('students'). A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""download"", the ""qos_value"" here is ""5"", and the ""qos_unit"" is ""gb/day"". We put them together in Nile: quota('download', '5', 'gb/day'). '6am' is an ""hour"", so we standardize the time and write it in Nile: hour('06:00'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we want to set the quota, it corresponds to the Nile operation ""set"". Since '06:00' is a reset time, it corresponds to the Nile operation ""start"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('students') set quota('download', '5', 'gb/day') start hour('06:00')",[''],False,True
36,Internet is limited to 3 Mbps per host,"define intent uniIntent: for group('host') set bandwidth('max', '3', 'mbps')","define intent uniIntent: for endpoint('host') set bandwidth('max', '3', 'mbps')",1. Identify the network configuration action implied by the statement: to set a bandwidth rate limit of 3 Mbps for each host. ,2. Determine the important Nile entities: a bandwidth rate limit of 3 Mbps and 'each host'. ,"3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""3"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '3', 'mbps'). 'each host' is not a value of any Nile entity, but according to Rule 7, 'host' is a value of type ""group"", which closest matches the value 'each host'. We pair them together in Nile: group('host'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. A bandwidth is paired only with the operations ""set"" or ""unset"". Since we want to set the bandwidth rate limit, it corresponds to the Nile operation ""set"". Since the group is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('host') set bandwidth('max', '3', 'mbps')",False,False
37,P2P application is separately capped at 30 Mbps for the entire campus,"define intent uniIntent: for endpoint('campus') set bandwidth('max', '30', 'mbps') allow traffic('peer2peer')","define intent uniIntent: for traffic('peer2peer'), endpoint('campus') set bandwidth('max', '30', 'mbps')",1. Identify the network configuration action implied by the statement: to set a separate bandwidth cap of 30 Mbps for the entire campus for P2P applications. ,"2. Determine the important Nile entities: a separate bandwidth cap of 30 Mbps, the 'P2P application', and the 'entire campus'. ","3. A bandwidth is defined by either zero or three parameters, in which case they are a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the bandwidth, the ""qos_value"" here is ""30"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '30', 'mbps'). 'P2P application' is not a value of any Nile entity, but according to Rule 8, 'peer2peer' is a value of type ""traffic"", which closest matches the value 'P2P application'. We pair them together in Nile: traffic('peer2peer'). 'entire campus' is not a value of any Nile entity, but according to Rule 6, 'campus' is a value of type ""endpoint"", which closest matches the value 'entire campus'. We pair them together in Nile: endpoint('campus'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". A bandwidth is paired only with the operations ""set"" or ""unset"". Since we want to set the bandwidth cap, it corresponds to the Nile operation ""set"". A traffic is paired only with the operations ""allow"" or ""block"". Since we want to allow the P2P application, it corresponds to the Nile operation ""allow"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('campus') set bandwidth('max', '30', 'mbps') allow traffic('peer2peer')",False,False
38,Guests' network is rate-limited to 5 Mb/s per user,"define intent uniIntent: for endpoint('guests') set bandwidth('max', '5', 'mbps') for group('host')","define intent uniIntent: for group('guests') set bandwidth('max', '5', 'mbps')",1. Identify the network configuration action implied by the statement: to set a rate limit of 5 Mb/s per user for the guests' network. ,"2. Determine the important Nile entities: the guests' network, a rate limit of 5 Mb/s, and the 'user'. ","3. The guests' network is not a value of any Nile entity, but according to Rule 6, 'guests' is a value of type ""endpoint"", which closest matches the value 'guests'. We pair them together in Nile: endpoint('guests'). A rate limit is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is ""max"" because we want to cap the rate, the ""qos_value"" here is ""5"", and the ""qos_unit"" is ""mbps"". We put them together in Nile: bandwidth('max', '5', 'mbps'). 'user' is not a value of any Nile entity, but according to Rule 7, 'host' is a value of type ""group"", which closest matches the value 'user'. We pair them together in Nile: group('host'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. A bandwidth is paired only with the operations ""set"" or ""unset"". Since we want to set the bandwidth, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('guests') set bandwidth('max', '5', 'mbps') for group('host')",False,True
39,The ResNet cap is currently 200 gigabytes per each 7 day period of combined incoming and outgoing traffic,"define intent uniIntent: for endpoint('network') set quota('any', '200', 'gb/wk')","define intent uniIntent: for group('dorms') set quota('any', '200', 'gb/wk')",1. Identify the network configuration action implied by the statement: to set a cap of 200 gigabytes per each 7-day period for combined incoming and outgoing traffic for ResNet. ,2. Determine the important Nile entities: a cap of 200 gigabytes per each 7-day period (a quota) and 'ResNet' (an endpoint). ,"3. A quota is defined by three parameters, a ""qos_constraint"", a ""qos_value"", and a ""qos_unit"". The ""qos_constraint"" here is not explicitly specified, so we assume it is ""any"". The ""qos_value"" here is ""200"", and the ""qos_unit"" is ""gb/wk"". We put them together in Nile: quota('any', '200', 'gb/wk'). 'ResNet' is not a value of any Nile entity, but according to Rule 6, 'network' is a value of type ""endpoint"", which closest matches the value 'ResNet'. We pair them together in Nile: endpoint('network'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. A quota is paired only with the operations ""set"" or ""unset"". Since we want to set the quota, it corresponds to the Nile operation ""set"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') set quota('any', '200', 'gb/wk')",False,False
40,These network security changes include blocking traffic from the Internet into the UW network over FTP,define intent uniIntent: from endpoint('internet') to endpoint('network') block protocol('FTP'),define intent uniIntent: from endpoint('internet') to endpoint('network') block protocol('ftp'),1. Identify the network configuration action implied by the statement: to block traffic from the Internet into the UW network over FTP. ,"2. Determine the important Nile entities: 'Internet', 'UW network', and 'FTP'. 3. 'Internet' is not a value of any Nile entity, but according to Rule 6, 'internet' is a value of type ""endpoint"", which closest matches the value 'Internet'. We pair them together in Nile: endpoint('internet'). 'UW network' is not a value of any Nile entity, but according to Rule 6, 'network' is a value of type ""endpoint"", which closest matches the value 'UW network'. We pair them together in Nile: endpoint('network'). 'FTP' is a value of the entity ""protocol"", so we pair them together in Nile: protocol('FTP'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since the endpoint 'internet' is an origin, it corresponds to the Nile operation ""from"". Since the endpoint 'network' is a destination, it corresponds to the Nile operation ""to"". Since we want to block the traffic, it corresponds to the Nile operation ""block"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: from endpoint('internet') to endpoint('network') block protocol('FTP'),[''],False,True
41,"Elements of network security currently include the following four solutions: Network Border Infrastructure System, Intrusion Prevention System, Firewalls and Custom Unit Firewalls","define intent uniIntent: add middlebox('Network Border Infrastructure System'), middlebox('Intrusion Prevention System'), middlebox('Firewalls'), middlebox('Custom Unit Firewalls')","define intent uniIntent: for endpoint('network') add middlebox('network border system'), middlebox('ips'), middlebox('firewall'), middlebox('unit firewall')","1. Identify the network configuration action implied by the statement: to add the following four network security solutions: Network Border Infrastructure System, Intrusion Prevention System, Firewalls, and Custom Unit Firewalls. ","2. Determine the important Nile entities: 'Network Border Infrastructure System', 'Intrusion Prevention System', 'Firewalls', and 'Custom Unit Firewalls'. ","3. Each of the entities mentioned corresponds to the entity ""middlebox"" in Nile. According to Rule 5, 'Network Border Infrastructure System' is a value of type ""middlebox"", so we pair them together in Nile: middlebox('Network Border Infrastructure System'). According to Rule 5, 'Intrusion Prevention System' is a value of type ""middlebox"", so we pair them together in Nile: middlebox('Intrusion Prevention System'). According to Rule 5, 'Firewalls' is a value of type ""middlebox"", so we pair them together in Nile: middlebox('Firewalls'). According to Rule 5, 'Custom Unit Firewalls' is a value of type ""middlebox"", so we pair them together in Nile: middlebox('Custom Unit Firewalls'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middleboxes, they all correspond to the Nile operation ""add"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: add middlebox('Network Border Infrastructure System'), middlebox('Intrusion Prevention System'), middlebox('Firewalls'), middlebox('Custom Unit Firewalls')",False,False
42,ACT/IT Infrastructure monitors traffic on the network for the purpose of maintaining proper network function,define intent uniIntent: for group('host') add middlebox('traffic monitor'),define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to add a traffic monitor for the purpose of maintaining proper network function. ,"2. Determine the important Nile entities: 'ACT/IT Infrastructure' (a group) and a traffic monitor. 3. 'ACT/IT Infrastructure' is not a value of any Nile entity, but according to Rule 7, 'host' is a value of type ""group"", which closest matches the value 'ACT/IT Infrastructure'. We pair them together in Nile: group('host'). A traffic monitor is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""traffic monitor""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". A group always corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for group('host') add middlebox('traffic monitor'),[''],False,False
43,"CIS restricts traffic that is known to cause damage to the network or hosts on it, such as NETBIOS",define intent uniIntent: from endpoint('network') to service('NETBIOS') block traffic('any'),define intent uniIntent: for endpoint('network') block service('NETBIOS'),"1. Identify the network configuration action implied by the statement: to restrict traffic that is known to cause damage to the network or hosts, such as NETBIOS. ","2. Determine the important Nile entities: 'CIS', the traffic known to cause damage, and 'NETBIOS'. 3. 'CIS' is not a value of any Nile entity, but according to Rule 6, 'network' is a value of type ""endpoint"", which closest matches the value 'CIS'. We pair them together in Nile: endpoint('network'). The traffic known to cause damage is not explicitly stated in the statement, so we use the value 'any' as specified in Rule 8. We pair them together in Nile: traffic('any'). 'NETBIOS' is a value of the entity ""service"", so we pair them together in Nile: service('NETBIOS'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since the endpoint 'network' is an origin, it corresponds to the Nile operation ""from"". Since the service 'NETBIOS' is a destination, it corresponds to the Nile operation ""to"". Since we want to restrict the traffic, it corresponds to the Nile operation ""block"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: from endpoint('network') to service('NETBIOS') block traffic('any'),[''],False,False
44,All network traffic passing in or out of Brown's network is monitored by intrusion detection system for signs of compromises,define intent uniIntent: for endpoint('network') add middlebox('intrusion detection system'),define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to add an intrusion detection system to monitor all network traffic passing in or out of Brown's network. ,"2. Determine the important Nile entities: 'Brown's network' (an endpoint) and 'intrusion detection system' (a middlebox). 3. 'Brown's network' is not a value of any Nile entity, but according to Rule 6, 'network' is a value of type ""endpoint"", which closest matches the value 'Brown's network'. We pair them together in Nile: endpoint('network'). 'intrusion detection system' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""intrusion detection system""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') add middlebox('intrusion detection system'),[''],False,True
45,"You may not run any services (e.g., FTP services,listservers,P2P file sharing servers, publishing files via generic file services, etc.) via ResNet or NYURoam wireless networks","define intent uniIntent: for endpoint('resnet'), endpoint('wireless') block service('services')","define intent uniIntent: for endpoint('dorms'), endpoint('wireless') block protocol('ftp'), service('listserver'), traffic('peer2peer')","1. Identify the network configuration action implied by the statement: to block all services (e.g., FTP services, listservers, P2P file sharing servers, publishing files via generic file services, etc.) on the ResNet and NYURoam wireless networks. ","2. Determine the important Nile entities: 'services', 'ResNet', and 'NYURoam wireless networks'. 3. 'services' is a value of the entity ""service"", so we pair them together in Nile: service('services'). 'ResNet' is not a value of any Nile entity, but according to Rule 6, 'resnet' is a value of type ""endpoint"", which closest matches the value 'ResNet'. We pair them together in Nile: endpoint('resnet'). 'NYURoam wireless networks' is not a value of any Nile entity, but according to Rule 6, 'wireless' is a value of type ""endpoint"", which closest matches the value 'NYURoam wireless networks'. We pair them together in Nile: endpoint('wireless'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to block the services, it corresponds to the Nile operation ""block"". Since 'resnet' and 'wireless' are both endpoints, they correspond to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('resnet'), endpoint('wireless') block service('services')",[''],False,False
46,Housing does not normally limit the amount of bandwidth,define intent uniIntent: for endpoint('dorms') unset bandwidth(),define intent uniIntent: for endpoint('dorms') unset bandwidth(),1. Identify the network configuration action implied by the statement: to not set any bandwidth limits for Housing. ,"2. Determine the important Nile entities: 'Housing' (an endpoint) and 'bandwidth' (a bandwidth). 3. 'Housing' is not a value of any Nile entity, but according to Rule 6, 'dorms' is a value of type ""endpoint"", which closest matches the value 'Housing'. We pair them together in Nile: endpoint('dorms'). 'bandwidth' is a value of the entity ""bandwidth"". According to Rule 13, a ""bandwidth"" can have either zero parameters or three parameters, in which case they must consist of a ""qos_constraint"" ('max' or 'min'), a ""qos_value"" (a number), and a ""qos_unit"" (for example, 'gb', 'mb'). Since there are no parameters specified for the bandwidth, we give it zero parameters. In Nile, we have: bandwidth(). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". Since we do not want to set any bandwidth limits, the bandwidth corresponds to the Nile operation ""unset"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('dorms') unset bandwidth(),[''],True,True
47,"The UVA More Secure Network uses a firewall, a network security device designed to help protect your computer from hackers and other malicious people on the Internet.",define intent uniIntent: for endpoint('network') add middlebox('firewall'),define intent uniIntent: for endpoint('network') add middlebox('firewall'),1. Identify the network configuration action implied by the statement: to add a firewall for the UVA More Secure Network. ,"2. Determine the important Nile entities: 'UVA More Secure Network' (an endpoint) and 'firewall' (a middlebox). 3. 'UVA More Secure Network' is not a value of any Nile entity, but according to Rule 6, 'network' is a value of type ""endpoint"", which closest matches the value 'UVA More Secure Network'. We pair them together in Nile: endpoint('network'). 'firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middlebox, it corresponds to the Nile operation ""add"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') add middlebox('firewall'),[''],True,True
48,"The network firewall does prevent some applications from working in their normal manner, for example, video and audio conferencing products that use the H.323",define intent uniIntent: for middlebox('firewall') block traffic('H323 video conferencing'),define intent uniIntent: for endpoint('network') block traffic('H323 video conferencing'),1. Identify the network configuration action implied by the statement: to block video and audio conferencing products that use the H.323 protocol. ,2. Determine the important Nile entities: video and audio conferencing products that use the H.323 protocol and the network firewall. ,"3. According to Rule 8, 'H323 video conferencing' is a value of the entity 'traffic', so we pair them together in Nile: traffic('H323 video conferencing'). 'network firewall' is a value of the entity ""middlebox"", so we pair them together in Nile: middlebox(""firewall""). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to block the traffic, it corresponds to the Nile operation ""block"". Since the middlebox is not an origin or a destination, it corresponds to the Nile operation ""for"". ",5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for middlebox('firewall') block traffic('H323 video conferencing'),False,False
49,The UC Davis network is continually scanned for prohibited activities and network threats.,"define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'), middlebox('ids')",define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'),1. Identify the network configuration action implied by the statement: to continually scan the UC Davis network for prohibited activities and network threats. ,"2. Determine the important Nile entities: the 'UC Davis network', 'prohibited activities', and 'network threats'. 3. 'UC Davis network' is not a value of any Nile entity, but according to Rule 6, 'network' is a value of type ""endpoint"", which closest matches the value 'UC Davis network'. We pair them together in Nile: endpoint('network'). 'prohibited activities' is not a value of any Nile entity, but according to Rule 5, 'traffic monitor' is a value of type ""middlebox"", which closest matches the value 'prohibited activities'. We pair them together in Nile: middlebox('traffic monitor'). 'network threats' is not a value of any Nile entity, but according to Rule 5, 'ids' is a value of type ""middlebox"", which closest matches the value 'network threats'. We pair them together in Nile: middlebox('ids'). ","4. Each Nile entity corresponds to one of the Nile operations in Rule 3. Since we want to add the middleboxes, they correspond to the Nile operation ""add"". Since the endpoint is not an origin or a destination, it corresponds to the Nile operation ""for"". ","5. We put the Nile expressions together and add the header. Nile translation: define intent uniIntent: for endpoint('network') add middlebox('traffic monitor'), middlebox('ids')",[''],False,True
