{
    "IP Configuration": [
        {
            "text": "Configure connected interfaces between leaf and spine devices in separate class A IP network segments. Configure each leaf connected to the end-hosts appropriately so there is no conflict in IP addressing done for interfaces between leaf and spine devices.",
            "entities": {
                "operation": "configure",
                "target": [
                    "leaf interfaces",
                    "spine interfaces",
                    "end-hosts interfaces"
                ],
                "protocol": "IP",
                "qos_constraint": [
                    "separate class A IP network segments",
                    "no conflict in IP addressing"
                ]
            }
        },
        {
            "text": "Connect Ethernet4 of each Leaf to Ethernet4 of each Spine and assign IP addresses to them to bring up connectivity. Using Ethernet0 and Ethernet4 on each device, connect each leaf with each spine and assign IPâ€¦",
            "entities": {
                "operation": [
                    "connect",
                    "assign IP addresses"
                ],
                "protocol": "IP",
                "target": [
                    "Ethernet4 of each leaf",
                    "Ethernet4 of each spine"
                ]
            }
        }
    ],
    "BGP Configuration": [
        {
            "text": "Configure iBGP between Leaf and Spine devices. Configure eBGP between each leaf and end-hosts. Ensure end-hosts can ping each other.",
            "entities": {
                "operation": "configure",
                "protocol": [
                    "iBGP",
                    "eBGP"
                ],
                "target": [
                    "leaf",
                    "spine",
                    "end-hosts"
                ],
                "traffic_constraint": "ensure end-hosts can ping each other"
            }
        },
        {
            "text": "Assign different AS numbers on Leaf and Spine layers. Bring up the bgp peering between leaf and spine nodes using the IP addresses configured on the connected interfaces. Advertise the host routes from the locally connected servers within bgp.",
            "entities": {
                "operation": [
                    "assign AS numbers",
                    "bring up bgp peering",
                    "advertise routes"
                ],
                "target": [
                    "leaf layers",
                    "spine layers",
                    "servers"
                ],
                "protocol": "bgp",
                "traffic": "IP"
            }
        }
    ],
    "VXLAN Configuration": [
        {
            "text": "Ensure VXLAN works over the BGP and end-hosts can ping each other.",
            "entities": {
                "traffic_protocol": [
                    "VXLAN",
                    "BGP"
                ],
                "operation": [
                    "ensure",
                    "ping"
                ],
                "target": "end-hosts"
            }
        },
        {
            "text": "First ensure that the underlay connectivity has been established between leaf and spine routers. Then enable the overlay configuration on each of the leaf router. L2VNI configuration needs to be enabled for Intra vlan traffic and L3VNI configuration is needed for Inter vlan.",
            "entities": {
                "operation": [
                    "ensure underlay connectivity",
                    "enable overlay configuration"
                ],
                "target": [
                    "leaf routers",
                    "spine routers"
                ],
                "protocol": [
                    "L2VNI",
                    "L3VNI"
                ],
                "traffic": [
                    "intra vlan traffic",
                    "inter vlan traffic"
                ]
            }
        }
    ],
    "Port Channels Configuration": [
        {
            "text": "Configure layer-3 port-channels between interfaces connected between leaf and spine devices. Ensure that any two members of the same physical interface on either leaf or spine are not on the same port-channel.",
            "entities": {
                "operation": "configure",
                "protocol": "layer-3 port-channels",
                "target": [
                    "leaf interfaces",
                    "spine interfaces"
                ],
                "constraint": "ensure members of same physical interface not on the same port channel"
            }
        },
        {
            "text": "Connect multiple interfaces between leaf and spine routers. Group them together using portchannel configuration.",
            "entities": {
                "operation": "connect",
                "target": [
                    "interfaces on leaf routers",
                    "interfaces on spine routers"
                ],
                "group": "portchannel"
            }
        }
    ],
    "ACLs": [
        {
            "text": "If the IP address learned in the route is for directly connected neighbor then allow IP traffic for that route. Otherwise deny.",
            "entities": {
                "operation": [
                    "allow",
                    "deny"
                ],
                "traffic": "IP traffic",
                "qos_constraint": "directly connected neighbors only"
            }
        },
        {
            "text": "Configure acls on each leaf node filtering unwanted traffic. Allow only certain hosts behind leaf0 to talk to hosts behind leaf1. This is done by specifying the allowed source and destination IP addresses within the acl.",
            "entities": {
                "operation": "configure acls",
                "target": [
                    "leaf0",
                    "leaf1",
                    "hosts"
                ],
                "qos_constraint": "allow only certain hosts to talk to certain hosts",
                "traffic": [
                    "unwanted traffic",
                    "IP"
                ]
            }
        }
    ],
    "QoS Policies": [
        {
            "text": "Classify IP traffic that originates on end-hosts to DCP 2. Ensure that traffic that has DSCP set to 2 is mapped to Traffic class 3. Rest of the traffic should be mapped to 1. On every leaf device, apply to every interface that is connected to the end-hosts.",
            "entities": {
                "operation": "classify traffic",
                "traffic_protocol": [
                    "IP",
                    "DSCP"
                ],
                "target": [
                    "leaf devices",
                    "end-hosts",
                    "interfaces"
                ],
                "details": [
                    "DCP 2",
                    "traffic class 3"
                ]
            }
        },
        {
            "text": "Configure the buffer pools for ingress and egress traffic profiles. On each leaf enable qos policy by mapping traffic to different classes using the DSCP values. Then map the traffic classes to different queues.",
            "entities": {
                "operation": [
                    "configure buffer pools",
                    "map traffic classes"
                ],
                "details": [
                    "DSCP",
                    "traffic classes"
                ],
                "target": "leaf"
            }
        }
    ],
    "OSPF Routing": [
        {
            "text": "Enable the OSPF router process on each leaf and spine node. Then enable the corresponding ospf configuration on each of the interfaces exchanging ospf data with peers. Configure the networks which needed to be advertised via ospf on each of the nodes.",
            "entities": {
                "operation": [
                    "enable",
                    "configure"
                ],
                "protocol": "OSPF",
                "target": [
                    "interfaces on leaf",
                    "interfaces on spine"
                ]
            }
        }
    ]
}