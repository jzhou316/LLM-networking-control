[
    {
        "entities": {
            "target": [
                "students",
                "ResNet"
            ],
            "middlebox": "copyright-monitoring",
            "operation": "block"
        },
        "intent_statement": "define intent blockCopyrightViolation: for group('students') block middlebox('copyright-monitoring') for target('ResNet')"
    },
    {
        "entities": {
            "target": "University of Illinois",
            "qos_metric": "rate limits",
            "qos_value": "none"
        },
        "intent_statement": "define intent rateLimitIntent: for target('University of Illinois') unset qos('rate limits', 'none')"
    },
    {
        "entities": {
            "traffic": "amount of traffic",
            "target": "University Housing"
        },
        "intent_statement": "define intent trafficMonitoring: for group('University Housing') set traffic('amount of traffic')"
    },
    {
        "entities": {
            "service": "CounterStrike",
            "middlebox": "firewall",
            "operation": "block",
            "origin": "university"
        },
        "intent_statement": "define intent blockService: from endpoint('university') block service('CounterStrike')"
    },
    {
        "entities": {
            "service": "file transfer",
            "middlebox": "firewall",
            "target": "University"
        },
        "intent_statement": "define intent allowAIMFileTransfer: for group('University') allow service('AIM Chat'), service('file transfer')"
    },
    {
        "entities": {
            "service": "Battlenet",
            "middlebox": "firewall",
            "target": "university",
            "operation": "allow"
        },
        "intent_statement": "define intent allowBattlenet: for group('university') allow service('Battlenet')"
    },
    {
        "entities": {
            "service": "H323 video conferencing",
            "operation": "allow",
            "middlebox": "firewall",
            "target": "University"
        },
        "intent_statement": "define intent qosIntent: for group('University') allow service('H323 video conferencing')"
    },
    {
        "entities": {
            "middlebox": "firewall",
            "service": "Everquest",
            "operation": "block",
            "target": "University"
        },
        "intent_statement": "define intent blockService: for group('University') block service('Everquest')"
    },
    {
        "entities": {
            "protocol": [
                "HTTP",
                "HTTPS"
            ],
            "middlebox": "firewall",
            "target": "University",
            "operation": "allow"
        },
        "intent_statement": "define intent qosIntent: for group('University') allow protocol('HTTP'), protocol('HTTPS')"
    },
    {
        "entities": {
            "protocol": [
                "IMAP",
                "secure IMAP"
            ],
            "operation": "allow",
            "middlebox": "firewall",
            "target": "University"
        },
        "intent_statement": "define intent qosIntent: for group('University') allow protocol('IMAP'), protocol('secure IMAP')"
    },
    {
        "entities": {
            "middlebox": "firewall",
            "service": [
                "MSN audio",
                "MSN video",
                "MSN chat",
                "MSN application sharing",
                "file transferring"
            ],
            "operation": [
                "block",
                "allow"
            ],
            "target": "University"
        },
        "intent_statement": "define intent qosIntent: for group('University') block service('MSN audio'), service('MSN video') allow service('MSN chat'), service('MSN application sharing'), service('file transferring')"
    },
    {
        "entities": {
            "service": "Net2Phone",
            "middlebox": "firewall",
            "target": "University",
            "operation": "allow"
        },
        "intent_statement": "define intent qosIntent: for group('University') allow service('Net2Phone')"
    },
    {
        "entities": {
            "service": "PC Telephone",
            "middlebox": "firewall",
            "target": "University"
        },
        "intent_statement": "define intent qosIntent: for service('PC Telephone') allow middlebox('firewall') for group('University')"
    },
    {
        "entities": {
            "protocol": [
                "POP3",
                "secure POP"
            ],
            "operation": "allow",
            "middlebox": "firewall",
            "target": "University"
        },
        "intent_statement": "define intent qosIntent: for group('University') allow protocol('POP3'), protocol('secure POP')"
    },
    {
        "entities": {
            "protocol": "smtp",
            "middlebox": "firewall",
            "target": "university",
            "operation": "allow"
        },
        "intent_statement": "define intent qosIntent: for group('university') allow protocol('smtp')"
    },
    {
        "entities": {
            "service": "PlayStation 2",
            "middlebox": "firewall",
            "target": "university",
            "operation": "allow"
        },
        "intent_statement": "define intent qosIntent: for service('PlayStation 2') allow middlebox('firewall') for group('university')"
    },
    {
        "entities": {
            "protocol": "SSH",
            "middlebox": "firewall",
            "target": "University",
            "operation": "allow"
        },
        "intent_statement": "define intent: for group('University') allow protocol('SSH') middlebox('firewall')"
    },
    {
        "entities": {
            "protocol": "Telnet",
            "operation": "allow",
            "middlebox": "firewall",
            "target": "University"
        },
        "intent_statement": "define intent qosIntent: for group('University') allow protocol('Telnet')"
    },
    {
        "entities": {
            "service": "Sorenson Videophone 200",
            "middlebox": "firewall",
            "operation": "allow",
            "target": "University"
        },
        "intent_statement": "define intent qosIntent: for service('Sorenson Videophone 200') allow middlebox('firewall')"
    },
    {
        "entities": {
            "protocol": [
                "FTP",
                "SFTP"
            ],
            "middlebox": "firewall",
            "target": "University"
        },
        "intent_statement": "define intent qosIntent: for group('University') allow protocol('FTP'), protocol('SFTP')"
    },
    {
        "entities": {
            "target": "students",
            "qos_constraint": "download",
            "qos_metric": "quota",
            "qos_value": "100",
            "qos_unit": "gb/wk"
        },
        "intent_statement": "define intent qosIntent: for group('students') set quota('download', '100', 'gb/wk')"
    },
    {
        "entities": {
            "target": "students",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/d",
            "start": "10:00",
            "end": "24:00"
        },
        "intent_statement": "define intent qosIntent: for group('students') set quota('10', 'download', 'gb/d') start hour('10:00') end hour('24:00')"
    },
    {
        "entities": {
            "middlebox": "network throughput monitor",
            "traffic": "light"
        },
        "intent_statement": "define intent monitorIntent: add middlebox('network throughput monitor') for traffic('light')"
    },
    {
        "entities": {
            "qos_constraint": "download",
            "qos_value": "6",
            "qos_unit": "gb/d",
            "traffic": "all",
            "target": "UIC wireless",
            "start": "midnight",
            "interval": "24-hour period"
        },
        "intent_statement": "define intent qosIntent: for group('ResNet'), group('UIC wireless') set quota('upload', '6', 'gb/d'), quota('download', '6', 'gb/d') for traffic('all') start hour('midnight') interval '24-hour period'"
    },
    {
        "entities": {
            "target": "guests",
            "operation": "block",
            "service": "file sharing"
        },
        "intent_statement": "define intent qosIntent: for group('guests') block service('file sharing')"
    },
    {
        "entities": {
            "network": "wired/wireless network",
            "qos_metric": "quota",
            "qos_value": "10",
            "qos_unit": "gb/d",
            "qos_constraint": "no more than"
        },
        "intent_statement": "define intent qosIntent: for network('wired/wireless network') set quota('no more than', '10', 'gb/d')"
    },
    {
        "entities": {
            "qos_metric": "average usage",
            "qos_constraint": "exceeds",
            "qos_value": "10",
            "qos_unit": "gb/wk"
        },
        "intent_statement": "define intent overuseNotification: set quota('average usage', 'exceeds', '10', 'gb/wk')"
    },
    {
        "entities": {
            "target": "students",
            "qos_constraint": [
                "download",
                "upload"
            ],
            "qos_value": [
                "5000",
                "2000"
            ],
            "qos_unit": "mb/h"
        },
        "intent_statement": "define intent qosIntent: for group('students') set quota('download', '5000', 'mb/h'), quota('upload', '2000', 'mb/h')"
    },
    {
        "entities": {
            "protocol": "nat",
            "destination": "MITNet",
            "operation": "block"
        },
        "intent_statement": "define intent prohibitNat: for endpoint('MITNet') block protocol('nat')"
    },
    {
        "entities": {
            "qos_metric": "quota",
            "qos_value": [
                "10",
                "5"
            ],
            "qos_unit": [
                "gb/d",
                "gb/wk"
            ],
            "operation": "set",
            "target": "individual"
        },
        "intent_statement": "define intent qosIntent: for group('individual') set quota('18', 'gb') set bandwidth('2', 'mbps')"
    },
    {
        "entities": {
            "qos_constraint": "limit",
            "qos_metric": "bandwidth",
            "qos_value": "4",
            "qos_unit": "mbps"
        },
        "intent_statement": "define intent qosIntent: set bandwidth('max', '4', 'mbps')"
    },
    {
        "entities": {
            "target": [
                "RHIT-OPEN",
                "labs",
                "classrooms",
                "residence halls",
                "internal Rose-Hulman network"
            ]
        },
        "intent_statement": "define intent networkIntent: for group('RHIT-OPEN') allow target('labs'), target('classrooms'), target('residence halls') block target('internal Rose-Hulman network')"
    },
    {
        "entities": {
            "protocol": [
                "ftp",
                "telnet",
                "peer-to-peer",
                "http",
                "irc",
                "dns"
            ],
            "service": [
                "mail servers"
            ],
            "operation": "block",
            "target": "users"
        },
        "intent_statement": "define intent blockServices: for group('users') block protocol('ftp'), protocol('telnet'), protocol('peer-to-peer'), protocol('http'), protocol('irc'), protocol('dns'), service('mail servers')"
    },
    {
        "entities": {
            "target": "students",
            "qos_metric": "quota",
            "qos_value": "200",
            "qos_unit": "gb/mth"
        },
        "intent_statement": "define intent qosIntent: for group('students') set quota('200', 'download', 'gb/mth')"
    },
    {
        "entities": {
            "target": "faculty",
            "qos_value": "500",
            "qos_unit": "gb/wk"
        },
        "intent_statement": "define intent facultyQuota: set quota('500', 'gb/wk') for group('faculty')"
    },
    {
        "entities": {
            "target": "students",
            "qos_value": "5",
            "qos_unit": "gb/d",
            "hour": "06:00"
        },
        "intent_statement": "define intent quotaIntent: for group('students') set quota('5', 'gb/d') start hour('06:00')"
    },
    {
        "entities": {
            "qos_constraint": "limit",
            "qos_metric": "bandwidth",
            "qos_value": "3",
            "qos_unit": "mbps",
            "target": "hosts"
        },
        "intent_statement": "define intent qosIntent: set bandwidth('max', '3', 'mbps') for hosts"
    },
    {
        "entities": {
            "traffic": "P2P application",
            "qos_constraint": "capped",
            "qos_value": "30",
            "qos_unit": "mbps",
            "target": "entire campus"
        },
        "intent_statement": "define intent qosIntent: for traffic('P2P application') set bandwidth('max', '30', 'mbps') for target('entire campus')"
    },
    {
        "entities": {
            "target": "guests",
            "qos_metric": "bandwidth",
            "qos_value": "5",
            "qos_unit": "mbps"
        },
        "intent_statement": "define intent qosIntent: for group('guests') set bandwidth('max', '5', 'mbps')"
    },
    {
        "entities": {
            "qos_metric": "quota",
            "qos_value": "200",
            "qos_unit": "gb/wk",
            "traffic": "incoming and outgoing"
        },
        "intent_statement": "define intent qosIntent: set quota('200', 'gb/wk') for traffic('incoming and outgoing')"
    },
    {
        "entities": {
            "operation": "block",
            "traffic": "traffic",
            "origin": "Internet",
            "destination": "UW network",
            "protocol": "FTP"
        },
        "intent_statement": "define intent networkSecurityChange: from endpoint('Internet') to endpoint('UW network') block protocol('FTP')"
    },
    {
        "entities": {
            "middlebox": [
                "Network Border Infrastructure System",
                "Intrusion Prevention System",
                "Firewalls",
                "Custom Unit Firewalls"
            ]
        },
        "intent_statement": "define intent networkSecurityIntent: add middlebox('Network Border Infrastructure System'), middlebox('Intrusion Prevention System'), middlebox('Firewalls'), middlebox('Custom Unit Firewalls')"
    },
    {
        "entities": {
            "middlebox": "traffic monitor",
            "traffic": "network traffic"
        },
        "intent_statement": "define intent monitorIntent: add middlebox('traffic monitor') for traffic('network traffic')"
    },
    {
        "entities": {
            "traffic": "NETBIOS",
            "operation": "restrict"
        },
        "intent_statement": "define intent restrictIntent: block traffic('NETBIOS')"
    },
    {
        "entities": {
            "traffic": "all",
            "middlebox": "ids",
            "origin": "Brown's network",
            "operation": "monitored"
        },
        "intent_statement": "define intent networkMonitoring: for traffic('all') add middlebox('ids') from endpoint('Brown's network')"
    },
    {
        "entities": {
            "operation": "block",
            "service": [
                "FTP",
                "listservers",
                "P2P file sharing servers",
                "generic file services"
            ],
            "origin": "NYURoam"
        },
        "intent_statement": "define intent: qosIntent: for endpoint('ResNet'), endpoint('NYURoam') block service('FTP'), service('listservers'), service('P2P file sharing servers'), service('generic file services')"
    },
    {
        "entities": {
            "qos_constraint": "does not have any",
            "qos_metric": "bandwidth",
            "endpoint": "housing"
        },
        "intent_statement": "define intent: qosIntent: for endpoint('housing') unset bandwidth"
    },
    {
        "entities": {
            "middlebox": "firewall"
        },
        "intent_statement": "define intent securityIntent: add middlebox('firewall')"
    },
    {
        "entities": {
            "middlebox": "firewall",
            "service": "H323 video conferencing"
        },
        "intent_statement": "define intent qosIntent: add middlebox('firewall') block service('H323 video conferencing')"
    },
    {
        "entities": {
            "operation": "scan",
            "middlebox": "ips",
            "traffic": "network threats",
            "target": "UC Davis network"
        },
        "intent_statement": "define intent scanIntent: for target('UC Davis network') add middlebox('ids'), middlebox('ips') allow traffic('prohibited activities'), traffic('network threats')"
    }
]